{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/app/assets/images/redash_icon_small.png","webpack:///./node_modules/@redash/viz/node_modules/moment/locale sync en","webpack:///./client/app/assets/images sync \\.(png|jpe","webpack:///./client/app/assets/images/db-logos/Cassandra.png","webpack:///./client/app/assets/images/db-logos/athena.png","webpack:///./client/app/assets/images/db-logos/aws_es.png","webpack:///./client/app/assets/images/db-logos/axibasetsd.png","webpack:///./client/app/assets/images/db-logos/azure_kusto.png","webpack:///./client/app/assets/images/db-logos/bigquery.png","webpack:///./client/app/assets/images/db-logos/bigquery_gce.png","webpack:///./client/app/assets/images/db-logos/clickhouse.png","webpack:///./client/app/assets/images/db-logos/cloudwatch.png","webpack:///./client/app/assets/images/db-logos/cloudwatch_insights.png","webpack:///./client/app/assets/images/db-logos/cockroach.png","webpack:///./client/app/assets/images/db-logos/corporate_memory.png","webpack:///./client/app/assets/images/db-logos/couchbase.png","webpack:///./client/app/assets/images/db-logos/csv.png","webpack:///./client/app/assets/images/db-logos/databricks.png","webpack:///./client/app/assets/images/db-logos/db2.png","webpack:///./client/app/assets/images/db-logos/dgraph.png","webpack:///./client/app/assets/images/db-logos/drill.png","webpack:///./client/app/assets/images/db-logos/druid.png","webpack:///./client/app/assets/images/db-logos/dynamodb_sql.png","webpack:///./client/app/assets/images/db-logos/elasticsearch.png","webpack:///./client/app/assets/images/db-logos/exasol.png","webpack:///./client/app/assets/images/db-logos/excel.png","webpack:///./client/app/assets/images/db-logos/firebolt.png","webpack:///./client/app/assets/images/db-logos/google_analytics.png","webpack:///./client/app/assets/images/db-logos/google_spreadsheets.png","webpack:///./client/app/assets/images/db-logos/graphite.png","webpack:///./client/app/assets/images/db-logos/hive.png","webpack:///./client/app/assets/images/db-logos/hive_http.png","webpack:///./client/app/assets/images/db-logos/impala.png","webpack:///./client/app/assets/images/db-logos/influxdb.png","webpack:///./client/app/assets/images/db-logos/jirajql.png","webpack:///./client/app/assets/images/db-logos/json.png","webpack:///./client/app/assets/images/db-logos/kibana.png","webpack:///./client/app/assets/images/db-logos/kylin.png","webpack:///./client/app/assets/images/db-logos/mapd.png","webpack:///./client/app/assets/images/db-logos/memsql.png","webpack:///./client/app/assets/images/db-logos/mongodb.png","webpack:///./client/app/assets/images/db-logos/mssql.png","webpack:///./client/app/assets/images/db-logos/mssql_odbc.png","webpack:///./client/app/assets/images/db-logos/mysql.png","webpack:///./client/app/assets/images/db-logos/oracle.png","webpack:///./client/app/assets/images/db-logos/pg.png","webpack:///./client/app/assets/images/db-logos/phoenix.png","webpack:///./client/app/assets/images/db-logos/presto.png","webpack:///./client/app/assets/images/db-logos/prometheus.png","webpack:///./client/app/assets/images/db-logos/python.png","webpack:///./client/app/assets/images/db-logos/qubole.png","webpack:///./client/app/assets/images/db-logos/rds_mysql.png","webpack:///./client/app/assets/images/db-logos/redshift.png","webpack:///./client/app/assets/images/db-logos/redshift_iam.png","webpack:///./client/app/assets/images/db-logos/results.png","webpack:///./client/app/assets/images/db-logos/rockset.png","webpack:///./client/app/assets/images/db-logos/salesforce.png","webpack:///./client/app/assets/images/db-logos/scylla.png","webpack:///./client/app/assets/images/db-logos/snowflake.png","webpack:///./client/app/assets/images/db-logos/sparql_endpoint.png","webpack:///./client/app/assets/images/db-logos/sqlite.png","webpack:///./client/app/assets/images/db-logos/treasuredata.png","webpack:///./client/app/assets/images/db-logos/trino.png","webpack:///./client/app/assets/images/db-logos/uptycs.png","webpack:///./client/app/assets/images/db-logos/url.png","webpack:///./client/app/assets/images/db-logos/vertica.png","webpack:///./client/app/assets/images/db-logos/yandex_appmetrika.png","webpack:///./client/app/assets/images/db-logos/yandex_metrika.png","webpack:///./client/app/assets/images/destinations/chatwork.png","webpack:///./client/app/assets/images/destinations/email.png","webpack:///./client/app/assets/images/destinations/hangouts_chat.png","webpack:///./client/app/assets/images/destinations/hipchat.png","webpack:///./client/app/assets/images/destinations/mattermost.png","webpack:///./client/app/assets/images/destinations/pagerduty.png","webpack:///./client/app/assets/images/destinations/slack.png","webpack:///./client/app/assets/images/destinations/webhook.png","webpack:///./client/app/assets/images/favicon-16x16.png","webpack:///./client/app/assets/images/favicon-32x32.png","webpack:///./client/app/assets/images/favicon-96x96.png","webpack:///./client/app/assets/images/fixtures/map-tile.png","webpack:///./client/app/assets/images/google_logo.svg","webpack:///./client/app/assets/images/illustrations/alert.svg","webpack:///./client/app/assets/images/illustrations/dashboard.svg","webpack:///./client/app/assets/images/illustrations/no-query-results.svg","webpack:///./client/app/assets/images/illustrations/query.svg","webpack:///./client/app/assets/images/logo.png","webpack:///./client/app/assets/images/logo_white.png","webpack:///[\\\\/.]test[\\\\./]).)*\\.jsx","webpack:///./client/app/components/Link.tsx","webpack:///./client/app/services/location.js","webpack:///./client/app/services/restoreSession.jsx","webpack:///./client/app/services/axios.js","webpack:///./client/app/services/auth.js","webpack:///./client/app/services/policy/index.js","webpack:///./client/app/services/policy/DefaultPolicy.js","webpack:///./client/app/services/organizationStatus.js","webpack:///./client/app/components/DynamicComponent.jsx","webpack:///./client/app/components/PlainButton.tsx","webpack:///./client/app/components/Tooltip.tsx","webpack:///./client/app/lib/hooks/useUniqueId.ts","webpack:///./client/app/lib/hooks/useLazyRef.ts","webpack:///./client/app/components/BigMessage.jsx","webpack:///./client/app/components/HelpTrigger.jsx","webpack:///./client/app/components/DialogWrapper.jsx","webpack:///./client/app/services/url.js","webpack:///./client/app/components/ApplicationArea/ErrorMessageDetails.jsx","webpack:///./client/app/components/ApplicationArea/ErrorMessage.jsx","webpack:///./client/app/components/ApplicationArea/Router.jsx","webpack:///./client/app/components/ApplicationArea/navigateTo.js","webpack:///./client/app/services/recordEvent.js","webpack:///./client/app/config/dashboard-grid-options.js","webpack:///./client/app/services/parameters/Parameter.js","webpack:///./client/app/services/parameters/TextParameter.js","webpack:///./client/app/services/parameters/NumberParameter.js","webpack:///./client/app/services/parameters/EnumParameter.js","webpack:///./client/app/services/query-result.js","webpack:///./client/app/lib/localOptions.js","webpack:///./client/app/services/query.js","webpack:///./client/app/services/parameters/QueryBasedDropdownParameter.js","webpack:///./client/app/services/parameters/DateParameter.js","webpack:///./client/app/services/parameters/DateRangeParameter.js","webpack:///./client/app/services/parameters/index.js","webpack:///./client/app/services/widget.js","webpack:///./client/app/services/dashboard.js","webpack:///./client/app/components/dashboards/CreateDashboardDialog.jsx","webpack:///./client/app/services/settingsMenu.js","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/VersionInfo.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/DesktopNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/MobileNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/index.jsx","webpack:///./client/app/components/ApplicationArea/routeWithUserSession.tsx","webpack:///./client/app/components/empty-state/EmptyState.jsx","webpack:///./client/app/services/notification.js","webpack:///./client/app/services/organizationSettings.js","webpack:///./client/app/components/BeaconConsent.jsx","webpack:///./client/app/services/routes.ts","webpack:///./client/app/pages/home/components/FavoritesList.jsx","webpack:///./client/app/pages/home/Home.jsx","webpack:///./client/app/components/PageHeader/index.jsx","webpack:///./client/app/components/admin/Layout.jsx","webpack:///./client/app/components/FavoritesControl.jsx","webpack:///./client/app/components/proptypes.js","webpack:///./client/app/components/TimeAgo.jsx","webpack:///./client/app/lib/utils.js","webpack:///./client/app/components/items-list/components/ItemsTable.jsx","webpack:///./client/app/components/admin/RQStatus.jsx","webpack:///./client/app/pages/admin/Jobs.jsx","webpack:///./client/app/components/Paginator.jsx","webpack:///./client/app/components/tags-control/EditTagsDialog.jsx","webpack:///./client/app/components/tags-control/TagsControl.jsx","webpack:///./client/app/components/queries/SchedulePhrase.jsx","webpack:///./client/app/components/items-list/ItemsList.tsx","webpack:///./client/app/components/items-list/classes/Paginator.js","webpack:///./client/app/components/items-list/classes/Sorter.js","webpack:///./client/app/components/items-list/classes/ItemsFetcher.js","webpack:///./client/app/components/items-list/classes/ItemsSource.js","webpack:///./client/app/components/items-list/classes/StateStorage.js","webpack:///./client/app/components/items-list/components/LoadingState.jsx","webpack:///./client/app/pages/admin/OutdatedQueries.jsx","webpack:///./client/app/components/admin/StatusBlock.jsx","webpack:///./client/app/pages/admin/SystemStatus.jsx","webpack:///./client/app/services/alert.js","webpack:///./client/app/pages/alerts/AlertsList.jsx","webpack:///./client/app/pages/alert/components/MenuButton.jsx","webpack:///./client/app/pages/alert/components/Title.jsx","webpack:///./client/app/pages/alert/components/Criteria.jsx","webpack:///./client/app/pages/alert/components/Rearm.jsx","webpack:///./client/app/lib/hooks/useSearchResults.js","webpack:///./client/app/components/QuerySelector.jsx","webpack:///./client/app/pages/alert/components/Query.jsx","webpack:///./client/app/components/SelectItemsDialog.jsx","webpack:///./client/app/services/destination.js","webpack:///./client/app/services/alert-subscription.js","webpack:///./client/app/components/groups/ListItemAddon.jsx","webpack:///./client/app/components/EmailSettingsWarning.jsx","webpack:///./client/app/pages/alert/components/AlertDestinations.jsx","webpack:///./client/app/pages/alert/components/HorizontalFormItem.jsx","webpack:///./client/app/pages/alert/AlertView.jsx","webpack:///./client/app/pages/alert/components/NotificationTemplate.jsx","webpack:///./client/app/pages/alert/AlertEdit.jsx","webpack:///./client/app/pages/alert/AlertNew.jsx","webpack:///./client/app/pages/alert/Alert.jsx","webpack:///./client/app/services/getTags.js","webpack:///./client/app/components/TagsList.tsx","webpack:///./client/app/components/items-list/components/Sidebar.jsx","webpack:///./client/app/components/items-list/hooks/useItemsListExtraActions.js","webpack:///./client/app/components/layouts/ContentWithSidebar.jsx","webpack:///./client/app/components/NoTaggedObjectsFound.jsx","webpack:///./client/app/pages/dashboards/components/DashboardListEmptyState.tsx","webpack:///./client/app/pages/dashboards/DashboardList.jsx","webpack:///./client/app/services/KeyboardShortcuts.js","webpack:///./client/app/components/ParameterApplyButton.jsx","webpack:///./client/app/lib/calculateTextWidth.ts","webpack:///./client/app/components/SelectWithVirtualScroll.tsx","webpack:///./client/app/components/DateInput.jsx","webpack:///./client/app/components/DateTimeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicButton.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDatePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateParameter.jsx","webpack:///./client/app/components/DateRangeInput.jsx","webpack:///./client/app/components/DateTimeRangeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDateRangePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateRangeParameter.jsx","webpack:///./client/app/components/QueryBasedParameterInput.jsx","webpack:///./client/app/components/ParameterValueInput.jsx","webpack:///./client/app/components/EditParameterSettingsDialog.jsx","webpack:///./client/app/components/Parameters.jsx","webpack:///./client/app/components/Timer.jsx","webpack:///./client/app/components/visualizations/VisualizationName.jsx","webpack:///./client/app/components/QueryLink.jsx","webpack:///./client/app/components/Filters.jsx","webpack:///./client/app/lib/useQueryResultData.js","webpack:///./client/app/lib/hooks/useImmutableCallback.js","webpack:///./client/app/components/visualizations/visualizationComponents.jsx","webpack:///./client/app/components/visualizations/VisualizationRenderer.jsx","webpack:///./client/app/components/dashboards/ExpandedWidgetDialog.jsx","webpack:///./client/app/components/ParameterMappingInput.jsx","webpack:///./client/app/components/dashboards/EditParameterMappingsDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/Widget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/VisualizationWidget.jsx","webpack:///./client/app/components/dashboards/TextboxDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/TextboxWidget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/RestrictedWidget.jsx","webpack:///./client/app/components/dashboards/AutoHeightController.js","webpack:///./client/app/components/dashboards/DashboardGrid.jsx","webpack:///./client/app/services/resizeObserver.js","webpack:///./client/app/components/dashboards/AddWidgetDialog.jsx","webpack:///./client/app/components/PreviewCard.jsx","webpack:///./client/app/services/sanitize.js","webpack:///./client/app/services/user.js","webpack:///./client/app/components/PermissionsEditorDialog/index.jsx","webpack:///./client/app/components/InputWithCopy.jsx","webpack:///./client/app/pages/dashboards/components/ShareDashboardDialog.jsx","webpack:///./client/app/lib/hooks/useFullscreenHandler.js","webpack:///./client/app/pages/dashboards/hooks/useRefreshRateHandler.js","webpack:///./client/app/pages/dashboards/hooks/useEditModeHandler.js","webpack:///./client/app/pages/dashboards/hooks/useDashboard.js","webpack:///./client/app/components/EditInPlace.jsx","webpack:///./client/app/pages/dashboards/components/DashboardHeader.jsx","webpack:///./client/app/pages/dashboards/DashboardPage.jsx","webpack:///./client/app/components/ApplicationArea/routeWithApiKeySession.jsx","webpack:///./client/app/pages/dashboards/PublicDashboardPage.jsx","webpack:///./client/app/components/items-list/components/EmptyState.jsx","webpack:///./client/app/components/cards-list/CardsList.tsx","webpack:///./client/app/components/Collapse.jsx","webpack:///./client/app/components/dynamic-form/getFieldLabel.js","webpack:///./client/app/components/AceEditorInput.jsx","webpack:///./client/app/components/dynamic-form/fields/InputField.jsx","webpack:///./client/app/components/dynamic-form/DynamicFormField.jsx","webpack:///./client/app/components/dynamic-form/fields/CheckboxField.jsx","webpack:///./client/app/components/dynamic-form/fields/FileField.jsx","webpack:///./client/app/components/dynamic-form/fields/SelectField.jsx","webpack:///./client/app/components/dynamic-form/fields/NumberField.jsx","webpack:///./client/app/components/dynamic-form/fields/TextAreaField.jsx","webpack:///./client/app/components/dynamic-form/fields/AceEditorField.jsx","webpack:///./client/app/components/dynamic-form/fields/ContentField.jsx","webpack:///./client/app/components/dynamic-form/dynamicFormHelper.js","webpack:///./client/app/components/dynamic-form/DynamicForm.jsx","webpack:///./client/app/components/CreateSourceDialog.jsx","webpack:///./client/app/components/SettingsWrapper.jsx","webpack:///./client/app/services/data-source.js","webpack:///./client/app/pages/data-sources/DataSourcesList.jsx","webpack:///./client/app/pages/data-sources/EditDataSource.jsx","webpack:///./client/app/pages/destinations/DestinationsList.jsx","webpack:///./client/app/pages/destinations/EditDestination.jsx","webpack:///./client/app/components/groups/CreateGroupDialog.jsx","webpack:///./client/app/services/group.js","webpack:///./client/app/components/groups/DeleteGroupButton.jsx","webpack:///./client/app/pages/groups/GroupsList.jsx","webpack:///./client/app/components/groups/GroupName.jsx","webpack:///./client/app/components/groups/DetailsPageSidebar.jsx","webpack:///./client/app/pages/groups/GroupDataSources.jsx","webpack:///./client/app/pages/groups/GroupMembers.jsx","webpack:///./client/app/pages/queries-list/QueriesListEmptyState.jsx","webpack:///./client/app/pages/queries-list/QueriesList.jsx","webpack:///./client/app/components/Resizable/index.jsx","webpack:///./client/app/lib/queryFormat.ts","webpack:///./client/app/pages/queries/hooks/useQueryFlags.js","webpack:///./client/app/pages/queries/hooks/useArchiveQuery.jsx","webpack:///./client/app/pages/queries/hooks/useUpdateQuery.jsx","webpack:///./client/app/pages/queries/hooks/useDuplicateQuery.js","webpack:///./client/app/components/CodeBlock.jsx","webpack:///./client/app/components/queries/ApiKeyDialog/index.jsx","webpack:///./client/app/pages/queries/components/QueryPageHeader.jsx","webpack:///./client/app/pages/queries/hooks/useRenameQuery.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryTags.js","webpack:///./client/app/pages/queries/hooks/usePublishQuery.js","webpack:///./client/app/pages/queries/hooks/useUnpublishQuery.js","webpack:///./client/app/pages/queries/hooks/useApiKeyDialog.js","webpack:///./client/app/pages/queries/hooks/usePermissionsEditorDialog.js","webpack:///./client/app/pages/queries/components/QueryMetadata.jsx","webpack:///./client/app/pages/queries/components/QueryVisualizationTabs.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionStatus.jsx","webpack:///./client/app/pages/queries/components/QuerySourceAlerts.jsx","webpack:///./client/app/pages/queries/components/wrapQueryPage.jsx","webpack:///./client/app/components/queries/AddToDashboardDialog.jsx","webpack:///./client/app/components/queries/EmbedQueryDialog.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryResultsLink.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryControlDropdown.jsx","webpack:///./client/app/components/EditVisualizationButton/index.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionMetadata.jsx","webpack:///./client/app/pages/queries/hooks/useAddToDashboardDialog.js","webpack:///./client/app/pages/queries/hooks/useEmbedDialog.js","webpack:///./client/app/pages/queries/hooks/useDataSourceSchema.js","webpack:///./client/app/components/queries/SchemaBrowser.jsx","webpack:///./client/app/components/queries/QueryEditor/ace.js","webpack:///./client/app/services/query-snippet.js","webpack:///./client/app/components/queries/QueryEditor/AutocompleteToggle.jsx","webpack:///./client/app/components/queries/QueryEditor/AutoLimitCheckbox.jsx","webpack:///./client/app/components/queries/QueryEditor/QueryEditorControls.jsx","webpack:///./client/app/components/queries/QueryEditor/index.jsx","webpack:///./client/app/lib/accessibility.ts","webpack:///./client/app/services/databricks-data-source.js","webpack:///./client/app/components/queries/editor-components/databricks/useDatabricksSchema.js","webpack:///./client/app/components/queries/editor-components/databricks/DatabricksSchemaBrowser.jsx","webpack:///./client/app/components/queries/editor-components/editorComponents.js","webpack:///./client/app/pages/queries/hooks/useVisualizationTabHandler.js","webpack:///./client/app/pages/queries/hooks/useAutocompleteFlags.js","webpack:///./client/app/pages/queries/hooks/useAutoLimitFlags.js","webpack:///./client/app/components/queries/editor-components/index.js","webpack:///./client/app/services/notifications.js","webpack:///./client/app/pages/queries/hooks/useQueryExecute.js","webpack:///./client/app/pages/queries/hooks/useQueryParameters.js","webpack:///./client/app/components/queries/ScheduleDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditScheduleDialog.js","webpack:///./client/app/services/visualization.js","webpack:///./client/app/components/visualizations/EditVisualizationDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditVisualizationDialog.js","webpack:///./client/app/pages/queries/hooks/useDeleteVisualization.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryDescription.js","webpack:///./client/app/pages/queries/components/QuerySourceTypeIcon.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdownItem.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdown.jsx","webpack:///./client/app/pages/queries/QuerySource.jsx","webpack:///./client/app/pages/queries/hooks/useQuery.js","webpack:///./client/app/pages/queries/hooks/useQueryDataSources.js","webpack:///./client/app/pages/queries/hooks/useUnsavedChangesAlert.js","webpack:///./client/app/pages/queries/hooks/useAddNewParameterDialog.js","webpack:///./client/app/pages/queries/hooks/useAddVisualizationDialog.js","webpack:///./client/app/pages/queries/components/QueryViewButton.jsx","webpack:///./client/app/pages/queries/QueryView.jsx","webpack:///./client/app/pages/queries/VisualizationEmbed.jsx","webpack:///./client/app/components/query-snippets/QuerySnippetDialog.jsx","webpack:///./client/app/pages/query-snippets/QuerySnippetsList.jsx","webpack:///./client/app/pages/settings/hooks/useOrganizationSettings.js","webpack:///./client/app/pages/settings/components/prop-types.js","webpack:///./client/app/pages/settings/components/GeneralSettings/FormatSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/PlotlySettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/FeatureFlagsSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/BeaconConsentSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/index.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/PasswordLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/GoogleLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/SAMLSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/index.jsx","webpack:///./client/app/pages/settings/OrganizationSettings.jsx","webpack:///./client/app/styles/formStyle.ts","webpack:///./client/app/services/utils.js","webpack:///./client/app/pages/users/components/CreateUserDialog.jsx","webpack:///./client/app/pages/users/UsersList.jsx","webpack:///./client/app/components/UserGroups.jsx","webpack:///./client/app/pages/users/hooks/useUserGroups.js","webpack:///./client/app/pages/users/components/UserInfoForm.jsx","webpack:///./client/app/pages/users/components/ApiKeyForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ChangePasswordDialog.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordLinkAlert.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordResetForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ResendInvitationForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/index.jsx","webpack:///./client/app/pages/users/components/ToggleUserForm.jsx","webpack:///./client/app/pages/users/components/EditableUserProfile.jsx","webpack:///./client/app/pages/users/components/ReadOnlyUserProfile.jsx","webpack:///./client/app/pages/users/UserProfile.jsx","webpack:///./client/app/config/index.js","webpack:///./client/app/components/ApplicationArea/handleNavigationIntent.js","webpack:///./client/app/config/antd-spinner.jsx","webpack:///./client/app/services/offline-listener.js","webpack:///./client/app/index.js","webpack:///./client/app/components/ApplicationArea/index.jsx","webpack:///./client/app/assets/images/avatar.svg","webpack:///./node_modules/moment/locale sync en"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","webpackEmptyContext","Link","children","props","Component","ButtonLink","WithIcon","icon","alt","className","External","aria-hidden","target","rel","Button","history","createBrowserHistory","normalizeLocation","rawLocation","pathname","search","hash","path","mapValues","qs","parse","isNil","trimStart","url","location","listen","handler","isFunction","unused","action","confirmChange","block","nextLocation","update","newLocation","replace","isObject","omitBy","isUndefined","extend","stringify","undefined","setPath","setSearch","setHash","locationChanged","showRestoreSessionPrompt","loginUrl","onSuccess","popup","Modal","warning","content","okText","Fragment","centered","mask","maskClosable","keyboard","onOk","closeModal","closed","width","height","windowLeft","windowTop","windowWidth","windowHeight","popupOptions","screenX","screenY","innerWidth","innerHeight","left","Math","floor","top","menubar","toolbar","resizable","scrollbars","status","open","join","handlePostMessage","event","type","close","removeEventListener","addEventListener","focus","restoreSessionPromise","axios","axiosLib","paramsSerializer","params","xsrfCookieName","xsrfHeaderName","interceptors","response","use","createAuthRefreshInterceptor","error","message","isAxiosError","includes","Promise","reject","statusCodes","parseInt","requestUrl","Auth","getLoginUrl","pauseInstanceWhileRefreshing","request","config","apiKey","getApiKey","headers","Authorization","currentUser","_isAdmin","canEdit","userId","user_id","user","this","isAdmin","canCreate","hasPermission","permission","permissions","clientConfig","messages","logger","debug","session","loaded","AuthUrls","Login","updateSession","sessionData","client_config","isAuthenticated","setLoginUrl","login","next","encodeURI","href","logout","loadSession","setApiKey","then","loadConfig","requireSession","opener","postMessage","origin","catch","policy","refresh","canCreateDataSource","isCreateDataSourceEnabled","canCreateDestination","isCreateDestinationEnabled","canCreateDashboard","isCreateDashboardEnabled","canCreateAlert","canCreateUser","isCreateUserEnabled","isCreateQuerySnippetEnabled","getDashboardRefreshIntervals","dashboardRefreshIntervals","isArray","getQueryRefreshIntervals","queryRefreshIntervals","canRun","constructor","objectCounters","object_counters","componentsRegistry","Map","activeInstances","Set","registerComponent","component","isString","set","forEach","dynamicComponent","forceUpdate","DynamicComponent","React","componentDidMount","add","componentWillUnmount","delete","render","fallback","RealComponent","PropTypes","string","isRequired","node","PlainButton","rest","classNames","Tooltip","title","restProps","liveTitle","role","aria-live","aria-relevant","trigger","useUniqueId","prefix","getInitialValue","lazyRef","uniqueId","useRef","current","BigMessage","messageId","aria-labelledby","cx","propTypes","defaultProps","TYPES","HOME","VALUE_SOURCE_OPTIONS","SHARE_DASHBOARD","AUTHENTICATION_OPTIONS","USAGE_DATA_SHARING","DS_ATHENA","DS_BIGQUERY","DS_URL","DS_MONGODB","DS_GOOGLE_SPREADSHEETS","DS_GOOGLE_ANALYTICS","DS_AXIBASETSD","DS_RESULTS","ALERT_SETUP","MAIL_CONFIG","ALERT_NOTIF_TEMPLATE_GUIDE","FAVORITES","MANAGE_PERMISSIONS","NUMBER_FORMAT_SPECS","GETTING_STARTED","DASHBOARDS","QUERIES","ALERTS","DOMAIN","HelpTriggerPropTypes","showTooltip","bool","renderAsLink","HelpTriggerDefaultProps","HelpTrigger","types","allowedDomains","drawerClassName","createRef","visible","loading","currentUrl","clearTimeout","iframeLoadingTimeout","setState","iframeRef","src","setTimeout","some","domain","startsWith","helpTriggerType","shiftKey","ctrlKey","metaKey","preventDefault","loadIframe","getUrl","onPostMessageReceived","targetUrl","tooltip","state","isAllowedDomain","shouldRenderAsLink","style","marginLeft","onClick","openDrawer","placement","closable","onClose","closeDrawer","destroyOnClose","ref","ready","onLoad","onIframeLoaded","onLeave","openPageUrl","oneOf","helpTriggerWithTypes","DialogPropType","shape","func","onCancel","afterClose","dismiss","wrap","DialogComponent","showModal","dialog","okButtonProps","cancelButtonProps","pendingCloseTask","handlers","onDismiss","container","document","createElement","ReactDOM","processDialogClose","setAdditionalDialogProps","disabled","finally","closeDialog","dismissDialog","body","appendChild","unmountComponentAtNode","removeChild","newProps","openDialog","link","display","fragmentProps","setAttribute","pick","fragments","normalize","ErrorMessageDetails","getErrorMessageByStatus","defaultMessage","getErrorMessage","ErrorMessage","console","errorDetailsProps","data-test","instanceOf","CurrentRouteContext","createContext","stripBase","baseHref","trimEnd","substr","Router","routes","onRouteChange","useState","currentRoute","setCurrentRoute","currentPathRef","errorHandlerRef","useEffect","isAbandoned","router","UniversalRouter","resolveRoute","routeParams","route","reset","random","toString","unlisten","Provider","renderError","navigateTo","arrayOf","objectOf","any","events","post","debounce","eventsToSend","recordEvent","objectType","objectId","additionalProperties","object_type","object_id","timestamp","Date","now","screen_resolution","screen","Parameter","parameter","parentQueryId","global","locals","urlPrefix","param","extra","getExecutionValue","setValue","isNull","normalizedValue","pendingValue","isEqual","$$value","isEmptyValue","normalizeValue","updateLocals","each","local","clearPendingValue","setPendingValue","applyPendingValue","hasPendingValue","toUrlParams","isEmpty","fromUrlParams","query","has","toQueryTextFragment","toSaveableObject","omit","TextParameter","super","NumberParameter","toNumber","isNaN","EnumParameter","enumOptions","multiValuesOptions","enumOptionsArray","split","intersection","joinListValues","separator","suffix","parameterValues","v","urlParam","JSON","valueFromJson","filterTypes","getColumnFriendlyName","column","typeSplit","indexOf","parts","getColumnNameWithoutType","a","toUpperCase","QueryResultResource","createOrSaveUrl","ExecutionStatus","statuses","1","2","3","4","handleErrorResponse","queryResult","job","sleep","ms","fetchDataFromJob","jobId","interval","QueryResult","deferred","onStatusChange","promise","query_result","updatedAt","moment","isLoadingResult","columnTypes","rows","row","forOwn","k","newType","isNumber","match","utc","columns","QueryResultError","getId","cancelExecution","getStatus","getError","getLog","log","getUpdatedAt","retrieved_at","updated_at","getRuntime","runtime","getRawData","getData","getColumns","getColumnNames","columnNames","getColumnFriendlyNames","col","getTruncated","truncated","getFilters","filters","filter","friendlyName","values","multiple","uniqBy","isMoment","unix","toPromise","statusCallback","queryId","loadLatestCachedResult","parameters","loadResult","tryCount","query_result_id","pow","refreshStatus","tryNumber","jobResponse","getLink","fileType","getName","queryName","format","applyAutoLimit","maxAge","apply_auto_limit","max_age","dataSourceId","data_source_id","query_id","PREFIX","defaultValue","fullKey","localStorage","getItem","setItem","Mustache","escape","identity","Query","options","isNew","hasDailySchedule","schedule","scheduleInLocalTime","hour","minute","hasResult","latest_query_data","latest_query_data_id","paramsRequired","getParameters","hasParameters","getParametersDefs","prepareQueryResultExecution","execute","missingParams","getMissing","paramsWord","valuesWord","getById","getQueryResult","getByQueryId","getExecutionValues","getAutoLimit","getQueryResultByText","selectedQueryText","queryText","source","encodeURIComponent","getQueryResultPromise","$parameters","Parameters","favorite","unfavorite","clone","newQuery","queryString","updateParameters","initFromQueryString","parseQuery","uniq","collectParams","part","union","cachedQueryText","parameterNames","parametersMap","createParameter","find","parameterDef","zipObject","hasPendingValues","applyPendingValues","errorMessage","getQuery","mapResults","results","QueryService","save","saveOrCreateUrl","recent","archive","myQueries","fork","resultById","asDropdown","associatedDropdown","dropdownQueryId","favorites","localOptions","tags","can_edit","QueryBasedDropdownParameter","loadDropdownValues","DATETIME_FORMATS","date","DYNAMIC_DATES","yesterday","subtract","DynamicDateType","isDynamicDateString","substring","isDynamicDate","getDynamicDateFromString","DateParameter","useCurrentDateTime","isValid","findKey","hasDynamicValue","untilNow","from","withNow","DYNAMIC_DATE_RANGES","today","startOf","endOf","this_week","this_month","this_year","last_week","last_month","last_year","last_hour","last_8_hours","last_24_hours","last_7_days","last_14_days","last_30_days","last_60_days","last_90_days","last_12_months","DynamicDateRangeType","isDynamicDateRangeString","isDynamicDateRange","getDynamicDateRangeFromString","DateRangeParameter","start","end","keyStart","keyEnd","dates","cloneParameter","WidgetTypeEnum","ParameterMappingType","DashboardLevel","WidgetLevel","StaticValue","Widget","visualizationOptions","widget","autoHeight","sizeX","round","dashboardGridOptions","sizeY","minSizeX","maxSizeX","minSizeY","maxSizeY","visualization","registeredVisualizations","minColumns","isFinite","maxColumns","min","ceil","minRows","maxRows","defaultWidth","defaultColumns","defaultHeight","defaultRows","calculatePositionOptions","position","restricted","truncate","text","load","force","refreshStartedAt","merge","isStaticParam","getParameterMappings","MappingType","mappings","queryParams","localTypes","localParameters","mapping","sortBy","paramOrder","size","parameterMappings","existingParams","mapTo","removedParams","difference","getLocalParameters","collectDashboardFilters","dashboard","queryResults","urlParams","_","queryFilters","queryFilter","hasQueryStringValue","dashboard_filters_enabled","prepareWidgetsForDashboard","widgets","defaultWidgetSizeY","max","chain","w","groupBy","reduce","widgetsAtRow","calculateNewWidgetPosition","existingWidgets","newWidget","bottomLine","right","bottom","item","to","Array","constant","range","first","Dashboard","slug","prepareDashboardWidgets","transformSingle","publicAccessEnabled","public_url","transformResponse","DashboardService","legacy","getByToken","token","myDashboards","CreateDashboardDialog","setName","setIsValid","saveInProgress","setSaveInProgress","footer","cancelText","wrapProps","onChange","trim","onPressEnter","placeholder","aria-label","autoFocus","globalParams","resultingGlobalParams","globalParamOrder","addWidget","textOrVisualization","dashboard_id","isHidden","visualization_id","wrapDialog","SettingsMenuItem","menuItem","pathPrefix","isActive","isAvailable","remove","items","getAvailableItems","getActiveItem","strippedPath","VersionInfo","version","frontendVersion","newVersionAvailable","NavbarSection","selectable","theme","useNavbarActiveState","useContext","useMemo","dashboards","queries","dataSources","alerts","DesktopNavbar","firstSettingsTab","settingsMenu","activeState","canCreateQuery","logoUrl","Item","SubMenu","popupClassName","tabIndex","profile_image_url","Divider","MobileNavbar","getPopupContainer","overlayStyle","minWidth","overlay","ghost","ApplicationLayout","mobileNavbarContainerRef","getMobileNavbarPopupContainer","useCallback","UserSessionWrapper","bodyClass","setIsAuthenticated","isCancelled","all","organizationStatus","classList","toggle","ErrorBoundary","Consumer","handleError","pageTitle","onError","routeWithUserSession","originalRender","Step","show","completed","urlText","commonProps","done","EmptyStateHelpMessage","EmptyState","header","description","illustration","helpMessage","onboardingMode","showAlertStep","showDashboardStep","showDataSourceStep","showInviteStep","getStepsItems","illustrationPath","dataSource","alert","inviteUsers","isCompleted","data_sources","users","showCreateDashboardDialog","step","defaultStepsItems","stepsItems","imageSource","urlTarget","getStepItems","notification","duration","simpleNotification","success","Text","Typography","BeaconConsent","hide","setHide","showBeaconConsentMessage","hideConsentCard","confirmConsent","confirm","OrgSettings","beacon_consent","bordered","_sorted","_items","getRouteParamsCount","tokens","pathToRegexp","register","idOrNull","unregister","FavoriteList","resource","itemUrl","emptyState","setItems","setLoading","is_draft","DashboardAndQueryFavoritesList","DeprecatedEmbedFeatureAlert","EmailNotVerifiedAlert","Home","pageProps","PageHeader","actions","Layout","activeTab","selectedKeys","FavoritesControl","toggleItem","callback","is_favorite","savedIsFavorite","syntax","doc","doc_url","type_name","Table","RefreshScheduleType","number","time","day_of_week","until","RefreshScheduleDefault","UserProfile","email","profileImageUrl","isDisabled","Destination","created_at","queryHash","is_safe","is_archived","api_key","AlertOptions","op","oneOfType","custom_subject","custom_body","Alert","last_triggered_at","rearm","checkMoment","propName","componentName","isRequiredValid","isOptionalValid","Moment","TimeAgo","autoUpdate","variation","startDate","toMoment","dateTimeFormat","fromNow","timer","setInterval","clearInterval","IntervalEnum","NEVER","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MILLISECONDS","formatDateTimeValue","parsed","formatDateTime","formatDate","dateFormat","localizeTime","hrs","mins","secondsToInterval","count","pluralize","durationHumanize","durationInSeconds","ret","rounded","omitSingleValueNumber","toHuman","formatNumber","fractionDigits","toFixed","prettySizeWithUnit","bytes","divisor","units","parseFloat","unit","greatestDivisor","prettyNumberWithUnit","prettySize","formatColumnValue","columnType","sortable","sorter","Columns","overrides","avatar","formatTitle","dateTime","timeAgo","timeAgoCustomProps","custom","ItemsTable","record","rowKey","prepareColumns","orderByField","orderByReverse","toggleSorting","orderByDirection","field","index","onHeaderCell","dataIndex","defaultSortOrder","tableDataProps","onTableRow","onRowClick","showHeader","active","paragraph","indicator","getRowKey","pagination","onRow","CounterCard","spinning","queryJobsColumns","scheduled","otherJobsColumns","workersColumns","busy","idle","started","suspended","concat","toLowerCase","queuesColumns","TablePropTypes","WorkersTable","defaultPageSize","pageSizeOptions","showSizeChanger","QueuesTable","QueryJobsTable","OtherJobsTable","Jobs","isLoading","queueCounters","overallCounters","queued","startedJobs","workers","processQueues","_refreshTimer","queues","q","flatMap","queue","enqueued_at","started_at","partition","startedQueryJobs","otherStartedJobs","gutter","span","activeKey","onTabClick","newTab","animated","TabPane","tab","Paginator","page","showPageSizeSelect","pageSize","onPageSizeChange","totalCount","onShowSizeChange","defaultCurrent","total","EditTagsDialog","getAvailableTags","availableTags","setAvailableTags","setIsLoading","setValues","selectRef","setSelectRef","compact","tag","Option","TagsControl","onEdit","renderEditButton","editTags","tagSeparator","tagsExtra","modelTagsControl","archivedTooltip","ModelTagsControl","isDraft","isArchived","QueryTagsControl","DashboardTagsControl","SchedulePhrase","seconds","humanized","short","full","dayOfWeek","isLink","ControllerType","isLoaded","searchTerm","updateSearch","selectedTags","array","updateSelectedTags","itemsPerPage","totalItemsCount","pageItems","updatePagination","WrappedComponent","createItemsSource","createStateStorage","ItemsListWrapper","stateStorage","itemsSource","_itemsSource","getState","validate","getCallbackContext","onBeforeUpdate","onAfterUpdate","initialState","controller","hoistNonReactStatics","setPage","totalPages","setItemsPerPage","setTotalCount","getItemsForPage","last","compile","reverse","compiled","Sorter","setField","setReverse","sortByIteratees","toggleField","sort","customIteratee","ItemsFetcher","_getRequest","context","_originalGetRequest","_processResults","_originalProcessResults","getRequest","doRequest","processResults","_originalDoRequest","fetch","changes","PlainListFetcher","paginator","_allItems","allResults","sorting","PaginatedListFetcher","page_size","order","ItemsSource","_beforeUpdate","_afterUpdate","_changed","_paginator","_sorter","_searchTerm","_selectedTags","customParams","setCustomParams","fetchToken","_currentFetchToken","_fetcher","_pageItems","_params","isPlainList","defaultState","prevPage","prevItemsPerPage","_savedOrderByField","allItems","ResourceItemsSource","getResource","getItemProcessor","processItem","StateStorage","_state","defaults","UrlStateStorage","defaultOrderBy","compileOrderBy","parseOrderBy","LoadingState","OutdatedQueries","align","isInitialCall","_updateTimer","currentPage","htmlFor","autoUpdateSwitchId","checked","lastUpdatedAt","listColumns","OutdatedQueriesPage","itemsList","General","info","toPairs","itemLayout","renderItem","DatabaseMetrics","Queues","Manager","lastRefreshAt","startedAt","outdatedQueriesCount","SystemStatus","manager","databaseMetrics","last_refresh_at","outdated_queries_count","database_metrics","metrics","normalizeCondition","equals","newData","destination_id","destinations","transformRequest","mute","unmute","STATE_CLASS","unknown","ok","triggered","AlertsList","muted","toUpper","AlertsListPage","MenuButton","doDelete","confirmDelete","okType","autoFocusButton","rotate","Title","editMode","defaultName","getDefaultName","AlertType","CONDITIONS","VALID_STRING_CONDITIONS","DisabledInput","Criteria","resultValues","alertOptions","columnValue","head","invalidMessage","columnHint","dropdownMatchSelectWidth","optionLabelProp","label","AlertOptionsType","DURATIONS","RearmByDuration","durationIdx","setDurationIdx","setCount","durValue","plural","newCount","precision","newIdx","idx","toLower","RearmEditor","selected","setSelected","newSelected","RearmViewer","phrase","Rearm","useSearchResults","initialResults","debounceTimeout","setResult","currentSearchTerm","isDestroyed","useDebouncedCallback","doSearch","Select","term","QuerySelector","setSearchTerm","selectedQuery","setSelectedQuery","searchResults","searching","clearIcon","selectQuery","spinIcon","hidden","suffixIcon","showSearch","onSearch","notFoundContent","filterOption","defaultActiveFirstOption","readOnly","maxHeight","marginTop","inactive","QueryFormItem","queryHint","QueryType","ItemsList","onItemClick","renderListItem","SelectItemsDialog","dialogTitle","inputPlaceholder","itemKey","renderStagedItem","searchItems","selectedItemsTitle","showCount","extraFooterContent","selectedItems","setSelectedItems","hasResults","isItemSelected","textAlign","color","Search","minHeight","isSelected","IMG_ROOT","AlertSubscription","alertId","alert_id","ListItemAddon","isStaged","alreadyInGroup","deselectedIcon","EmailSettingsWarning","featureName","adminOnly","messageDescriptionId","mailSettingsMissing","arrowPointAtCenter","aria-describedby","normalizeSub","sub","destination","ListItem","unsubscribe","canUnsubscribe","mouseEnterDelay","DestinationType","UserType","AlertDestinations","dests","subs","promises","subscribe","dest","without","DestinationService","currentUserEmailSub","filteredSubs","showAddAlertSubDialog","onUserEmailToggle","HorizontalFormItem","wrapperCol","offset","labelCol","AlertState","lastTriggered","AlertView","unmuting","menuButton","xs","md","NotificationTemplate","subject","setSubject","setBody","hasContent","enabled","setEnabled","showPreview","setShowPreview","renderData","topValue","ALERT_STATUS","ALERT_CONDITION","ALERT_THRESHOLD","ALERT_NAME","ALERT_URL","QUERY_NAME","QUERY_URL","QUERY_RESULT_VALUE","QUERY_RESULT_ROWS","QUERY_RESULT_COLS","normalizeCustomTemplateData","tmpl","TextArea","autoSize","AlertEdit","saving","_isMounted","cancel","pendingRearm","onNotificationTemplateChange","onQuerySelected","onNameChange","onRearmChange","onCriteriaChange","AlertNew","MODES","NEW","VIEW","EDIT","defaultNameBuilder","template","AlertService","setAlertOptions","obj","warn","edit","processTags","getTags","TagsList","tagsUrl","showUnselectAll","onUpdate","allTags","setAllTags","setSelectedTags","toggleTag","newSelectedTags","unselectAll","SearchInput","showIcon","currentValue","setCurrentValue","onInputChange","newValue","InputControl","Input","Menu","MenuIcon","ProfileImage","Tags","unselectAllButtonTitle","useItemsListExtraActions","ExtraActionsComponent","actionsState","setActionsState","areAllItemsSelected","toggleAllItems","checkboxColumn","onStateChange","areExtraActionsAvailable","Sidebar","Content","NoTaggedObjectsFound","DashboardListEmptyState","my_msg","sidebarMenu","DashboardListExtraActions","DashboardList","tableColumns","DashboardListPage","my","modKey","test","navigator","platform","altKey","onShortcut","shortcut","retunValue","fn","KeyboardShortcuts","keymap","Mousetrap","bindGlobal","unbind","ParameterApplyButton","paramCount","data-show","canvas","SelectWithVirtualScroll","largestOpt","maxBy","ctx","getContext","containerStyle","getComputedStyle","font","fontSize","fontFamily","textMetrics","measureText","actualWidth","abs","actualBoundingBoxLeft","actualBoundingBoxRight","calculateTextWidth","optionFilterProp","DateInput","forwardRef","onSelect","additionalAttributes","DateTimeInput","withSeconds","showTime","DynamicButton","selectedDynamicValue","staticValueLabel","menu","findIndex","option","containerRef","stopPropagation","DynamicDatePicker","dynamicValue","parameterValue","dateComponentRef","dateOptions","dynamicButtonOptions","isDateTime","DateComponent","dynamicDate","onDynamicValueSelect","DYNAMIC_DATE_OPTIONS","RangePicker","DatePicker","DateRangeInput","DateTimeRangeInput","DynamicDateRangePicker","dateRangeComponentRef","dateRangeOptions","isDateTimeRange","DateRangeComponent","isValidDateRangeValue","DYNAMIC_DATETIME_OPTIONS","QueryBasedParameterInput","_loadOptions","componentDidUpdate","prevProps","optionValues","validValues","updatedValue","otherProps","String","showArrow","multipleValuesProps","maxTagCount","maxTagTextLength","maxTagPlaceholder","num","ParameterValueInput","isDirty","renderDateParameter","renderDateRangeParameter","renderEnumInput","val","opt","renderQueryBasedInput","renderNumberInput","renderTextInput","renderInput","data-dirty","formItemProps","getDefaultTitle","capitalize","words","NameInput","existingNames","setValidation","helpText","validateStatus","isTypeDateRange","required","help","EditParameterSettingsDialog","setParam","isNameValid","setIsNameValid","initialQuery","setInitialQuery","paramFormId","htmlType","form","layout","onFinish","colon","defaultChecked","quoteOption","updateUrl","disableUrlUpdate","parametersChanged","disableUrlUpdateChanged","keyCode","applyChanges","onPendingValuesChange","oldIndex","newIndex","onParametersEdit","onValuesChange","parametersWithPendingValues","updated","updatedParameter","renderParameter","editable","showParameterSettings","appendSortableToParent","dirtyParamCount","axis","useDragHandle","lockToContainerEdges","helperClass","helperContainer","containerEl","updateBeforeSortStart","onBeforeSortStart","onSortEnd","moveParameter","containerProps","onKeyDown","handleKeyDown","data-editable","Timer","startTime","valueOf","diff","VisualizationName","VisualizationType","QueryLink","ALL_VALUES","FilterType","FiltersType","filterData","every","rowValue","filterValues","filterValue","isSame","Filters","_values","f","createFilterChangeHandler","labelInValue","allowClear","OptGroup","useQueryResultData","queryResultStatus","invoke","retrievedAt","metadata","getQueryResultData","useImmutableCallback","callbackRef","noop","wrapComponentWithSettings","updateVisualizationsSettings","HelpTriggerComponent","LinkComponent","choroplethAvailableMaps","countries","countriesDataUrl","fieldNames","name_long","abbrev","iso_a2","iso_a3","iso_n3","usa","usaDataUrl","ns_code","geoid","usps_abbrev","fips_code","subdiv_japan","subdivJapanDataUrl","name_alt","name_local","iso_3166_2","postal","type_en","region","region_code","Renderer","VisRenderer","Editor","VisEditor","combineFilters","localFilters","globalFilters","localFilter","globalFilter","VisualizationRenderer","setFilters","filtersRef","handleFiltersChange","newFilters","b","fromPairs","onFiltersChange","filteredData","showFilters","paginationSize","visualizationName","addonBefore","ExpandedWidgetDialog","editableMappingsToParameterMappings","synchronizeWidgetTitles","sourceMappings","affectedWidgets","sourceMapping","widgetMappings","widgetMapping","ParameterMappingInput","existingParamNames","updateParamMapping","newMapping","renderMappingTypeSelector","noExisting","Group","updateSourceType","renderDashboardAddNew","renderDashboardMapToExisting","paramName","renderStaticValue","renderInputBlock","inputError","input","visibility","MappingEditor","renderContent","onVisibleChange","TitleEditor","showPopup","getMappingTitle","renderPopover","paramTitle","onEditingTitleChange","maxLength","onPopupVisibleChange","ParameterMappingListInput","getStringValue","mappedTo","oldMapping","Column","getDefaultValue","existingParamsNames","getSourceTypeLabel","getParamValuesSnapshot","dashboardParameters","EditParameterMappingsDialog","existingParameterNames","alreadyExists","parameterMappingsToEditableMappings","originalParamValuesSnapshot","saveWidget","newMappings","valuesChanged","isMatch","widgetsToSave","updateParamMappings","WidgetDropdownButton","extraOptions","showDeleteOption","onDelete","WidgetMenu","WidgetDeleteButton","isPublic","menuOptions","tileProps","showDropdownButton","deleteWidget","visualizationWidgetMenuOptions","canEditDashboard","canViewQuery","canEditParameters","widgetQueryResult","isQueryResultEmpty","downloadLink","downloadName","download","RefreshIndicator","VisualizationWidgetHeader","isEditing","onParametersUpdate","markdown","toHTML","VisualizationWidgetFooter","onRefresh","onExpand","refreshClickButtonId","setRefreshClickButtonId","refreshWidget","buttonId","VisualizationWidget","onParameterMappingsChange","renderVisualization","onLocalFiltersChange","isRefreshing","editParameterMappings","expandWidget","TextboxDialog","setText","preview","setPreview","updatePreview","handleInputChange","confirmDialogDismiss","originalText","dashed","TextboxWidget","TextboxMenuOptions","newText","RestrictedWidget","WIDGET_CONTENT_SELECTOR","AutoHeightController","selector","widgetEl","querySelector","els","querySelectorAll","acc","el","getBoundingClientRect","exists","stop","getHeight","prevHeight","onHeightChange","checkHeightChanges","newWidgetIds","ResponsiveGridLayout","WidthProvider","Responsive","WidgetType","SINGLE","MULTI","DashboardWidget","memo","onLoadWidget","onRefreshWidget","onRemoveWidget","nextProps","DashboardGrid","pos","x","y","h","minW","maxW","minH","maxH","layouts","offsetWidth","cfg","normalized","keyBy","normalizeTo","onLayoutChange","onBreakpointChange","widgetId","newHeight","cloneDeep","oldItem","newItem","autoHeightCtrl","Number","resume","disableAnimations","onWidgetHeightUpdated","destroy","draggableCancel","cols","rowHeight","margin","isDraggable","isResizable","onResizeStart","onResizeStop","onWidgetResize","breakpoints","data-grid","normalizeFrom","data-widgetid","checkItems","bounds","observe","shouldTrigger","VisualizationSelect","visualizationGroups","visualizations","vizSelectId","handleChange","visualizationId","selectedVisualization","groupKey","AddWidgetDialog","setSelectedVisualization","setParameterMappings","parameterMappingsId","PreviewCard","imageUrl","roundedImage","UserPreviewCard","withLink","DataSourcePreviewCard","DOMPurify","setConfig","ADD_ATTR","addHook","getAttribute","removeAttribute","disableResource","User","enableUser","userName","sanitize","is_disabled","disableUser","deleteUser","convertUserInfo","groupIds","groups","isInvitationPending","is_invitation_pending","regenerateApiKey","sendPasswordReset","reset_link","resendInvitation","invite_link","PermissionsEditorDialogHeader","UserSelect","shouldShowUser","loadingUsers","setLoadingUsers","setUsers","debouncedSearchUsers","searchUsers","parentNode","PermissionsEditorDialog","author","aclUrl","loadingGrantees","setLoadingGrantees","grantees","setGrantees","loadGrantees","resultGrantees","accessType","grantee","addPermission","access_type","removePermission","loadUsersWithPermissions","userHasPermission","InputWithCopy","select","execCommand","copied","err","resetCopyState","copyFeatureSupported","queryCommandSupported","copyButton","copy","addonAfter","ShareDashboardDialog","marginBottom","apiUrl","enableAccess","disableAccess","hasOnlySafeQueries","headerContent","useFullscreenHandler","fullscreen","setFullscreen","getLimitedRefreshRate","refreshRate","allowedIntervals","useRefreshRateHandler","refreshDashboard","getRefreshRateFromUrl","setRefreshRate","doRefreshDashboard","refreshTimer","rate","DashboardStatusEnum","useEditModeHandler","editingLayout","setEditingLayout","dashboardStatus","setDashboardStatus","recentPositions","setRecentPositions","doneBtnClickedWhileSaving","setDoneBtnClickedWhileSaving","saveDashboardLayout","positions","changedPositions","nextPositions","pickBy","nextPos","prevPos","getChangedPositions","saveChangedWidgets","saveDashboardLayoutDebounced","args","retrySaveDashboardLayout","setEditing","editing","getAffectedWidgets","updatedParameters","useDashboard","dashboardData","setDashboard","refreshing","setRefreshing","gridDisabled","setGridDisabled","globalParameters","isDashboardOwnerOrAdmin","managePermissions","updateDashboard","includeVersion","currentDashboard","updatedDashboard","togglePublished","loadWidget","forceRefresh","removeWidget","dashboardRef","loadDashboard","loadWidgetPromises","updatedFilters","archiveDashboard","showShareDashboardDialog","handleDialogClose","showAddTextboxDialog","showAddWidgetDialog","disableRefreshRate","toggleFullscreen","editModeHandler","EditInPlace","isEditable","ignoreBlanks","onDone","stopEditing","onFocus","startEditing","multiline","editorProps","InputComponent","onBlur","defaultEditing","prevState","onStopEditing","renderEdit","renderNormal","getDashboardTags","buttonType","DashboardPageTitle","dashboardConfiguration","RefreshButton","refreshRateOptions","parsedRefreshRate","DashboardMoreOptionsButton","showPermissionsControl","disablePublish","DashboardControl","headerExtra","showPublishButton","showFullscreenButton","canShareDashboard","showShareButton","disablePublicUrls","showMoreOptionsButton","DashboardEditControl","data-saving","data-error","DashboardHeader","DashboardControlComponent","DashboardSettings","AddWidgetContainer","DashboardComponent","pageContainer","setPageContainer","bottomPanelStyles","setBottomPanelStyles","resizeObserver","paddingLeft","paddingRight","clientWidth","dispatchEvent","Event","DashboardPage","dashboardSlug","dashboardId","ApiKeySessionWrapper","renderChildren","ErrorBoundaryContext","routeWithApiKeySession","PublicDashboard","PublicDashboardPage","keySuffix","imgSrc","CardsList","searchText","setSearchText","filteredItems","Collapse","collapsed","Panel","getFieldLabel","$blockScrolling","Infinity","showPrintMargin","InputField","FieldType","initialValue","minLength","contentAfter","FieldTypeComponent","checkbox","fieldLabel","file","getFieldValue","beforeUpload","textarea","ace","DynamicFormField","fieldProps","FieldComponent","orderedInputs","properties","targetOptions","inputs","default","normalizeSchema","configurationSchema","prop","endsWith","enum","extendedEnum","extra_options","setDefaultValueToFields","getFields","configuration_schema","hasTargetObject","isNewTarget","updateTargetWithValues","getBase64","reader","FileReader","readAsDataURL","onload","onerror","hasFilledExtraField","optionName","defaultOptionValue","targetOptionValue","ActionType","pullRight","disabledWhenDirty","AntdFormType","validateFieldsAndScroll","fieldRules","rule","DynamicFormFields","fields","feedbackIcons","hasFeedback","rules","valuePropName","getValueFromEvent","fileList","helper","setFieldsValue","reducerForActionSet","inProgress","actionName","DynamicFormActions","isFormDirty","useReducer","inProgressActions","setActionInProgress","handleAction","disableWhenDirty","DynamicForm","hideSubmitButton","defaultShowExtraFields","saveText","onSubmit","isSubmitting","setIsSubmitting","showExtraFields","setShowExtraFields","Form","useForm","extraFields","regularFields","handleFinish","normalizeEmptyValuesToNull","msg","getFieldsValue","handleFinishFailed","errorFields","scrollToField","onFinishFailed","currentShowExtraFields","isFieldsTouched","Steps","StepEnum","CreateSourceDialog","selectedType","savingSource","currentStep","successCallback","errorCallback","onCreate","renderTypeSelector","filteredTypes","renderForm","imageFolder","helpTriggerPrefix","HELP_TRIGGER_TYPES","formId","createSource","selectType","data-test-type","sourceType","resetType","progressDot","wrapSettingsTab","activeItem","mapSchemaColumnsToObject","DataSource","fetchSchema","schema","tables","table","onClickCreate","DataSourcesList","dataSourceTypes","newDataSourceDialog","createDataSource","isNewDataSourcePage","showCreateSourceDialog","newDataSourceProps","DataSourcesListPage","EditDataSource","httpResponse","formProps","deleteDataSource","testConnection","saveDataSource","EditDataSourcePage","DestinationsList","destinationTypes","createDestination","isNewDestinationPage","renderDestinations","newDestinationProps","DestinationsListPage","EditDestination","destinationId","deleteDestination","saveDestination","EditDestinationPage","CreateGroupDialog","members","addMember","removeMember","addDataSource","removeDataSource","updateDataSource","DeleteGroupButton","group","button","onGroupDeleted","deleteGroup","mouseLeaveDelay","GroupsList","canRemove","newGroup","createGroup","GroupsListPage","GroupName","updateGroupName","DetailsPageSidebar","canAddMembers","onAddMembersClick","canAddDataSources","onAddDataSourcesClick","GroupDataSources","groupId","datasource","view_only","setDataSourcePermissions","removeGroupDataSource","viewOnly","allDataSources","alreadyAddedDataSources","ds","addDataSources","GroupDataSourcesPage","GroupMembers","removeGroupMember","alreadyAddedUsers","u","addMembers","GroupMembersPage","QueriesListEmptyState","QueriesListExtraActions","QueriesList","controllerRef","unlistenLocationChanges","QueriesListPage","Resizable","toggleShortcut","direction","sizeAttribute","setSize","elementRef","wasUsingTouchEventsRef","wasResizedRef","sizeProp","getElementSize","savedSize","targetSize","element","d3","transition","ease","resizeHandle","shortcuts","resizeEventHandlers","onResize","draggableCoreOptions","onMouseDown","resizeHandles","handle","minConstraints","draggableOpts","QueryFormatters","sql","sqlFormatter","json","isFormatQueryAvailable","useQueryFlags","canView","canViewSource","canExecute","canFork","canSchedule","useArchiveQuery","doArchiveQuery","SaveQueryError","detailedMessage","SaveQueryConflictError","confirmOverwrite","doSaveQuery","canOverwrite","useUpdateQuery","successMessage","updatedQuery","notificationOptions","useDuplicateQuery","isDuplicating","setIsDuplicating","duplicateQuery","tabName","currentUrlParams","targetUrlParams","keepCurrentUrlParams","CodeBlock","getSelection","selectAllChildren","removeAllRanges","copyFeatureEnabled","copyable","ApiKeyDialog","setQuery","updatingApiKey","setUpdatingApiKey","regenerateQueryApiKey","csvUrl","basePath","jsonUrl","csvResultsLabelId","jsonResultsLabelId","getQueryTags","QueryPageHeader","sourceMode","isDesktop","useMedia","queryFlags","updateName","updateQuery","autoPublishNamedQueries","useRenameQuery","updateTags","useUpdateQueryTags","archiveQuery","publishQuery","usePublishQuery","unpublishQuery","useUnpublishQuery","openApiKeyDialog","useApiKeyDialog","openPermissionsEditorDialog","usePermissionsEditorDialog","moreActionsMenu","createMenu","isEnabled","publish","unpublish","showAPIKey","divider","QueryMetadata","onEditSchedule","last_modified_by","Tabs","refreshButton","TabWithDeleteButton","canDelete","handleDelete","defaultVisualizations","QueryVisualizationTabs","selectedTab","showNewVisualizationButton","canDeleteVisualizations","onChangeTab","onAddVisualization","onDeleteVisualization","canRefresh","tabsProps","tabBarExtraContent","orderedVisualizations","orderBy","isFirstVisualization","visId","isMobile","maxWidth","tabBarGutter","destroyInactiveTabPane","QueryExecutionStatus","isCancelling","alertType","showTimer","isCancelButtonAvailable","QuerySourceAlerts","dataSourcesAvailable","level","wrapQueryPage","QueryPageWrapper","AddToDashboardDialog","selectedDashboard","setSelectedDashboard","autoComplete","EmbedQueryDialog","enableChangeIframeSize","iframeWidth","iframeHeight","embedUrl","snapshotUrlBuilder","snapshotUrl","urlEmbedLabelId","iframeEmbedLabelId","QueryResultsLink","resultId","resultData","embed","QueryControlDropdown","openAddToDashboardForm","showEmbedDialog","queryExecuting","overlayClassName","EditVisualizationButton","openVisualizationEditor","QueryExecutionMetadata","isQueryExecuting","showEditVisualizationButton","onEditVisualization","extraActions","queryResultData","openAddToDashboardDialog","useAddToDashboardDialog","openEmbedDialog","unusedQuery","useEmbedDialog","twoToneColor","data_scanned","getSchema","SchemaItemColumnType","SchemaItemType","SchemaItem","expanded","onToggle","handleSelect","tableDisplayName","displayName","columnName","SchemaLoadingState","SchemaList","expandedFlags","onTableExpand","onItemSelect","listRef","setListRef","recomputeRowHeights","rowCount","columnsLength","rowRenderer","applyFilterOnSchema","filterString","nameFilter","columnFilter","SchemaBrowser","onSchemaUpdate","onOptionsUpdate","setSchema","loadingSchema","setLoadingSchema","refreshSchemaTokenRef","reloadSchema","refreshToken","useDataSourceSchema","refreshSchema","setFilterString","filteredSchema","handleFilterChange","setExpandedFlags","handleSchemaUpdate","tableName","langTools","acequire","snippetsModule","defineDummySnippets","define","require","snippetText","scope","buildKeywordsFromSchema","tableKeywords","columnKeywords","tableColumnKeywords","score","meta","keywords","buildTableColumnKeywords","tableColumn","schemaCompleterKeywords","updateSchemaCompleter","editorKey","setCompleters","snippetCompleter","keyWordCompleter","textCompleter","identifierRegexps","getCompletions","editor","QuerySnippet","querySnippet","getSnippet","snippet","tabTrigger","getQuerySnippet","QuerySnippetService","AutocompleteToggle","available","tooltipMessage","handleClick","AutoLimitCheckbox","ButtonTooltip","limit","modifiers","mod","upperFirst","sc","humanReadableShortcut","EditorControl","addParameterButtonProps","formatButtonProps","saveButtonProps","executeButtonProps","autocompleteToggleProps","autoLimitCheckboxProps","dataSourceSelectorProps","buttons","ButtonPropsPropType","QueryEditor","autocompleteEnabled","onSelectionChange","setContainer","editorRef","setEditorRef","str","editorOptions","behavioursEnabled","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","autoScrollEditorIntoView","editorId","resize","handleSelectionChange","selection","rawSelectedQueryText","getTextRange","getRange","initEditor","commands","bindKey","win","mac","blur","notificationCleanup","on","expiry","politeness","textContent","isDone","cleanupFn","srNotify","command","completer","snippets","snippetManager","parseSnippetFile","useImperativeHandle","paste","getValue","setRange","setOptions","wrapEnabled","Controls","QueryEditorControls","fetchDataFromJobOrReturnData","rejectErrorResponse","getDatabases","getDatabaseTables","databaseName","getTableColumns","DatabricksDataSource","addDisplayNameWithoutDatabaseName","databaseNamePrefix","DatabricksSchemaBrowser","databases","setDatabases","loadingDatabases","setLoadingDatabases","currentDatabaseName","setCurrentDatabaseName","schemas","setSchemas","setCurrentSchema","currentSchemas","currentDatabaseNameRef","loadTableColumns","updatedSchema","refreshAll","getDatabasesPromise","getSchemasPromise","schemasRef","has_columns","defaultDatabaseNameRef","lastUsedDatabase","setCurrentDatabase","selectedDatabase","useDatabricksSchema","databaseFilterString","setDatabaseFilterString","isDatabaseSelectOpen","setIsDatabaseSelectOpen","handleDatabaseFilterChange","cancelHandleDatabaseFilterChange","handleDatabaseSelection","filteredDatabases","database","dropdownClassName","onDropdownVisibleChange","spin","QueryEditorComponents","registerEditorComponent","dataSourceType","useVisualizationTabHandler","firstVisualization","setSelectedTab","hashValue","useAutocompleteFlags","totalLength","calculateTokensCount","setIsEnabled","toggleAutocomplete","useAutoLimitFlags","isAutoLimitAvailable","isChecked","setIsChecked","Notification","getPermissions","requestPermission","showNotification","redashIconUrl","onclick","reducer","updatedProperty","useQueryExecute","isExecuting","loadedInitialResults","executionStatus","cancelCallback","executionState","setExecutionState","queryResultInExecution","executeQuery","newQueryResult","queryExecutor","notifications","queryRef","useQueryParameters","dirtyFlag","setDirtyFlag","updateDirtyFlag","flag","updatedDirtyParameters","WEEKDAYS_SHORT","weekdaysShort","WEEKDAYS_FULL","weekdays","TimeEditor","setTime","showUtc","isUTC","minuteStep","newTime","data-testid","ScheduleDialog","newSchedule","newSeconds","newInterval","setScheduleUntil","day","refreshOptions","newCompact","oldCompact","hasChanged","intervals","int","cnt","secs","setWeekday","setUntilToggle","useEditScheduleDialog","Visualization","EditVisualizationDialog","getDefaultVisualization","getOptions","originalOptions","setType","nameChanged","setNameChanged","onOptionsChanged","newOptions","availableVisualizations","vis","isDeprecated","vizTypeId","vizNameId","wrapClassName","saveVisualization","newVisualization","savedVisualization","updateQueryVisualizations","optionsChanged","onNameChanged","newName","onOptionsChange","useEditVisualizationDialog","updatedVisualization","filteredVisualizations","useDeleteVisualization","useUpdateQueryDescription","QuerySourceTypeIcon","QuerySourceDropdownItem","QuerySourceDropdown","data-name","QuerySource","originalQuery","originalQuerySource","setOriginalQuerySource","originalAutoLimit","setOriginalAutoLimit","saveQuery","useQuery","setAllDataSources","dataSourcesLoaded","setDataSourcesLoaded","cancelDataSourceLoading","useQueryDataSources","areParametersDirty","updateParametersDirtyFlag","shouldShowAlert","shouldShowAlertRef","confirmMessage","savedOnBeforeUnload","onbeforeunload","currentLocation","useUnsavedChangesAlert","executionError","isExecutionCancelling","autocompleteAvailable","autoLimitAvailable","autoLimitChecked","setAutoLimit","handleQueryEditorChange","updateQueryDescription","querySyntax","queryFormat","handleDataSourceChange","updates","firstDataSourceId","dataSourceIds","availableDataSources","editSchedule","openAddNewParameterDialog","onParameterAdded","handleParameterAdded","useAddNewParameterDialog","handleSchemaItemSelect","schemaItem","selectedText","setSelectedText","doExecuteQuery","skipParametersDirtyFlag","isQuerySaving","setIsQuerySaving","addVisualization","editVisualization","shouldOpenDialog","setShouldOpenDialog","useAddVisualizationDialog","deleteVisualization","schemaOptions","overflow","data-executing","formattedQueryText","formatter","line","QuerySourcePage","QueryViewButton","tooltipVisible","setTooltipVisible","eventHandlers","onMouseEnter","onMouseLeave","pointerEvents","QueryView","setDataSource","isFixedLayout","addingDescription","setAddingDescription","QueryViewPage","VisualizationEmbedHeader","queryDescription","verticalAlign","VisualizationEmbedFooter","queryUrl","hideTimestamp","downloadMenu","VisualizationEmbed","setError","setRefreshStartedAt","setQueryResults","refreshQueryResults","hideHeader","hideParametersUI","hideQueryLink","showQueryDescription","QuerySnippetDialog","handleSubmit","querySnippetId","formFields","querySnippetsFormId","canEditQuerySnippet","QuerySnippetsList","showSnippetDialog","deleteQuerySnippet","canSave","goToSnippetsList","saveQuerySnippet","isNewOrEditPage","QuerySnippetsListPage","useOrganizationSettings","settings","setSettings","currentValues","setCurrentValues","isSaving","setIsSaving","newClientConfig","date_format","timeFormat","time_format","SettingsEditorPropTypes","SettingsEditorDefaultProps","FormatSettings","dateFormatList","timeFormatList","PlotlySettings","hide_plotly_mode_bar","FeatureFlagsSettings","feature_show_permissions_control","send_email_on_failed_scheduled_queries","multi_byte_search_enabled","BeaconConsentSettings","GeneralSettings","PasswordLoginSettings","isTheOnlyAuthMethod","googleLoginEnabled","ldapLoginEnabled","auth_saml_enabled","auth_password_login_enabled","GoogleLoginSettings","auth_google_apps_domains","SAMLSettings","auth_saml_type","auth_saml_sso_url","auth_saml_entity_id","auth_saml_x509_cert","auth_saml_metadata_url","auth_saml_nameid_format","AuthSettings","allSettings","OrganizationSettings","sm","lg","OrganizationSettingsPage","absoluteUrl","urlObj","URL","protocol","host","CreateUserDialog","UsersListActions","UsersList","goToUsersList","isNewUserPage","createUser","showCreateUserDialog","renderPageHeader","UsersListPage","pending","UserGroups","linkGroups","useUserGroups","allGroups","setAllGroups","UserInfoForm","isLoadingGroups","saveUser","ApiKeyForm","apiKeyInputId","ChangePasswordDialog","newPassword","currentPassword","repeatPassword","errors","fieldError","updatingPassword","validateFields","touched","userData","old_password","password","inputProps","updatePassword","Password","PasswordLinkAlert","passwordLink","PasswordResetForm","setPasswordLink","ResendInvitationForm","PasswordForm","changePassword","ToggleUserForm","toggleUser","buttonProps","EditableUserProfile","setUser","ReadOnlyUserProfile","UserProfilePage","handleNavigationIntent","tagName","hasAttribute","dataset","skipRouter","Spin","setDefaultIndicator","updateLocale","relativeTime","future","past","mm","hh","dd","M","MM","yy","init","notificationKey","onlineStateHandler","unhandledError","setUnhandledError","globalErrorHandler","getElementById","offlineListener"],"mappings":"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AAOD,QAAU,IAA0B,gC,qBCA3CC,EAAOD,QAAU,IAA0B,wC,qBCA3CC,EAAOD,QAAU,IAA0B,2C,qBCA3CC,EAAOD,QAAU,IAA0B,gC,qBCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,iC,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,gC,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,6B,qBCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,6B,qBCA3CC,EAAOD,QAAU,IAA0B,kC,qBCA3CC,EAAOD,QAAU,IAA0B,6B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,0B,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,kC,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,iC,qBCA3CC,EAAOD,QAAU,IAA0B,gC,qBCA3CC,EAAOD,QAAU,IAA0B,oC,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,kC,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,iC,qBCA3CC,EAAOD,QAAU,IAA0B,uC,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,oC,qBCA3CC,EAAOD,QAAU,IAA0B,6B,qBCA3CC,EAAOD,QAAU,IAA0B,8B,qBCA3CC,EAAOD,QAAU,IAA0B,2B,qBCA3CC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,yC,qBCA3CC,EAAOD,QAAU,IAA0B,sC,qBCA3CC,EAAOD,QAAU,IAA0B,oC,qBCA3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","file":"app.101c1284c4a7520ca61d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([713,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"images/redash_icon_small.png\";","var map = {\n\t\"./en-SG\": 547,\n\t\"./en-SG.js\": 547,\n\t\"./en-au\": 548,\n\t\"./en-au.js\": 548,\n\t\"./en-ca\": 549,\n\t\"./en-ca.js\": 549,\n\t\"./en-gb\": 550,\n\t\"./en-gb.js\": 550,\n\t\"./en-ie\": 551,\n\t\"./en-ie.js\": 551,\n\t\"./en-il\": 552,\n\t\"./en-il.js\": 552,\n\t\"./en-nz\": 553,\n\t\"./en-nz.js\": 553\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1093;","var map = {\n\t\"./avatar.svg\": 437,\n\t\"./db-logos/Cassandra.png\": 1777,\n\t\"./db-logos/athena.png\": 1778,\n\t\"./db-logos/aws_es.png\": 1779,\n\t\"./db-logos/axibasetsd.png\": 1780,\n\t\"./db-logos/azure_kusto.png\": 1781,\n\t\"./db-logos/bigquery.png\": 1782,\n\t\"./db-logos/bigquery_gce.png\": 1783,\n\t\"./db-logos/clickhouse.png\": 1784,\n\t\"./db-logos/cloudwatch.png\": 1785,\n\t\"./db-logos/cloudwatch_insights.png\": 1786,\n\t\"./db-logos/cockroach.png\": 1787,\n\t\"./db-logos/corporate_memory.png\": 1788,\n\t\"./db-logos/couchbase.png\": 1789,\n\t\"./db-logos/csv.png\": 1790,\n\t\"./db-logos/databricks.png\": 1791,\n\t\"./db-logos/db2.png\": 1792,\n\t\"./db-logos/dgraph.png\": 1793,\n\t\"./db-logos/drill.png\": 1794,\n\t\"./db-logos/druid.png\": 1795,\n\t\"./db-logos/dynamodb_sql.png\": 1796,\n\t\"./db-logos/elasticsearch.png\": 1797,\n\t\"./db-logos/exasol.png\": 1798,\n\t\"./db-logos/excel.png\": 1799,\n\t\"./db-logos/firebolt.png\": 1800,\n\t\"./db-logos/google_analytics.png\": 1801,\n\t\"./db-logos/google_spreadsheets.png\": 1802,\n\t\"./db-logos/graphite.png\": 1803,\n\t\"./db-logos/hive.png\": 1804,\n\t\"./db-logos/hive_http.png\": 1805,\n\t\"./db-logos/impala.png\": 1806,\n\t\"./db-logos/influxdb.png\": 1807,\n\t\"./db-logos/jirajql.png\": 1808,\n\t\"./db-logos/json.png\": 1809,\n\t\"./db-logos/kibana.png\": 1810,\n\t\"./db-logos/kylin.png\": 1811,\n\t\"./db-logos/mapd.png\": 1812,\n\t\"./db-logos/memsql.png\": 1813,\n\t\"./db-logos/mongodb.png\": 1814,\n\t\"./db-logos/mssql.png\": 1815,\n\t\"./db-logos/mssql_odbc.png\": 1816,\n\t\"./db-logos/mysql.png\": 1817,\n\t\"./db-logos/oracle.png\": 1818,\n\t\"./db-logos/pg.png\": 1819,\n\t\"./db-logos/phoenix.png\": 1820,\n\t\"./db-logos/presto.png\": 1821,\n\t\"./db-logos/prometheus.png\": 1822,\n\t\"./db-logos/python.png\": 1823,\n\t\"./db-logos/qubole.png\": 1824,\n\t\"./db-logos/rds_mysql.png\": 1825,\n\t\"./db-logos/redshift.png\": 1826,\n\t\"./db-logos/redshift_iam.png\": 1827,\n\t\"./db-logos/results.png\": 1828,\n\t\"./db-logos/rockset.png\": 1829,\n\t\"./db-logos/salesforce.png\": 1830,\n\t\"./db-logos/scylla.png\": 1831,\n\t\"./db-logos/snowflake.png\": 1832,\n\t\"./db-logos/sparql_endpoint.png\": 1833,\n\t\"./db-logos/sqlite.png\": 1834,\n\t\"./db-logos/treasuredata.png\": 1835,\n\t\"./db-logos/trino.png\": 1836,\n\t\"./db-logos/uptycs.png\": 1837,\n\t\"./db-logos/url.png\": 1838,\n\t\"./db-logos/vertica.png\": 1839,\n\t\"./db-logos/yandex_appmetrika.png\": 1840,\n\t\"./db-logos/yandex_metrika.png\": 1841,\n\t\"./destinations/chatwork.png\": 1842,\n\t\"./destinations/email.png\": 1843,\n\t\"./destinations/hangouts_chat.png\": 1844,\n\t\"./destinations/hipchat.png\": 1845,\n\t\"./destinations/mattermost.png\": 1846,\n\t\"./destinations/pagerduty.png\": 1847,\n\t\"./destinations/slack.png\": 1848,\n\t\"./destinations/webhook.png\": 1849,\n\t\"./favicon-16x16.png\": 1850,\n\t\"./favicon-32x32.png\": 1851,\n\t\"./favicon-96x96.png\": 1852,\n\t\"./fixtures/map-tile.png\": 1853,\n\t\"./google_logo.svg\": 1854,\n\t\"./illustrations/alert.svg\": 1855,\n\t\"./illustrations/dashboard.svg\": 1856,\n\t\"./illustrations/no-query-results.svg\": 1857,\n\t\"./illustrations/query.svg\": 1858,\n\t\"./logo.png\": 1859,\n\t\"./logo_white.png\": 1860,\n\t\"./redash_icon_small.png\": 103\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1776;","module.exports = __webpack_public_path__ + \"images/db-logos/Cassandra.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/athena.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/aws_es.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/axibasetsd.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/azure_kusto.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/bigquery.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/bigquery_gce.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/clickhouse.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/cloudwatch.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/cloudwatch_insights.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/cockroach.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/corporate_memory.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/couchbase.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/csv.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/databricks.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/db2.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/dgraph.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/drill.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/druid.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/dynamodb_sql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/elasticsearch.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/exasol.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/excel.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/firebolt.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/google_analytics.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/google_spreadsheets.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/graphite.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/hive.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/hive_http.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/impala.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/influxdb.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/jirajql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/json.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/kibana.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/kylin.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/mapd.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/memsql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/mongodb.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/mssql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/mssql_odbc.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/mysql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/oracle.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/pg.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/phoenix.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/presto.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/prometheus.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/python.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/qubole.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/rds_mysql.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/redshift.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/redshift_iam.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/results.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/rockset.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/salesforce.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/scylla.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/snowflake.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/sparql_endpoint.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/sqlite.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/treasuredata.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/trino.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/uptycs.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/url.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/vertica.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/yandex_appmetrika.png\";","module.exports = __webpack_public_path__ + \"images/db-logos/yandex_metrika.png\";","module.exports = __webpack_public_path__ + \"images/destinations/chatwork.png\";","module.exports = __webpack_public_path__ + \"images/destinations/email.png\";","module.exports = __webpack_public_path__ + \"images/destinations/hangouts_chat.png\";","module.exports = __webpack_public_path__ + \"images/destinations/hipchat.png\";","module.exports = __webpack_public_path__ + \"images/destinations/mattermost.png\";","module.exports = __webpack_public_path__ + \"images/destinations/pagerduty.png\";","module.exports = __webpack_public_path__ + \"images/destinations/slack.png\";","module.exports = __webpack_public_path__ + \"images/destinations/webhook.png\";","module.exports = __webpack_public_path__ + \"images/favicon-16x16.png\";","module.exports = __webpack_public_path__ + \"images/favicon-32x32.png\";","module.exports = __webpack_public_path__ + \"images/favicon-96x96.png\";","module.exports = __webpack_public_path__ + \"images/fixtures/map-tile.png\";","module.exports = __webpack_public_path__ + \"images/google_logo.svg\";","module.exports = __webpack_public_path__ + \"images/illustrations/alert.svg\";","module.exports = __webpack_public_path__ + \"images/illustrations/dashboard.svg\";","module.exports = __webpack_public_path__ + \"images/illustrations/no-query-results.svg\";","module.exports = __webpack_public_path__ + \"images/illustrations/query.svg\";","module.exports = __webpack_public_path__ + \"images/logo.png\";","module.exports = __webpack_public_path__ + \"images/logo_white.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1861;","import React from \"react\";\nimport Button, { ButtonProps as AntdButtonProps } from \"antd/lib/button\";\n\nfunction DefaultLinkComponent({ children, ...props }: React.AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return <a {...props}>{children}</a>;\n}\n\nLink.Component = DefaultLinkComponent;\n\ninterface LinkProps extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"role\" | \"type\" | \"target\"> {\n  href: string;\n}\nfunction Link({ children, ...props }: LinkProps) {\n  return <Link.Component {...props}>{children}</Link.Component>;\n}\n\ninterface LinkWithIconProps extends LinkProps {\n  children: string;\n  icon: JSX.Element;\n  alt: string;\n  target?: \"_self\" | \"_blank\" | \"_parent\" | \"_top\";\n}\n\nfunction LinkWithIcon({ icon, alt, children, ...props }: LinkWithIconProps) {\n  return (\n    <Link.Component {...props}>\n      {children} {icon} <span className=\"sr-only\">{alt}</span>\n    </Link.Component>\n  );\n}\n\nLink.WithIcon = LinkWithIcon;\n\nfunction ExternalLink({\n  icon = <i className=\"fa fa-external-link\" aria-hidden=\"true\" />,\n  alt = \"(opens in a new tab)\",\n  ...props\n}: Omit<LinkWithIconProps, \"target\">) {\n  return <Link.WithIcon target=\"_blank\" rel=\"noopener noreferrer\" icon={icon} alt={alt} {...props} />;\n}\n\nLink.External = ExternalLink;\n\n// Ant Button will render an <a> if href is present.\nfunction DefaultButtonLinkComponent(props: ButtonProps) {\n  return <Button {...props} />;\n}\n\nButtonLink.Component = DefaultButtonLinkComponent;\n\ninterface ButtonProps extends AntdButtonProps {\n  href: string;\n}\n\nfunction ButtonLink(props: ButtonProps) {\n  return <ButtonLink.Component {...props} />;\n}\n\nLink.Button = ButtonLink;\n\nexport default Link;\n","import { isNil, isUndefined, isFunction, isObject, trimStart, mapValues, omitBy, extend } from \"lodash\";\nimport qs from \"query-string\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nfunction normalizeLocation(rawLocation) {\n  const { pathname, search, hash } = rawLocation;\n  const result = {};\n\n  result.path = pathname;\n  result.search = mapValues(qs.parse(search), value => (isNil(value) ? true : value));\n  result.hash = trimStart(hash, \"#\");\n  result.url = `${pathname}${search}${hash}`;\n\n  return result;\n}\n\nconst location = {\n  listen(handler) {\n    if (isFunction(handler)) {\n      return history.listen((unused, action) => handler(location, action));\n    } else {\n      return () => {};\n    }\n  },\n\n  confirmChange(handler) {\n    if (isFunction(handler)) {\n      return history.block(nextLocation => {\n        return handler(normalizeLocation(nextLocation), location);\n      });\n    } else {\n      return () => {};\n    }\n  },\n\n  update(newLocation, replace = false) {\n    if (isObject(newLocation)) {\n      // remap fields and remove undefined ones\n      newLocation = omitBy(\n        {\n          pathname: newLocation.path,\n          search: newLocation.search,\n          hash: newLocation.hash,\n        },\n        isUndefined\n      );\n\n      // keep existing fields (!)\n      newLocation = extend(\n        {\n          pathname: location.path,\n          search: location.search,\n          hash: location.hash,\n        },\n        newLocation\n      );\n\n      // serialize search and keep existing search parameters (!)\n      if (isObject(newLocation.search)) {\n        newLocation.search = omitBy(extend({}, location.search, newLocation.search), isNil);\n        newLocation.search = mapValues(newLocation.search, value => (value === true ? null : value));\n        newLocation.search = qs.stringify(newLocation.search);\n      }\n    }\n    if (replace) {\n      history.replace(newLocation);\n    } else {\n      history.push(newLocation);\n    }\n  },\n\n  url: undefined,\n\n  path: undefined,\n  setPath(path, replace = false) {\n    location.update({ path }, replace);\n  },\n\n  search: undefined,\n  setSearch(search, replace = false) {\n    location.update({ search }, replace);\n  },\n\n  hash: undefined,\n  setHash(hash, replace = false) {\n    location.update({ hash }, replace);\n  },\n};\n\nfunction locationChanged() {\n  extend(location, normalizeLocation(history.location));\n}\n\nhistory.listen(locationChanged);\nlocationChanged(); // init service\n\nexport default location;\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Auth } from \"@/services/auth\";\n\nconst SESSION_RESTORED_MESSAGE = \"redash_session_restored\";\n\nexport function notifySessionRestored() {\n  if (window.opener) {\n    window.opener.postMessage({ type: SESSION_RESTORED_MESSAGE }, window.location.origin);\n  }\n}\n\nfunction getPopupPosition(width, height) {\n  const windowLeft = window.screenX;\n  const windowTop = window.screenY;\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  return {\n    left: Math.floor((windowWidth - width) / 2 + windowLeft),\n    top: Math.floor((windowHeight - height) / 2 + windowTop),\n    width: Math.floor(width),\n    height: Math.floor(height),\n  };\n}\n\nfunction showRestoreSessionPrompt(loginUrl, onSuccess) {\n  let popup = null;\n\n  Modal.warning({\n    content: \"Your session has expired. Please login to continue.\",\n    okText: (\n      <React.Fragment>\n        Login <i className=\"fa fa-external-link m-r-5\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">(opens in a new tab)</span>\n      </React.Fragment>\n    ),\n    centered: true,\n    mask: true,\n    maskClosable: false,\n    keyboard: false,\n    onOk: closeModal => {\n      if (popup && !popup.closed) {\n        popup.focus();\n        return; // popup already shown\n      }\n\n      const popupOptions = {\n        ...getPopupPosition(640, 640),\n        menubar: \"no\",\n        toolbar: \"no\",\n        location: \"yes\",\n        resizable: \"yes\",\n        scrollbars: \"yes\",\n        status: \"yes\",\n      };\n\n      popup = window.open(loginUrl, \"Restore Session\", map(popupOptions, (value, key) => `${key}=${value}`).join(\",\"));\n\n      const handlePostMessage = event => {\n        if (event.data.type === SESSION_RESTORED_MESSAGE) {\n          if (popup) {\n            popup.close();\n          }\n          popup = null;\n          window.removeEventListener(\"message\", handlePostMessage);\n          closeModal();\n          onSuccess();\n        }\n      };\n\n      window.addEventListener(\"message\", handlePostMessage, false);\n    },\n  });\n}\n\nlet restoreSessionPromise = null;\n\nexport function restoreSession() {\n  if (!restoreSessionPromise) {\n    restoreSessionPromise = new Promise(resolve => {\n      showRestoreSessionPrompt(Auth.getLoginUrl(), () => {\n        restoreSessionPromise = null;\n        resolve();\n      });\n    });\n  }\n\n  return restoreSessionPromise;\n}\n","import { get, includes } from \"lodash\";\nimport axiosLib from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { Auth } from \"@/services/auth\";\nimport qs from \"query-string\";\nimport { restoreSession } from \"@/services/restoreSession\";\n\nexport const axios = axiosLib.create({\n  paramsSerializer: params => qs.stringify(params),\n  xsrfCookieName: \"csrf_token\",\n  xsrfHeaderName: \"X-CSRF-TOKEN\",\n});\n\naxios.interceptors.response.use(response => response.data);\n\nexport const csrfRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const message = get(error, \"response.data.message\");\n    if (error.isAxiosError && includes(message, \"CSRF\")) {\n      return axios.get(\"/ping\");\n    } else {\n      return Promise.reject(error);\n    }\n  },\n  { statusCodes: [400] }\n);\n\nexport const sessionRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const status = parseInt(get(error, \"response.status\"));\n    const message = get(error, \"response.data.message\");\n    // TODO: In axios@0.9.1 this check could be replaced with { skipAuthRefresh: true } flag. See axios-auth-refresh docs\n    const requestUrl = get(error, \"config.url\");\n    if (error.isAxiosError && (status === 401 || includes(message, \"Please login\")) && requestUrl !== \"api/session\") {\n      return restoreSession();\n    }\n    return Promise.reject(error);\n  },\n  {\n    statusCodes: [401, 404],\n    pauseInstanceWhileRefreshing: false, // According to docs, `false` is default value, but in fact it's not :-)\n  }\n);\n\naxios.interceptors.request.use(config => {\n  const apiKey = Auth.getApiKey();\n  if (apiKey) {\n    config.headers.Authorization = `Key ${apiKey}`;\n  }\n\n  return config;\n});\n","import debug from \"debug\";\nimport { includes, extend } from \"lodash\";\nimport location from \"@/services/location\";\nimport { axios } from \"@/services/axios\";\nimport { notifySessionRestored } from \"@/services/restoreSession\";\n\nexport const currentUser = {\n  _isAdmin: undefined,\n\n  canEdit(object) {\n    const userId = object.user_id || (object.user && object.user.id);\n    return this.isAdmin || (userId && userId === this.id);\n  },\n\n  canCreate() {\n    return (\n      this.hasPermission(\"create_query\") || this.hasPermission(\"create_dashboard\") || this.hasPermission(\"list_alerts\")\n    );\n  },\n\n  hasPermission(permission) {\n    if (permission === \"admin\" && this._isAdmin !== undefined) {\n      return this._isAdmin;\n    }\n    return includes(this.permissions, permission);\n  },\n\n  get isAdmin() {\n    return this.hasPermission(\"admin\");\n  },\n\n  set isAdmin(isAdmin) {\n    this._isAdmin = isAdmin;\n  },\n};\n\nexport const clientConfig = {};\nexport const messages = [];\n\nconst logger = debug(\"redash:auth\");\nconst session = { loaded: false };\n\nconst AuthUrls = {\n  Login: \"login\",\n};\n\nexport function updateClientConfig(newClientConfig) {\n  extend(clientConfig, newClientConfig);\n}\n\nfunction updateSession(sessionData) {\n  logger(\"Updating session to be:\", sessionData);\n  extend(session, sessionData, { loaded: true });\n  extend(currentUser, session.user);\n  extend(clientConfig, session.client_config);\n  extend(messages, session.messages);\n}\n\nexport const Auth = {\n  isAuthenticated() {\n    return session.loaded && session.user.id;\n  },\n  getLoginUrl() {\n    return AuthUrls.Login;\n  },\n  setLoginUrl(loginUrl) {\n    AuthUrls.Login = loginUrl;\n  },\n  login() {\n    const next = encodeURI(location.url);\n    logger(\"Calling login with next = %s\", next);\n    window.location.href = `${AuthUrls.Login}?next=${next}`;\n  },\n  logout() {\n    logger(\"Logout.\");\n    window.location.href = \"logout\";\n  },\n  loadSession() {\n    logger(\"Loading session\");\n    if (session.loaded && session.user.id) {\n      logger(\"Resolving with local value.\");\n      return Promise.resolve(session);\n    }\n\n    Auth.setApiKey(null);\n    return axios.get(\"api/session\").then(data => {\n      updateSession(data);\n      return session;\n    });\n  },\n  loadConfig() {\n    logger(\"Loading config\");\n    return axios.get(\"/api/config\").then(data => {\n      updateSession({ client_config: data.client_config, user: { permissions: [] }, messages: [] });\n      return data;\n    });\n  },\n  setApiKey(apiKey) {\n    logger(\"Set API key to: %s\", apiKey);\n    Auth.apiKey = apiKey;\n  },\n  getApiKey() {\n    return Auth.apiKey;\n  },\n  requireSession() {\n    logger(\"Requested authentication\");\n    if (Auth.isAuthenticated()) {\n      return Promise.resolve(session);\n    }\n    return Auth.loadSession()\n      .then(() => {\n        if (Auth.isAuthenticated()) {\n          logger(\"Loaded session\");\n          notifySessionRestored();\n          return session;\n        }\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      })\n      .catch(() => {\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      });\n  },\n};\n","import DefaultPolicy from \"./DefaultPolicy\";\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let policy = new DefaultPolicy();\n\nexport function setPolicy(newPolicy) {\n  policy = newPolicy;\n}\n","import { get, isArray } from \"lodash\";\nimport { currentUser, clientConfig } from \"@/services/auth\";\n\n/* eslint-disable class-methods-use-this */\n\nexport default class DefaultPolicy {\n  refresh() {\n    return Promise.resolve(this);\n  }\n\n  canCreateDataSource() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDataSourceEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDestination() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDestinationEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDashboard() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  isCreateDashboardEnabled() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  canCreateAlert() {\n    return true;\n  }\n\n  canCreateUser() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateUserEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateQuerySnippetEnabled() {\n    return true;\n  }\n\n  getDashboardRefreshIntervals() {\n    const result = clientConfig.dashboardRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  getQueryRefreshIntervals() {\n    const result = clientConfig.queryRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  canEdit(object) {\n    return get(object, \"can_edit\", false);\n  }\n\n  canRun() {\n    return true;\n  }\n}\n","import { axios } from \"@/services/axios\";\n\nclass OrganizationStatus {\n  constructor() {\n    this.objectCounters = {};\n  }\n\n  refresh() {\n    return axios.get(\"api/organization/status\").then(data => {\n      this.objectCounters = data.object_counters;\n      return this;\n    });\n  }\n}\n\nexport default new OrganizationStatus();\n","import { isFunction, isString, isUndefined } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst componentsRegistry = new Map();\nconst activeInstances = new Set();\n\nexport function registerComponent(name, component) {\n  if (isString(name) && name !== \"\") {\n    componentsRegistry.set(name, isFunction(component) ? component : null);\n    // Refresh active DynamicComponent instances which use this component\n    activeInstances.forEach(dynamicComponent => {\n      if (dynamicComponent.props.name === name) {\n        dynamicComponent.forceUpdate();\n      }\n    });\n  }\n}\n\nexport function unregisterComponent(name) {\n  registerComponent(name, null);\n}\n\nexport default class DynamicComponent extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    fallback: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: null,\n  };\n\n  componentDidMount() {\n    activeInstances.add(this);\n  }\n\n  componentWillUnmount() {\n    activeInstances.delete(this);\n  }\n\n  render() {\n    const { name, children, fallback, ...props } = this.props;\n    const RealComponent = componentsRegistry.get(name);\n    if (!RealComponent) {\n      // return fallback if any, otherwise return children\n      return isUndefined(fallback) ? children : fallback;\n    }\n    return <RealComponent {...props}>{children}</RealComponent>;\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"./PlainButton.less\";\n\nexport interface PlainButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"type\"> {\n  type?: \"link\" | \"button\";\n}\n\nfunction PlainButton({ className, type, ...rest }: PlainButtonProps) {\n  return (\n    <button\n      className={classNames(\"plain-button\", \"clickable\", { \"plain-button-link\": type === \"link\" }, className)}\n      type=\"button\"\n      {...rest}\n    />\n  );\n}\n\nexport default PlainButton;\n","import React from \"react\";\nimport AntTooltip, { TooltipProps } from \"antd/lib/tooltip\";\nimport { isNil } from \"lodash\";\n\nexport default function Tooltip({ title, ...restProps }: TooltipProps) {\n  const liveTitle = !isNil(title) ? (\n    <span role=\"status\" aria-live=\"assertive\" aria-relevant=\"additions\">\n      {title}\n    </span>\n  ) : null;\n\n  return <AntTooltip trigger={[\"hover\", \"focus\"]} title={liveTitle} {...restProps} />;\n}\n","import { uniqueId } from \"lodash\";\nimport { useLazyRef } from \"./useLazyRef\";\n\nexport function useUniqueId(prefix: string) {\n  const { current: id } = useLazyRef(() => uniqueId(prefix));\n  return id;\n}\n","import { useRef } from \"react\";\n\nexport function useLazyRef<T>(getInitialValue: () => T) {\n  const lazyRef = useRef<T>(null) as React.MutableRefObject<T>;\n\n  if (lazyRef.current === null) {\n    lazyRef.current = getInitialValue();\n  }\n\n  return lazyRef;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport cx from \"classnames\";\n\nfunction BigMessage({ message, icon, children, className }) {\n  const messageId = useUniqueId(\"bm-message\");\n  return (\n    <div\n      className={\"big-message p-15 text-center \" + className}\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-relevant=\"additions removals\">\n      <h3 className=\"m-t-0 m-b-0\" aria-labelledby={messageId}>\n        <i className={cx(\"fa\", icon)} aria-hidden=\"true\" />\n      </h3>\n      <br />\n      <span id={messageId}>{message}</span>\n      {children}\n    </div>\n  );\n}\n\nBigMessage.propTypes = {\n  message: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nBigMessage.defaultProps = {\n  message: \"\",\n  children: null,\n  className: \"tiled bg-white\",\n};\n\nexport default BigMessage;\n","import { startsWith, get, some, mapValues } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Drawer from \"antd/lib/drawer\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport BigMessage from \"@/components/BigMessage\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\n\nimport \"./HelpTrigger.less\";\n\nconst DOMAIN = \"https://redash.io\";\nconst HELP_PATH = \"/help\";\nconst IFRAME_TIMEOUT = 20000;\nconst IFRAME_URL_UPDATE_MESSAGE = \"iframe_url\";\n\nexport const TYPES = mapValues(\n  {\n    HOME: [\"\", \"Help\"],\n    VALUE_SOURCE_OPTIONS: [\"/user-guide/querying/query-parameters#Value-Source-Options\", \"Guide: Value Source Options\"],\n    SHARE_DASHBOARD: [\"/user-guide/dashboards/sharing-dashboards\", \"Guide: Sharing and Embedding Dashboards\"],\n    AUTHENTICATION_OPTIONS: [\"/user-guide/users/authentication-options\", \"Guide: Authentication Options\"],\n    USAGE_DATA_SHARING: [\"/open-source/admin-guide/usage-data\", \"Help: Anonymous Usage Data Sharing\"],\n    DS_ATHENA: [\"/data-sources/amazon-athena-setup\", \"Guide: Help Setting up Amazon Athena\"],\n    DS_BIGQUERY: [\"/data-sources/bigquery-setup\", \"Guide: Help Setting up BigQuery\"],\n    DS_URL: [\"/data-sources/querying-urls\", \"Guide: Help Setting up URL\"],\n    DS_MONGODB: [\"/data-sources/mongodb-setup\", \"Guide: Help Setting up MongoDB\"],\n    DS_GOOGLE_SPREADSHEETS: [\n      \"/data-sources/querying-a-google-spreadsheet\",\n      \"Guide: Help Setting up Google Spreadsheets\",\n    ],\n    DS_GOOGLE_ANALYTICS: [\"/data-sources/google-analytics-setup\", \"Guide: Help Setting up Google Analytics\"],\n    DS_AXIBASETSD: [\"/data-sources/axibase-time-series-database\", \"Guide: Help Setting up Axibase Time Series\"],\n    DS_RESULTS: [\"/user-guide/querying/query-results-data-source\", \"Guide: Help Setting up Query Results\"],\n    ALERT_SETUP: [\"/user-guide/alerts/setting-up-an-alert\", \"Guide: Setting Up a New Alert\"],\n    MAIL_CONFIG: [\"/open-source/setup/#Mail-Configuration\", \"Guide: Mail Configuration\"],\n    ALERT_NOTIF_TEMPLATE_GUIDE: [\"/user-guide/alerts/custom-alert-notifications\", \"Guide: Custom Alerts Notifications\"],\n    FAVORITES: [\"/user-guide/querying/favorites-tagging/#Favorites\", \"Guide: Favorites\"],\n    MANAGE_PERMISSIONS: [\n      \"/user-guide/querying/writing-queries#Managing-Query-Permissions\",\n      \"Guide: Managing Query Permissions\",\n    ],\n    NUMBER_FORMAT_SPECS: [\"/user-guide/visualizations/formatting-numbers\", \"Formatting Numbers\"],\n    GETTING_STARTED: [\"/user-guide/getting-started\", \"Guide: Getting Started\"],\n    DASHBOARDS: [\"/user-guide/dashboards\", \"Guide: Dashboards\"],\n    QUERIES: [\"/user-guide/querying\", \"Guide: Queries\"],\n    ALERTS: [\"/user-guide/alerts\", \"Guide: Alerts\"],\n  },\n  ([url, title]) => [DOMAIN + HELP_PATH + url, title]\n);\n\nconst HelpTriggerPropTypes = {\n  type: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.node,\n  className: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  renderAsLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nconst HelpTriggerDefaultProps = {\n  type: null,\n  href: null,\n  title: null,\n  className: null,\n  showTooltip: true,\n  renderAsLink: false,\n  children: <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />,\n};\n\nexport function helpTriggerWithTypes(types, allowedDomains = [], drawerClassName = null) {\n  return class HelpTrigger extends React.Component {\n    static propTypes = {\n      ...HelpTriggerPropTypes,\n      type: PropTypes.oneOf(Object.keys(types)),\n    };\n\n    static defaultProps = HelpTriggerDefaultProps;\n\n    iframeRef = React.createRef();\n\n    iframeLoadingTimeout = null;\n\n    state = {\n      visible: false,\n      loading: false,\n      error: false,\n      currentUrl: null,\n    };\n\n    componentDidMount() {\n      window.addEventListener(\"message\", this.onPostMessageReceived, false);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"message\", this.onPostMessageReceived);\n      clearTimeout(this.iframeLoadingTimeout);\n    }\n\n    loadIframe = url => {\n      clearTimeout(this.iframeLoadingTimeout);\n      this.setState({ loading: true, error: false });\n\n      this.iframeRef.current.src = url;\n      this.iframeLoadingTimeout = setTimeout(() => {\n        this.setState({ error: url, loading: false });\n      }, IFRAME_TIMEOUT); // safety\n    };\n\n    onIframeLoaded = () => {\n      this.setState({ loading: false });\n      clearTimeout(this.iframeLoadingTimeout);\n    };\n\n    onPostMessageReceived = event => {\n      if (!some(allowedDomains, domain => startsWith(event.origin, domain))) {\n        return;\n      }\n\n      const { type, message: currentUrl } = event.data || {};\n      if (type !== IFRAME_URL_UPDATE_MESSAGE) {\n        return;\n      }\n\n      this.setState({ currentUrl });\n    };\n\n    getUrl = () => {\n      const helpTriggerType = get(types, this.props.type);\n      return helpTriggerType ? helpTriggerType[0] : this.props.href;\n    };\n\n    openDrawer = e => {\n      // keep \"open in new tab\" behavior\n      if (!e.shiftKey && !e.ctrlKey && !e.metaKey) {\n        e.preventDefault();\n        this.setState({ visible: true });\n        // wait for drawer animation to complete so there's no animation jank\n        setTimeout(() => this.loadIframe(this.getUrl()), 300);\n      }\n    };\n\n    closeDrawer = event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.setState({ visible: false });\n      this.setState({ visible: false, currentUrl: null });\n    };\n\n    render() {\n      const targetUrl = this.getUrl();\n      if (!targetUrl) {\n        return null;\n      }\n\n      const tooltip = get(types, `${this.props.type}[1]`, this.props.title);\n      const className = cx(\"help-trigger\", this.props.className);\n      const url = this.state.currentUrl;\n      const isAllowedDomain = some(allowedDomains, domain => startsWith(url || targetUrl, domain));\n      const shouldRenderAsLink = this.props.renderAsLink || !isAllowedDomain;\n\n      return (\n        <React.Fragment>\n          <Tooltip\n            title={\n              this.props.showTooltip ? (\n                <>\n                  {tooltip}\n                  {shouldRenderAsLink && (\n                    <>\n                      {\" \"}\n                      <i className=\"fa fa-external-link\" style={{ marginLeft: 5 }} aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </>\n                  )}\n                </>\n              ) : null\n            }>\n            <Link\n              href={url || this.getUrl()}\n              className={className}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              onClick={shouldRenderAsLink ? () => {} : this.openDrawer}>\n              {this.props.children}\n            </Link>\n          </Tooltip>\n          <Drawer\n            placement=\"right\"\n            closable={false}\n            onClose={this.closeDrawer}\n            visible={this.state.visible}\n            className={cx(\"help-drawer\", drawerClassName)}\n            destroyOnClose\n            width={400}>\n            <div className=\"drawer-wrapper\">\n              <div className=\"drawer-menu\">\n                {url && (\n                  <Tooltip title=\"Open page in a new window\" placement=\"left\">\n                    {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                    <Link href={url} target=\"_blank\">\n                      <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </Link>\n                  </Tooltip>\n                )}\n                <Tooltip title=\"Close\" placement=\"bottom\">\n                  <PlainButton onClick={this.closeDrawer}>\n                    <CloseOutlinedIcon />\n                  </PlainButton>\n                </Tooltip>\n              </div>\n\n              {/* iframe */}\n              {!this.state.error && (\n                <iframe\n                  ref={this.iframeRef}\n                  title=\"Usage Help\"\n                  src=\"about:blank\"\n                  className={cx({ ready: !this.state.loading })}\n                  onLoad={this.onIframeLoaded}\n                />\n              )}\n\n              {/* loading indicator */}\n              {this.state.loading && (\n                <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" className=\"help-message\" />\n              )}\n\n              {/* error message */}\n              {this.state.error && (\n                <BigMessage icon=\"fa-exclamation-circle\" className=\"help-message\">\n                  Something went wrong.\n                  <br />\n                  {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                  <Link href={this.state.error} target=\"_blank\" rel=\"noopener\">\n                    Click here\n                  </Link>{\" \"}\n                  to open the page in a new window.\n                </BigMessage>\n              )}\n            </div>\n\n            {/* extra content */}\n            <DynamicComponent name=\"HelpDrawerExtraContent\" onLeave={this.closeDrawer} openPageUrl={this.loadIframe} />\n          </Drawer>\n        </React.Fragment>\n      );\n    }\n  };\n}\n\nregisterComponent(\"HelpTrigger\", helpTriggerWithTypes(TYPES, [DOMAIN]));\n\nexport default function HelpTrigger(props) {\n  return <DynamicComponent {...props} name=\"HelpTrigger\" />;\n}\n\nHelpTrigger.propTypes = HelpTriggerPropTypes;\nHelpTrigger.defaultProps = HelpTriggerDefaultProps;\n","import { isFunction } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\n\n/**\n  Wrapper for dialogs based on Ant's <Modal> component.\n\n\n  Using wrapped dialogs\n  =====================\n\n  Wrapped component is an object with two fields:\n\n    {\n      showModal: (dialogProps) => object({\n          close: (result) => void,\n          dismiss: (reason) => void,\n          onClose: (handler) => this,\n          onDismiss: (handler) => this,\n        }),\n      Component: React.Component, // wrapped dialog component\n    }\n\n  To open dialog, use `showModal` method; optionally you can pass additional properties that\n  will be expanded on wrapped component:\n\n    const dialog = SomeWrappedDialog.showModal()\n\n    const dialog = SomeWrappedDialog.showModal({ greeting: 'Hello' })\n\n  To get result of modal, use `onClose`/`onDismiss` setters:\n\n    dialog\n      .onClose(result => { ... }) // pressed OK button or used `close` method\n      .onDismiss(result => { ... }) // pressed Cancel button or used `dismiss` method\n\n  If `onClose`/`onDismiss` returns a promise - dialog wrapper will stop handling further close/dismiss\n  requests and will show loader on a corresponding button until that promise is fulfilled (either resolved or\n  rejected). If that promise will be rejected - dialog close/dismiss will be abandoned. Use promise returned\n  from `close`/`dismiss` methods to handle errors (if needed).\n\n  Also, dialog has `close` and `dismiss` methods that allows to close dialog by caller. Passed arguments\n  will be passed to a corresponding handler. Both methods will return the promise returned from `onClose` and\n `onDismiss` callbacks. `update` method allows to pass new properties to dialog.\n\n\n  Creating a dialog\n  ================\n\n  1. Add imports:\n\n    import { wrap as wrapDialog, DialogPropType } from 'path/to/DialogWrapper';\n\n  2. define a `dialog` property on your component:\n\n    propTypes = {\n      dialog: DialogPropType.isRequired,\n    };\n\n  `dialog` property is an object:\n\n    {\n      props: object, // properties for <Modal> component;\n      close: (result) => void, // method to confirm dialog; `result` will be returned to caller\n      dismiss: (reason) => void, // method to reject dialog; `reason` will be returned to caller\n    }\n\n  3. expand additional properties on <Modal> component:\n\n    render() {\n      const { dialog } = this.props;\n      return (\n        <Modal {...dialog.props}>\n      );\n    }\n\n  4. wrap your component and export it:\n\n    export default wrapDialog(YourComponent).\n\n  Your component is ready to use. Wrapper will manage <Modal>'s visibility and events.\n  If you want to override behavior of `onOk`/`onCancel` - don't forget to close dialog:\n\n    customOkHandler() {\n      this.saveData().then(() => {\n         this.props.dialog.close({ success: true }); // or dismiss();\n      });\n    }\n\n    render() {\n      const { dialog } = this.props;\n        return (\n          <Modal {...dialog.props} onOk={() => this.customOkHandler()}>\n        );\n    }\n*/\n\nexport const DialogPropType = PropTypes.shape({\n  props: PropTypes.shape({\n    visible: PropTypes.bool,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    afterClose: PropTypes.func,\n  }).isRequired,\n  close: PropTypes.func.isRequired,\n  dismiss: PropTypes.func.isRequired,\n});\n\nfunction openDialog(DialogComponent, props) {\n  const dialog = {\n    props: {\n      visible: true,\n      okButtonProps: {},\n      cancelButtonProps: {},\n      onOk: () => {},\n      onCancel: () => {},\n      afterClose: () => {},\n    },\n    close: () => {},\n    dismiss: () => {},\n  };\n\n  let pendingCloseTask = null;\n\n  const handlers = {\n    onClose: () => {},\n    onDismiss: () => {},\n  };\n\n  const container = document.createElement(\"div\");\n  document.body.appendChild(container);\n\n  function render() {\n    ReactDOM.render(<DialogComponent {...props} dialog={dialog} />, container);\n  }\n\n  function destroyDialog() {\n    // Allow calling chain to roll up, and then destroy component\n    setTimeout(() => {\n      ReactDOM.unmountComponentAtNode(container);\n      document.body.removeChild(container);\n    }, 10);\n  }\n\n  function processDialogClose(result, setAdditionalDialogProps) {\n    dialog.props.okButtonProps = { disabled: true };\n    dialog.props.cancelButtonProps = { disabled: true };\n    setAdditionalDialogProps();\n    render();\n\n    return Promise.resolve(result)\n      .then(() => {\n        dialog.props.visible = false;\n      })\n      .finally(() => {\n        dialog.props.okButtonProps = {};\n        dialog.props.cancelButtonProps = {};\n        render();\n      });\n  }\n\n  function closeDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onClose(result), () => {\n        dialog.props.okButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  function dismissDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onDismiss(result), () => {\n        dialog.props.cancelButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  dialog.props.onOk = closeDialog;\n  dialog.props.onCancel = dismissDialog;\n  dialog.props.afterClose = destroyDialog;\n  dialog.close = closeDialog;\n  dialog.dismiss = dismissDialog;\n\n  const result = {\n    close: closeDialog,\n    dismiss: dismissDialog,\n    update: newProps => {\n      props = { ...props, ...newProps };\n      render();\n    },\n    onClose: handler => {\n      if (isFunction(handler)) {\n        handlers.onClose = handler;\n      }\n      return result;\n    },\n    onDismiss: handler => {\n      if (isFunction(handler)) {\n        handlers.onDismiss = handler;\n      }\n      return result;\n    },\n  };\n\n  render(); // show it only when all structures initialized to avoid unnecessary re-rendering\n\n  return result;\n}\n\nexport function wrap(DialogComponent) {\n  return {\n    Component: DialogComponent,\n    showModal: props => openDialog(DialogComponent, props),\n  };\n}\n\nexport default {\n  DialogPropType,\n  wrap,\n};\n","import { pick, extend } from \"lodash\";\n\nconst link = document.createElement(\"a\"); // the only way to get an instance of Location class\n// add to document to apply <base> href\nlink.style.display = \"none\";\ndocument.body.appendChild(link);\n\nconst fragmentProps = [\"origin\", \"protocol\", \"host\", \"hostname\", \"port\", \"pathname\", \"search\", \"hash\", \"href\"];\n\nexport function parse(url) {\n  link.setAttribute(\"href\", url);\n  return pick(link, fragmentProps);\n}\n\nexport function stringify(fragments) {\n  extend(link, pick(fragments, fragmentProps));\n  return link.href; // absolute URL\n}\n\nexport function normalize(url) {\n  link.setAttribute(\"href\", url);\n  return link.href; // absolute URL\n}\n\nexport default { parse, stringify, normalize };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function ErrorMessageDetails(props) {\n  return <h4>{props.message}</h4>;\n}\n\nErrorMessageDetails.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n  message: PropTypes.string.isRequired,\n};\n","import { get, isObject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ErrorMessage.less\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { ErrorMessageDetails } from \"@/components/ApplicationArea/ErrorMessageDetails\";\n\nfunction getErrorMessageByStatus(status, defaultMessage) {\n  switch (status) {\n    case 404:\n      return \"It seems like the page you're looking for cannot be found.\";\n    case 401:\n    case 403:\n      return \"It seems like you don’t have permission to see this page.\";\n    default:\n      return defaultMessage;\n  }\n}\n\nfunction getErrorMessage(error) {\n  const message = \"It seems like we encountered an error. Try refreshing this page or contact your administrator.\";\n  if (isObject(error)) {\n    // HTTP errors\n    if (error.isAxiosError && isObject(error.response)) {\n      return getErrorMessageByStatus(error.response.status, get(error, \"response.data.message\", message));\n    }\n    // Router errors\n    if (error.status) {\n      return getErrorMessageByStatus(error.status, message);\n    }\n  }\n  return message;\n}\n\nexport default function ErrorMessage({ error, message }) {\n  if (!error) {\n    return null;\n  }\n\n  console.error(error);\n\n  const errorDetailsProps = {\n    error,\n    message: message || getErrorMessage(error),\n  };\n\n  return (\n    <div className=\"error-message-container\" data-test=\"ErrorMessage\" role=\"alert\">\n      <div className=\"error-state bg-white tiled\">\n        <div className=\"error-state__icon\">\n          <i className=\"zmdi zmdi-alert-circle-o\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"error-state__details\">\n          <DynamicComponent\n            name=\"ErrorMessageDetails\"\n            fallback={<ErrorMessageDetails {...errorDetailsProps} />}\n            {...errorDetailsProps}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.object.isRequired,\n  message: PropTypes.string,\n};\n","import { isFunction, startsWith, trimStart, trimEnd } from \"lodash\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport UniversalRouter from \"universal-router\";\nimport ErrorBoundary from \"@redash/viz/lib/components/ErrorBoundary\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\n\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction generateRouteKey() {\n  return Math.random()\n    .toString(32)\n    .substr(2);\n}\n\nexport const CurrentRouteContext = React.createContext(null);\n\nexport function useCurrentRoute() {\n  return useContext(CurrentRouteContext);\n}\n\nexport function stripBase(href) {\n  // Resolve provided link and '' (root) relative to document's base.\n  // If provided href is not related to current document (does not\n  // start with resolved root) - return false. Otherwise\n  // strip root and return relative url.\n\n  const baseHref = trimEnd(url.normalize(\"\"), \"/\") + \"/\";\n  href = url.normalize(href);\n\n  if (startsWith(href, baseHref)) {\n    return \"/\" + trimStart(href.substr(baseHref.length), \"/\");\n  }\n\n  return false;\n}\n\nexport default function Router({ routes, onRouteChange }) {\n  const [currentRoute, setCurrentRoute] = useState(null);\n\n  const currentPathRef = useRef(null);\n  const errorHandlerRef = useRef();\n\n  useEffect(() => {\n    let isAbandoned = false;\n\n    const router = new UniversalRouter(routes, {\n      resolveRoute({ route }, routeParams) {\n        if (isFunction(route.render)) {\n          return { ...route, routeParams };\n        }\n      },\n    });\n\n    function resolve(action) {\n      if (!isAbandoned) {\n        if (errorHandlerRef.current) {\n          errorHandlerRef.current.reset();\n        }\n\n        const pathname = stripBase(location.path) || \"/\";\n\n        // This is a optimization for route resolver: if current route was already resolved\n        // from this path - do nothing. It also prevents router from using outdated route in a case\n        // when user navigated to another path while current one was still resolving.\n        // Note: this lock uses only `path` fragment of URL to distinguish routes because currently\n        // all pages depend only on this fragment and handle search/hash on their own. If router\n        // should reload page on search/hash change - this fragment (and few checks below) should be updated\n        if (pathname === currentPathRef.current) {\n          return;\n        }\n        currentPathRef.current = pathname;\n\n        // Don't reload controller if URL was replaced\n        if (action === \"REPLACE\") {\n          return;\n        }\n\n        router\n          .resolve({ pathname })\n          .then(route => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({ ...route, key: generateRouteKey() });\n            }\n          })\n          .catch(error => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({\n                render: currentRoute => <ErrorMessage {...currentRoute.routeParams} />,\n                routeParams: { error },\n              });\n            }\n          });\n      }\n    }\n\n    resolve(\"PUSH\");\n\n    const unlisten = location.listen((unused, action) => resolve(action));\n\n    return () => {\n      isAbandoned = true;\n      currentPathRef.current = null;\n      unlisten();\n    };\n  }, [routes]);\n\n  useEffect(() => {\n    onRouteChange(currentRoute);\n  }, [currentRoute, onRouteChange]);\n\n  if (!currentRoute) {\n    return null;\n  }\n\n  return (\n    <CurrentRouteContext.Provider value={currentRoute}>\n      <ErrorBoundary ref={errorHandlerRef} renderError={error => <ErrorMessage error={error} />}>\n        {currentRoute.render(currentRoute)}\n      </ErrorBoundary>\n    </CurrentRouteContext.Provider>\n  );\n}\n\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      render: PropTypes.func, // (routeParams: PropTypes.object; currentRoute; location) => PropTypes.node\n      // Additional props to be injected into route component.\n      // Object keys are props names. Object values will become prop values:\n      // - if value is a function - it will be called without arguments, and result will be used; otherwise value will be used;\n      // - after previous step, if value is a promise - router will wait for it to resolve; resolved value then will be used;\n      //   otherwise value will be used directly.\n      resolve: PropTypes.objectOf(PropTypes.any),\n    })\n  ),\n  onRouteChange: PropTypes.func,\n};\n\nRouter.defaultProps = {\n  routes: [],\n  onRouteChange: () => {},\n};\n","import location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { stripBase } from \"./Router\";\n\n// When `replace` is set to `true` - it will just replace current URL\n// without reloading current page (router will skip this location change)\nexport default function navigateTo(href, replace = false) {\n  // Allow calling chain to roll up, and then navigate\n  setTimeout(() => {\n    const isExternal = stripBase(href) === false;\n    if (isExternal) {\n      window.location = href;\n      return;\n    }\n    href = url.parse(href);\n    location.update(\n      {\n        path: href.pathname,\n        search: href.search,\n        hash: href.hash,\n      },\n      replace\n    );\n  }, 10);\n}\n","import { axios } from \"@/services/axios\";\nimport { debounce, extend } from \"lodash\";\n\nlet events = [];\n\nconst post = debounce(() => {\n  const eventsToSend = events;\n  events = [];\n\n  axios.post(\"api/events\", eventsToSend);\n}, 1000);\n\nexport default function recordEvent(action, objectType, objectId, additionalProperties) {\n  const event = {\n    action,\n    object_type: objectType,\n    object_id: objectId,\n    timestamp: Date.now() / 1000.0,\n    screen_resolution: `${window.screen.width}x${window.screen.height}`,\n  };\n  extend(event, additionalProperties);\n  events.push(event);\n\n  post();\n}\n","export default {\n  columns: 6, // grid columns count\n  rowHeight: 50, // grid row height (incl. bottom padding)\n  margins: 15, // widget margins\n  mobileBreakPoint: 800,\n  // defaults for widgets\n  defaultSizeX: 3,\n  defaultSizeY: 3,\n  minSizeX: 1,\n  maxSizeX: 6,\n  minSizeY: 1,\n  maxSizeY: 1000,\n};\n","import { isNull, isObject, isFunction, isUndefined, isEqual, has, omit, isArray, each } from \"lodash\";\n\nclass Parameter {\n  constructor(parameter, parentQueryId) {\n    this.title = parameter.title;\n    this.name = parameter.name;\n    this.type = parameter.type;\n    this.global = parameter.global; // backward compatibility in Widget service\n    this.parentQueryId = parentQueryId;\n\n    // Used for meta-parameters (i.e. dashboard-level params)\n    this.locals = [];\n\n    // Used for URL serialization\n    this.urlPrefix = \"p_\";\n  }\n\n  static getExecutionValue(param, extra = {}) {\n    if (!isObject(param) || !isFunction(param.getExecutionValue)) {\n      return null;\n    }\n\n    return param.getExecutionValue(extra);\n  }\n\n  static setValue(param, value) {\n    if (!isObject(param) || !isFunction(param.setValue)) {\n      return null;\n    }\n\n    return param.setValue(value);\n  }\n\n  get isEmpty() {\n    return isNull(this.normalizedValue);\n  }\n\n  get hasPendingValue() {\n    return this.pendingValue !== undefined && !isEqual(this.pendingValue, this.normalizedValue);\n  }\n\n  /** Get normalized value to be used in inputs */\n  get normalizedValue() {\n    return this.$$value;\n  }\n\n  isEmptyValue(value) {\n    return isNull(this.normalizeValue(value));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isUndefined(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  updateLocals() {\n    if (isArray(this.locals)) {\n      each(this.locals, local => {\n        local.setValue(this.value);\n      });\n    }\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    this.value = normalizedValue;\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  /** Get execution value for a query */\n  getExecutionValue() {\n    return this.value;\n  }\n\n  setPendingValue(value) {\n    this.pendingValue = this.normalizeValue(value);\n  }\n\n  applyPendingValue() {\n    if (this.hasPendingValue) {\n      this.setValue(this.pendingValue);\n    }\n  }\n\n  clearPendingValue() {\n    this.pendingValue = undefined;\n  }\n\n  /** Update URL with Parameter value */\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    // `null` removes the parameter from the URL in case it exists\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? this.value : null,\n    };\n  }\n\n  /** Set parameter value from the URL */\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      this.setValue(query[key]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name} }}`;\n  }\n\n  /** Get a saveable version of the Parameter by omitting unnecessary props */\n  toSaveableObject() {\n    return omit(this, [\"$$value\", \"urlPrefix\", \"pendingValue\", \"parentQueryId\"]);\n  }\n}\n\nexport default Parameter;\n","import { toString, isEmpty } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass TextParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    const normalizedValue = toString(value);\n    if (isEmpty(normalizedValue)) {\n      return null;\n    }\n    return normalizedValue;\n  }\n}\n\nexport default TextParameter;\n","import { toNumber, isNull } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass NumberParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isNull(value)) {\n      return null;\n    }\n    const normalizedValue = toNumber(value);\n    return !isNaN(normalizedValue) ? normalizedValue : null;\n  }\n}\n\nexport default NumberParameter;\n","import { isArray, isEmpty, includes, intersection, get, map, join, has } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass EnumParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.enumOptions = parameter.enumOptions;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isEmpty(this.enumOptions)) {\n      return null;\n    }\n\n    const enumOptionsArray = this.enumOptions.split(\"\\n\") || [];\n    if (this.multiValuesOptions) {\n      if (!isArray(value)) {\n        value = [value];\n      }\n      value = intersection(value, enumOptionsArray);\n    } else if (!value || isArray(value) || !includes(enumOptionsArray, value)) {\n      value = enumOptionsArray[0];\n    }\n\n    if (isArray(value) && isEmpty(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n}\n\nexport default EnumParameter;\n","import debug from \"debug\";\nimport moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport { QueryResultError } from \"@/services/query\";\nimport { Auth } from \"@/services/auth\";\nimport { isString, uniqBy, each, isNumber, includes, extend, forOwn, get } from \"lodash\";\n\nconst logger = debug(\"redash:services:QueryResult\");\nconst filterTypes = [\"filter\", \"multi-filter\", \"multiFilter\"];\n\nfunction defer() {\n  const result = { onStatusChange: status => {} };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return result;\n}\n\nfunction getColumnNameWithoutType(column) {\n  let typeSplit;\n  if (column.indexOf(\"::\") !== -1) {\n    typeSplit = \"::\";\n  } else if (column.indexOf(\"__\") !== -1) {\n    typeSplit = \"__\";\n  } else {\n    return column;\n  }\n\n  const parts = column.split(typeSplit);\n  if (parts[0] === \"\" && parts.length === 2) {\n    return parts[1];\n  }\n\n  if (!includes(filterTypes, parts[1])) {\n    return column;\n  }\n\n  return parts[0];\n}\n\nfunction getColumnFriendlyName(column) {\n  return getColumnNameWithoutType(column).replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nconst createOrSaveUrl = data => (data.id ? `api/query_results/${data.id}` : \"api/query_results\");\nconst QueryResultResource = {\n  get: ({ id }) => axios.get(`api/query_results/${id}`),\n  post: data => axios.post(createOrSaveUrl(data), data),\n};\n\nexport const ExecutionStatus = {\n  WAITING: \"waiting\",\n  PROCESSING: \"processing\",\n  DONE: \"done\",\n  FAILED: \"failed\",\n  LOADING_RESULT: \"loading-result\",\n};\n\nconst statuses = {\n  1: ExecutionStatus.WAITING,\n  2: ExecutionStatus.PROCESSING,\n  3: ExecutionStatus.DONE,\n  4: ExecutionStatus.FAILED,\n};\n\nfunction handleErrorResponse(queryResult, error) {\n  const status = get(error, \"response.status\");\n  switch (status) {\n    case 403:\n      queryResult.update(error.response.data);\n      return;\n    case 400:\n      if (\"job\" in error.response.data) {\n        queryResult.update(error.response.data);\n        return;\n      }\n      break;\n    case 404:\n      queryResult.update({\n        job: {\n          error: \"cached query result unavailable, please execute again.\",\n          status: 4,\n        },\n      });\n      return;\n    // no default\n  }\n\n  logger(\"Unknown error\", error);\n  queryResult.update({\n    job: {\n      error: get(error, \"response.data.message\", \"Unknown error occurred. Please try again later.\"),\n      status: 4,\n    },\n  });\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function fetchDataFromJob(jobId, interval = 1000) {\n  return axios.get(`api/jobs/${jobId}`).then(data => {\n    const status = statuses[data.job.status];\n    if (status === ExecutionStatus.WAITING || status === ExecutionStatus.PROCESSING) {\n      return sleep(interval).then(() => fetchDataFromJob(data.job.id));\n    } else if (status === ExecutionStatus.DONE) {\n      return data.job.result;\n    } else if (status === ExecutionStatus.FAILED) {\n      return Promise.reject(data.job.error);\n    }\n  });\n}\n\nclass QueryResult {\n  constructor(props) {\n    this.deferred = defer();\n    this.job = {};\n    this.query_result = {};\n    this.status = \"waiting\";\n\n    this.updatedAt = moment();\n\n    // extended status flags\n    this.isLoadingResult = false;\n\n    if (props) {\n      this.update(props);\n    }\n  }\n\n  update(props) {\n    extend(this, props);\n\n    if (\"query_result\" in props) {\n      this.status = ExecutionStatus.DONE;\n      this.deferred.onStatusChange(ExecutionStatus.DONE);\n\n      const columnTypes = {};\n\n      // TODO: we should stop manipulating incoming data, and switch to relaying\n      // on the column type set by the backend. This logic is prone to errors,\n      // and better be removed. Kept for now, for backward compatability.\n      each(this.query_result.data.rows, row => {\n        forOwn(row, (v, k) => {\n          let newType = null;\n          if (isNumber(v)) {\n            newType = \"float\";\n          } else if (isString(v) && v.match(/^\\d{4}-\\d{2}-\\d{2}T/)) {\n            row[k] = moment.utc(v);\n            newType = \"datetime\";\n          } else if (isString(v) && v.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            row[k] = moment.utc(v);\n            newType = \"date\";\n          } else if (typeof v === \"object\" && v !== null) {\n            row[k] = JSON.stringify(v);\n          } else {\n            newType = \"string\";\n          }\n\n          if (newType !== null) {\n            if (columnTypes[k] !== undefined && columnTypes[k] !== newType) {\n              columnTypes[k] = \"string\";\n            } else {\n              columnTypes[k] = newType;\n            }\n          }\n        });\n      });\n\n      each(this.query_result.data.columns, column => {\n        column.name = \"\" + column.name;\n        if (columnTypes[column.name]) {\n          if (column.type == null || column.type === \"string\") {\n            column.type = columnTypes[column.name];\n          }\n        }\n      });\n\n      this.deferred.resolve(this);\n    } else if (this.job.status === 3 || this.job.status === 2) {\n      this.deferred.onStatusChange(ExecutionStatus.PROCESSING);\n      this.status = \"processing\";\n    } else if (this.job.status === 4) {\n      this.status = statuses[this.job.status];\n      this.deferred.reject(new QueryResultError(this.job.error));\n    } else {\n      this.deferred.onStatusChange(undefined);\n      this.status = undefined;\n    }\n  }\n\n  getId() {\n    let id = null;\n    if (\"query_result\" in this) {\n      id = this.query_result.id;\n    }\n    return id;\n  }\n\n  cancelExecution() {\n    axios.delete(`api/jobs/${this.job.id}`);\n  }\n\n  getStatus() {\n    if (this.isLoadingResult) {\n      return ExecutionStatus.LOADING_RESULT;\n    }\n    return this.status || statuses[this.job.status];\n  }\n\n  getError() {\n    // TODO: move this logic to the server...\n    if (this.job.error === \"None\") {\n      return undefined;\n    }\n\n    return this.job.error;\n  }\n\n  getLog() {\n    if (!this.query_result.data || !this.query_result.data.log || this.query_result.data.log.length === 0) {\n      return null;\n    }\n\n    return this.query_result.data.log;\n  }\n\n  getUpdatedAt() {\n    return this.query_result.retrieved_at || this.job.updated_at * 1000.0 || this.updatedAt;\n  }\n\n  getRuntime() {\n    return this.query_result.runtime;\n  }\n\n  getRawData() {\n    if (!this.query_result.data) {\n      return null;\n    }\n\n    return this.query_result.data.rows;\n  }\n\n  getData() {\n    return this.query_result.data ? this.query_result.data.rows : null;\n  }\n\n  isEmpty() {\n    return this.getData() === null || this.getData().length === 0;\n  }\n\n  getColumns() {\n    if (this.columns === undefined && this.query_result.data) {\n      this.columns = this.query_result.data.columns;\n    }\n\n    return this.columns;\n  }\n\n  getColumnNames() {\n    if (this.columnNames === undefined && this.query_result.data) {\n      this.columnNames = this.query_result.data.columns.map(v => v.name);\n    }\n\n    return this.columnNames;\n  }\n\n  getColumnFriendlyNames() {\n    return this.getColumnNames().map(col => getColumnFriendlyName(col));\n  }\n\n  getTruncated() {\n    return this.query_result.data ? this.query_result.data.truncated : null;\n  }\n\n  getFilters() {\n    if (!this.getColumns()) {\n      return [];\n    }\n\n    const filters = [];\n\n    this.getColumns().forEach(col => {\n      const name = col.name;\n      const type = name.split(\"::\")[1] || name.split(\"__\")[1];\n      if (includes(filterTypes, type)) {\n        // filter found\n        const filter = {\n          name,\n          friendlyName: getColumnFriendlyName(name),\n          column: col,\n          values: [],\n          multiple: type === \"multiFilter\" || type === \"multi-filter\",\n        };\n        filters.push(filter);\n      }\n    }, this);\n\n    this.getRawData().forEach(row => {\n      filters.forEach(filter => {\n        filter.values.push(row[filter.name]);\n        if (filter.values.length === 1) {\n          if (filter.multiple) {\n            filter.current = [row[filter.name]];\n          } else {\n            filter.current = row[filter.name];\n          }\n        }\n      });\n    });\n\n    filters.forEach(filter => {\n      filter.values = uniqBy(filter.values, v => {\n        if (moment.isMoment(v)) {\n          return v.unix();\n        }\n        return v;\n      });\n    });\n\n    return filters;\n  }\n\n  toPromise(statusCallback) {\n    if (statusCallback) {\n      this.deferred.onStatusChange = statusCallback;\n    }\n    return this.deferred.promise;\n  }\n\n  static getById(queryId, id) {\n    const queryResult = new QueryResult();\n\n    queryResult.isLoadingResult = true;\n    queryResult.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    axios\n      .get(`api/queries/${queryId}/results/${id}.json`)\n      .then(response => {\n        // Success handler\n        queryResult.isLoadingResult = false;\n        queryResult.update(response);\n      })\n      .catch(error => {\n        // Error handler\n        queryResult.isLoadingResult = false;\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  loadLatestCachedResult(queryId, parameters) {\n    axios\n      .post(`api/queries/${queryId}/results`, { queryId, parameters })\n      .then(response => {\n        this.update(response);\n      })\n      .catch(error => {\n        handleErrorResponse(this, error);\n      });\n  }\n\n  loadResult(tryCount) {\n    this.isLoadingResult = true;\n    this.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    QueryResultResource.get({ id: this.job.query_result_id })\n      .then(response => {\n        this.update(response);\n        this.isLoadingResult = false;\n      })\n      .catch(error => {\n        if (tryCount === undefined) {\n          tryCount = 0;\n        }\n\n        if (tryCount > 3) {\n          logger(\"Connection error while trying to load result\", error);\n          this.update({\n            job: {\n              error: \"failed communicating with server. Please check your Internet connection and try again.\",\n              status: 4,\n            },\n          });\n          this.isLoadingResult = false;\n        } else {\n          setTimeout(() => {\n            this.loadResult(tryCount + 1);\n          }, 1000 * Math.pow(2, tryCount));\n        }\n      });\n  }\n\n  refreshStatus(query, parameters, tryNumber = 1) {\n    const loadResult = () =>\n      Auth.isAuthenticated() ? this.loadResult() : this.loadLatestCachedResult(query, parameters);\n\n    const request = Auth.isAuthenticated()\n      ? axios.get(`api/jobs/${this.job.id}`)\n      : axios.get(`api/queries/${query}/jobs/${this.job.id}`);\n\n    request\n      .then(jobResponse => {\n        this.update(jobResponse);\n\n        if (this.getStatus() === \"processing\" && this.job.query_result_id && this.job.query_result_id !== \"None\") {\n          loadResult();\n        } else if (this.getStatus() !== \"failed\") {\n          const waitTime = tryNumber > 10 ? 3000 : 500;\n          setTimeout(() => {\n            this.refreshStatus(query, parameters, tryNumber + 1);\n          }, waitTime);\n        }\n      })\n      .catch(error => {\n        logger(\"Connection error\", error);\n        // TODO: use QueryResultError, or better yet: exception/reject of promise.\n        this.update({\n          job: {\n            error: \"failed communicating with server. Please check your Internet connection and try again.\",\n            status: 4,\n          },\n        });\n      });\n  }\n\n  getLink(queryId, fileType, apiKey) {\n    let link = `api/queries/${queryId}/results/${this.getId()}.${fileType}`;\n    if (apiKey) {\n      link = `${link}?api_key=${apiKey}`;\n    }\n    return link;\n  }\n\n  getName(queryName, fileType) {\n    return `${queryName.replace(/ /g, \"_\") + moment(this.getUpdatedAt()).format(\"_YYYY_MM_DD\")}.${fileType}`;\n  }\n\n  static getByQueryId(id, parameters, applyAutoLimit, maxAge) {\n    const queryResult = new QueryResult();\n\n    axios\n      .post(`api/queries/${id}/results`, { id, parameters, apply_auto_limit: applyAutoLimit, max_age: maxAge })\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(id, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  static get(dataSourceId, query, parameters, applyAutoLimit, maxAge, queryId) {\n    const queryResult = new QueryResult();\n\n    const params = {\n      data_source_id: dataSourceId,\n      parameters,\n      query,\n      apply_auto_limit: applyAutoLimit,\n      max_age: maxAge,\n    };\n\n    if (queryId !== undefined) {\n      params.query_id = queryId;\n    }\n\n    QueryResultResource.post(params)\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(query, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n}\n\nexport default QueryResult;\n","const PREFIX = \"localOptions:\";\n\nfunction get(key, defaultValue = undefined) {\n  const fullKey = PREFIX + key;\n  if (fullKey in window.localStorage) {\n    return JSON.parse(window.localStorage.getItem(fullKey));\n  }\n  return defaultValue;\n}\n\nfunction set(key, value) {\n  const fullKey = PREFIX + key;\n  window.localStorage.setItem(fullKey, JSON.stringify(value));\n}\n\nexport default {\n  get,\n  set,\n};\n","import moment from \"moment\";\nimport debug from \"debug\";\nimport Mustache from \"mustache\";\nimport { axios } from \"@/services/axios\";\nimport {\n  zipObject,\n  isEmpty,\n  isArray,\n  map,\n  filter,\n  includes,\n  union,\n  uniq,\n  has,\n  identity,\n  extend,\n  each,\n  some,\n  clone,\n  find,\n} from \"lodash\";\nimport location from \"@/services/location\";\n\nimport { Parameter, createParameter } from \"./parameters\";\nimport { currentUser } from \"./auth\";\nimport QueryResult from \"./query-result\";\nimport localOptions from \"@/lib/localOptions\";\n\nMustache.escape = identity; // do not html-escape values\n\nconst logger = debug(\"redash:services:query\");\n\nfunction collectParams(parts) {\n  let parameters = [];\n\n  parts.forEach(part => {\n    if (part[0] === \"name\" || part[0] === \"&\") {\n      parameters.push(part[1].split(\".\")[0]);\n    } else if (part[0] === \"#\") {\n      parameters = union(parameters, collectParams(part[4]));\n    }\n  });\n\n  return parameters;\n}\n\nexport class Query {\n  constructor(query) {\n    extend(this, query);\n\n    if (!has(this, \"options\")) {\n      this.options = {};\n    }\n    this.options.apply_auto_limit = !!this.options.apply_auto_limit;\n\n    if (!isArray(this.options.parameters)) {\n      this.options.parameters = [];\n    }\n  }\n\n  isNew() {\n    return this.id === undefined;\n  }\n\n  hasDailySchedule() {\n    return this.schedule && this.schedule.match(/\\d\\d:\\d\\d/) !== null;\n  }\n\n  scheduleInLocalTime() {\n    const parts = this.schedule.split(\":\");\n    return moment\n      .utc()\n      .hour(parts[0])\n      .minute(parts[1])\n      .local()\n      .format(\"HH:mm\");\n  }\n\n  hasResult() {\n    return !!(this.latest_query_data || this.latest_query_data_id);\n  }\n\n  paramsRequired() {\n    return this.getParameters().isRequired();\n  }\n\n  hasParameters() {\n    return this.getParametersDefs().length > 0;\n  }\n\n  prepareQueryResultExecution(execute, maxAge) {\n    const parameters = this.getParameters();\n    const missingParams = parameters.getMissing();\n\n    if (missingParams.length > 0) {\n      let paramsWord = \"parameter\";\n      let valuesWord = \"value\";\n      if (missingParams.length > 1) {\n        paramsWord = \"parameters\";\n        valuesWord = \"values\";\n      }\n\n      return new QueryResult({\n        job: {\n          error: `missing ${valuesWord} for ${missingParams.join(\", \")} ${paramsWord}.`,\n          status: 4,\n        },\n      });\n    }\n\n    if (parameters.isRequired()) {\n      // Need to clear latest results, to make sure we don't use results for different params.\n      this.latest_query_data = null;\n      this.latest_query_data_id = null;\n    }\n\n    if (this.latest_query_data && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = new QueryResult({\n          query_result: this.latest_query_data,\n        });\n      }\n    } else if (this.latest_query_data_id && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = QueryResult.getById(this.id, this.latest_query_data_id);\n      }\n    } else {\n      this.queryResult = execute();\n    }\n\n    return this.queryResult;\n  }\n\n  getQueryResult(maxAge) {\n    const execute = () =>\n      QueryResult.getByQueryId(this.id, this.getParameters().getExecutionValues(), this.getAutoLimit(), maxAge);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getQueryResultByText(maxAge, selectedQueryText) {\n    const queryText = selectedQueryText || this.query;\n    if (!queryText) {\n      return new QueryResultError(\"Can't execute empty query.\");\n    }\n\n    const parameters = this.getParameters().getExecutionValues({ joinListValues: true });\n    const execute = () =>\n      QueryResult.get(this.data_source_id, queryText, parameters, this.getAutoLimit(), maxAge, this.id);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getUrl(source, hash) {\n    let url = `queries/${this.id}`;\n\n    if (source) {\n      url += \"/source\";\n    }\n\n    let params = {};\n    if (this.getParameters().isRequired()) {\n      this.getParametersDefs().forEach(param => {\n        extend(params, param.toUrlParams());\n      });\n    }\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    params = map(params, (value, name) => `${encodeURIComponent(name)}=${encodeURIComponent(value)}`).join(\"&\");\n\n    if (params !== \"\") {\n      url += `?${params}`;\n    }\n\n    if (hash) {\n      url += `#${hash}`;\n    }\n\n    return url;\n  }\n\n  getQueryResultPromise() {\n    return this.getQueryResult().toPromise();\n  }\n\n  getParameters() {\n    if (!this.$parameters) {\n      this.$parameters = new Parameters(this, location.search);\n    }\n\n    return this.$parameters;\n  }\n\n  getAutoLimit() {\n    return this.options.apply_auto_limit;\n  }\n\n  getParametersDefs(update = true) {\n    return this.getParameters().get(update);\n  }\n\n  favorite() {\n    return Query.favorite(this);\n  }\n\n  unfavorite() {\n    return Query.unfavorite(this);\n  }\n\n  clone() {\n    const newQuery = clone(this);\n    newQuery.$parameters = null;\n    newQuery.getParameters();\n    return newQuery;\n  }\n}\n\nclass Parameters {\n  constructor(query, queryString) {\n    this.query = query;\n    this.updateParameters();\n    this.initFromQueryString(queryString);\n  }\n\n  parseQuery() {\n    const fallback = () => map(this.query.options.parameters, i => i.name);\n\n    let parameters = [];\n    if (this.query.query !== undefined) {\n      try {\n        const parts = Mustache.parse(this.query.query);\n        parameters = uniq(collectParams(parts));\n      } catch (e) {\n        logger(\"Failed parsing parameters: \", e);\n        // Return current parameters so we don't reset the list\n        parameters = fallback();\n      }\n    } else {\n      parameters = fallback();\n    }\n\n    return parameters;\n  }\n\n  updateParameters(update) {\n    if (this.query.query === this.cachedQueryText) {\n      const parameters = this.query.options.parameters;\n      const hasUnprocessedParameters = find(parameters, p => !(p instanceof Parameter));\n      if (hasUnprocessedParameters) {\n        this.query.options.parameters = map(parameters, p =>\n          p instanceof Parameter ? p : createParameter(p, this.query.id)\n        );\n      }\n      return;\n    }\n\n    this.cachedQueryText = this.query.query;\n    const parameterNames = update ? this.parseQuery() : map(this.query.options.parameters, p => p.name);\n\n    this.query.options.parameters = this.query.options.parameters || [];\n\n    const parametersMap = {};\n    this.query.options.parameters.forEach(param => {\n      parametersMap[param.name] = param;\n    });\n\n    parameterNames.forEach(param => {\n      if (!has(parametersMap, param)) {\n        this.query.options.parameters.push(\n          createParameter({\n            title: param,\n            name: param,\n            type: \"text\",\n            value: null,\n            global: false,\n          })\n        );\n      }\n    });\n\n    const parameterExists = p => includes(parameterNames, p.name);\n    const parameters = this.query.options.parameters;\n    this.query.options.parameters = parameters\n      .filter(parameterExists)\n      .map(p => (p instanceof Parameter ? p : createParameter(p, this.query.id)));\n  }\n\n  initFromQueryString(query) {\n    this.get().forEach(param => {\n      param.fromUrlParams(query);\n    });\n  }\n\n  get(update = true) {\n    this.updateParameters(update);\n    return this.query.options.parameters;\n  }\n\n  add(parameterDef) {\n    this.query.options.parameters = this.query.options.parameters.filter(p => p.name !== parameterDef.name);\n    const param = createParameter(parameterDef);\n    this.query.options.parameters.push(param);\n    return param;\n  }\n\n  getMissing() {\n    return map(\n      filter(this.get(), p => p.isEmpty),\n      i => i.title\n    );\n  }\n\n  isRequired() {\n    return !isEmpty(this.get());\n  }\n\n  getExecutionValues(extra = {}) {\n    const params = this.get();\n    return zipObject(\n      map(params, i => i.name),\n      map(params, i => i.getExecutionValue(extra))\n    );\n  }\n\n  hasPendingValues() {\n    return some(this.get(), p => p.hasPendingValue);\n  }\n\n  applyPendingValues() {\n    each(this.get(), p => p.applyPendingValue());\n  }\n\n  toUrlParams() {\n    if (this.get().length === 0) {\n      return \"\";\n    }\n\n    const params = Object.assign(...this.get().map(p => p.toUrlParams()));\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    return Object.keys(params)\n      .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n      .join(\"&\");\n  }\n}\n\nexport class QueryResultError {\n  constructor(errorMessage) {\n    this.errorMessage = errorMessage;\n    this.updatedAt = moment.utc();\n  }\n\n  getUpdatedAt() {\n    return this.updatedAt;\n  }\n\n  getError() {\n    return this.errorMessage;\n  }\n\n  toPromise() {\n    return Promise.reject(this);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStatus() {\n    return \"failed\";\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getData() {\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getLog() {\n    return null;\n  }\n}\n\nconst getQuery = query => new Query(query);\nconst saveOrCreateUrl = data => (data.id ? `api/queries/${data.id}` : \"api/queries\");\nconst mapResults = data => ({ ...data, results: map(data.results, getQuery) });\n\nconst QueryService = {\n  query: params => axios.get(\"api/queries\", { params }).then(mapResults),\n  get: data => axios.get(`api/queries/${data.id}`, data).then(getQuery),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(getQuery),\n  delete: data => axios.delete(`api/queries/${data.id}`),\n  recent: params => axios.get(`api/queries/recent`, { params }).then(data => map(data, getQuery)),\n  archive: params => axios.get(`api/queries/archive`, { params }).then(mapResults),\n  myQueries: params => axios.get(\"api/queries/my\", { params }).then(mapResults),\n  fork: ({ id }) => axios.post(`api/queries/${id}/fork`, { id }).then(getQuery),\n  resultById: data => axios.get(`api/queries/${data.id}/results.json`),\n  asDropdown: data => axios.get(`api/queries/${data.id}/dropdown`),\n  associatedDropdown: ({ queryId, dropdownQueryId }) =>\n    axios.get(`api/queries/${queryId}/dropdowns/${dropdownQueryId}`),\n  favorites: params => axios.get(\"api/queries/favorites\", { params }).then(mapResults),\n  favorite: data => axios.post(`api/queries/${data.id}/favorite`),\n  unfavorite: data => axios.delete(`api/queries/${data.id}/favorite`),\n};\n\nQueryService.newQuery = function newQuery() {\n  return new Query({\n    query: \"\",\n    name: \"New Query\",\n    schedule: null,\n    user: currentUser,\n    options: { apply_auto_limit: localOptions.get(\"applyAutoLimit\", true) },\n    tags: [],\n    can_edit: true,\n  });\n};\n\nextend(Query, QueryService);\n","import { isNull, isUndefined, isArray, isEmpty, get, map, join, has } from \"lodash\";\nimport { Query } from \"@/services/query\";\nimport Parameter from \"./Parameter\";\n\nclass QueryBasedDropdownParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.queryId = parameter.queryId;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isUndefined(value) || isNull(value) || (isArray(value) && isEmpty(value))) {\n      return null;\n    }\n\n    if (this.multiValuesOptions) {\n      value = isArray(value) ? value : [value];\n    } else {\n      value = isArray(value) ? value[0] : value;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n\n  loadDropdownValues() {\n    if (this.parentQueryId) {\n      return Query.associatedDropdown({ queryId: this.parentQueryId, dropdownQueryId: this.queryId }).catch(() =>\n        Promise.resolve([])\n      );\n    }\n\n    return Query.asDropdown({ id: this.queryId }).catch(Promise.resolve([]));\n  }\n}\n\nexport default QueryBasedDropdownParameter;\n","import { findKey, startsWith, has, includes, isNull, values } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  // eslint-disable-next-line quote-props\n  date: \"YYYY-MM-DD\",\n  \"datetime-local\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\nconst DYNAMIC_DATES = {\n  now: {\n    name: \"Today/Now\",\n    value: () => moment(),\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => moment().subtract(1, \"day\"),\n  },\n};\n\nexport const DynamicDateType = PropTypes.oneOf(values(DYNAMIC_DATES));\n\nfunction isDynamicDateString(value) {\n  return startsWith(value, DYNAMIC_PREFIX) && has(DYNAMIC_DATES, value.substring(DYNAMIC_PREFIX.length));\n}\n\nexport function isDynamicDate(value) {\n  return includes(DYNAMIC_DATES, value);\n}\n\nexport function getDynamicDateFromString(value) {\n  if (!isDynamicDateString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.useCurrentDateTime = parameter.useCurrentDateTime;\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDate(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateString(value)) {\n      return getDynamicDateFromString(value);\n    }\n\n    if (isDynamicDate(value)) {\n      return value;\n    }\n\n    const normalizedValue = moment(value);\n    return normalizedValue.isValid() ? normalizedValue : null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDate(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATES, normalizedValue);\n    } else if (moment.isMoment(normalizedValue)) {\n      this.value = normalizedValue.format(DATETIME_FORMATS[this.type]);\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      return this.normalizedValue.value().format(DATETIME_FORMATS[this.type]);\n    }\n    if (isNull(this.value) && this.useCurrentDateTime) {\n      return moment().format(DATETIME_FORMATS[this.type]);\n    }\n    return this.value;\n  }\n}\n\nexport default DateParameter;\n","import { startsWith, has, includes, findKey, values, isObject, isArray } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  \"date-range\": \"YYYY-MM-DD\",\n  \"datetime-range\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-range-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\n/**\n * Dynamic date range preset value with end set to current time\n * @param from {function(): moment.Moment}\n * @param now {function(): moment.Moment=} moment - defaults to now\n * @returns {function(withNow: boolean): [moment.Moment, moment.Moment|undefined]}\n */\nconst untilNow = (from, now = () => moment()) => (withNow = true) => [from(), withNow ? now() : undefined];\n\nconst DYNAMIC_DATE_RANGES = {\n  today: {\n    name: \"Today\",\n    value: () => [moment().startOf(\"day\"), moment().endOf(\"day\")],\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => [\n      moment()\n        .subtract(1, \"day\")\n        .startOf(\"day\"),\n      moment()\n        .subtract(1, \"day\")\n        .endOf(\"day\"),\n    ],\n  },\n  this_week: {\n    name: \"This week\",\n    value: () => [moment().startOf(\"week\"), moment().endOf(\"week\")],\n  },\n  this_month: {\n    name: \"This month\",\n    value: () => [moment().startOf(\"month\"), moment().endOf(\"month\")],\n  },\n  this_year: {\n    name: \"This year\",\n    value: () => [moment().startOf(\"year\"), moment().endOf(\"year\")],\n  },\n  last_week: {\n    name: \"Last week\",\n    value: () => [\n      moment()\n        .subtract(1, \"week\")\n        .startOf(\"week\"),\n      moment()\n        .subtract(1, \"week\")\n        .endOf(\"week\"),\n    ],\n  },\n  last_month: {\n    name: \"Last month\",\n    value: () => [\n      moment()\n        .subtract(1, \"month\")\n        .startOf(\"month\"),\n      moment()\n        .subtract(1, \"month\")\n        .endOf(\"month\"),\n    ],\n  },\n  last_year: {\n    name: \"Last year\",\n    value: () => [\n      moment()\n        .subtract(1, \"year\")\n        .startOf(\"year\"),\n      moment()\n        .subtract(1, \"year\")\n        .endOf(\"year\"),\n    ],\n  },\n  last_hour: {\n    name: \"Last hour\",\n    value: untilNow(() => moment().subtract(1, \"hour\")),\n  },\n  last_8_hours: {\n    name: \"Last 8 hours\",\n    value: untilNow(() => moment().subtract(8, \"hour\")),\n  },\n  last_24_hours: {\n    name: \"Last 24 hours\",\n    value: untilNow(() => moment().subtract(24, \"hour\")),\n  },\n  last_7_days: {\n    name: \"Last 7 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(7, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_14_days: {\n    name: \"Last 14 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(14, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_30_days: {\n    name: \"Last 30 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(30, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_60_days: {\n    name: \"Last 60 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(60, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_90_days: {\n    name: \"Last 90 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(90, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_12_months: {\n    name: \"Last 12 months\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(12, \"months\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n};\n\nexport const DynamicDateRangeType = PropTypes.oneOf(values(DYNAMIC_DATE_RANGES));\n\nexport function isDynamicDateRangeString(value) {\n  if (!startsWith(value, DYNAMIC_PREFIX)) {\n    return false;\n  }\n  return !!DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nexport function getDynamicDateRangeStringFromName(dynamicRangeName) {\n  const key = findKey(DYNAMIC_DATE_RANGES, range => range.name === dynamicRangeName);\n  return key ? DYNAMIC_PREFIX + key : undefined;\n}\n\nexport function isDynamicDateRange(value) {\n  return includes(DYNAMIC_DATE_RANGES, value);\n}\n\nexport function getDynamicDateRangeFromString(value) {\n  if (!isDynamicDateRangeString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateRangeParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDateRange(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateRangeString(value)) {\n      return getDynamicDateRangeFromString(value);\n    }\n\n    if (isDynamicDateRange(value)) {\n      return value;\n    }\n\n    if (isObject(value) && !isArray(value)) {\n      value = [value.start, value.end];\n    }\n\n    if (isArray(value) && value.length === 2) {\n      value = [moment(value[0]), moment(value[1])];\n      if (value[0].isValid() && value[1].isValid()) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDateRange(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATE_RANGES, normalizedValue);\n    } else if (isArray(normalizedValue)) {\n      this.value = {\n        start: normalizedValue[0].format(DATETIME_FORMATS[this.type]),\n        end: normalizedValue[1].format(DATETIME_FORMATS[this.type]),\n      };\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      const format = date => date.format(DATETIME_FORMATS[this.type]);\n      const [start, end] = this.normalizedValue.value().map(format);\n      return { start, end };\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    if (isObject(this.value) && this.value.start && this.value.end) {\n      return {\n        [`${prefix}${this.name}`]: `${this.value.start}--${this.value.end}`,\n      };\n    }\n    return super.toUrlParams();\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n\n    // backward compatibility\n    const keyStart = `${prefix}${this.name}.start`;\n    const keyEnd = `${prefix}${this.name}.end`;\n\n    if (has(query, key)) {\n      const dates = query[key].split(\"--\");\n      if (dates.length === 2) {\n        this.setValue(dates);\n      } else {\n        this.setValue(query[key]);\n      }\n    } else if (has(query, keyStart) && has(query, keyEnd)) {\n      this.setValue([query[keyStart], query[keyEnd]]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name}.start }} {{ ${this.name}.end }}`;\n  }\n}\n\nexport default DateRangeParameter;\n","import Parameter from \"./Parameter\";\nimport TextParameter from \"./TextParameter\";\nimport NumberParameter from \"./NumberParameter\";\nimport EnumParameter from \"./EnumParameter\";\nimport QueryBasedDropdownParameter from \"./QueryBasedDropdownParameter\";\nimport DateParameter from \"./DateParameter\";\nimport DateRangeParameter from \"./DateRangeParameter\";\n\nfunction createParameter(param, parentQueryId) {\n  switch (param.type) {\n    case \"number\":\n      return new NumberParameter(param, parentQueryId);\n    case \"enum\":\n      return new EnumParameter(param, parentQueryId);\n    case \"query\":\n      return new QueryBasedDropdownParameter(param, parentQueryId);\n    case \"date\":\n    case \"datetime-local\":\n    case \"datetime-with-seconds\":\n      return new DateParameter(param, parentQueryId);\n    case \"date-range\":\n    case \"datetime-range\":\n    case \"datetime-range-with-seconds\":\n      return new DateRangeParameter(param, parentQueryId);\n    default:\n      return new TextParameter({ ...param, type: \"text\" }, parentQueryId);\n  }\n}\n\nfunction cloneParameter(param) {\n  return createParameter(param, param.parentQueryId);\n}\n\nexport {\n  Parameter,\n  TextParameter,\n  NumberParameter,\n  EnumParameter,\n  QueryBasedDropdownParameter,\n  DateParameter,\n  DateRangeParameter,\n  createParameter,\n  cloneParameter,\n};\n","import moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport {\n  each,\n  pick,\n  extend,\n  isObject,\n  truncate,\n  keys,\n  difference,\n  filter,\n  map,\n  merge,\n  sortBy,\n  indexOf,\n  size,\n  includes,\n} from \"lodash\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport { registeredVisualizations } from \"@redash/viz/lib\";\nimport { Query } from \"./query\";\n\nexport const WidgetTypeEnum = {\n  TEXTBOX: \"textbox\",\n  VISUALIZATION: \"visualization\",\n  RESTRICTED: \"restricted\",\n};\n\nfunction calculatePositionOptions(widget) {\n  widget.width = 1; // Backward compatibility, user on back-end\n\n  const visualizationOptions = {\n    autoHeight: false,\n    sizeX: Math.round(dashboardGridOptions.columns / 2),\n    sizeY: dashboardGridOptions.defaultSizeY,\n    minSizeX: dashboardGridOptions.minSizeX,\n    maxSizeX: dashboardGridOptions.maxSizeX,\n    minSizeY: dashboardGridOptions.minSizeY,\n    maxSizeY: dashboardGridOptions.maxSizeY,\n  };\n\n  const config = widget.visualization ? registeredVisualizations[widget.visualization.type] : null;\n  if (isObject(config)) {\n    if (Object.prototype.hasOwnProperty.call(config, \"autoHeight\")) {\n      visualizationOptions.autoHeight = config.autoHeight;\n    }\n\n    // Width constraints\n    const minColumns = parseInt(config.minColumns, 10);\n    if (isFinite(minColumns) && minColumns >= 0) {\n      visualizationOptions.minSizeX = minColumns;\n    }\n    const maxColumns = parseInt(config.maxColumns, 10);\n    if (isFinite(maxColumns) && maxColumns >= 0) {\n      visualizationOptions.maxSizeX = Math.min(maxColumns, dashboardGridOptions.columns);\n    }\n\n    // Height constraints\n    // `minRows` is preferred, but it should be kept for backward compatibility\n    const height = parseInt(config.height, 10);\n    if (isFinite(height)) {\n      visualizationOptions.minSizeY = Math.ceil(height / dashboardGridOptions.rowHeight);\n    }\n    const minRows = parseInt(config.minRows, 10);\n    if (isFinite(minRows)) {\n      visualizationOptions.minSizeY = minRows;\n    }\n    const maxRows = parseInt(config.maxRows, 10);\n    if (isFinite(maxRows) && maxRows >= 0) {\n      visualizationOptions.maxSizeY = maxRows;\n    }\n\n    // Default dimensions\n    const defaultWidth = parseInt(config.defaultColumns, 10);\n    if (isFinite(defaultWidth) && defaultWidth > 0) {\n      visualizationOptions.sizeX = defaultWidth;\n    }\n    const defaultHeight = parseInt(config.defaultRows, 10);\n    if (isFinite(defaultHeight) && defaultHeight > 0) {\n      visualizationOptions.sizeY = defaultHeight;\n    }\n  }\n\n  return visualizationOptions;\n}\n\nexport const ParameterMappingType = {\n  DashboardLevel: \"dashboard-level\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nclass Widget {\n  static MappingType = ParameterMappingType;\n\n  constructor(data) {\n    // Copy properties\n    extend(this, data);\n\n    const visualizationOptions = calculatePositionOptions(this);\n\n    this.options = this.options || {};\n    this.options.position = extend(\n      {},\n      visualizationOptions,\n      pick(this.options.position, [\"col\", \"row\", \"sizeX\", \"sizeY\", \"autoHeight\"])\n    );\n\n    if (this.options.position.sizeY < 0) {\n      this.options.position.autoHeight = true;\n    }\n  }\n\n  get type() {\n    if (this.visualization) {\n      return WidgetTypeEnum.VISUALIZATION;\n    } else if (this.restricted) {\n      return WidgetTypeEnum.RESTRICTED;\n    }\n    return WidgetTypeEnum.TEXTBOX;\n  }\n\n  getQuery() {\n    if (!this.query && this.visualization) {\n      this.query = new Query(this.visualization.query);\n    }\n\n    return this.query;\n  }\n\n  getQueryResult() {\n    return this.data;\n  }\n\n  getName() {\n    if (this.visualization) {\n      return `${this.visualization.query.name} (${this.visualization.name})`;\n    }\n    return truncate(this.text, 20);\n  }\n\n  load(force, maxAge) {\n    if (!this.visualization) {\n      return Promise.resolve();\n    }\n\n    // Both `this.data` and `this.queryResult` are query result objects;\n    // `this.data` is last loaded query result;\n    // `this.queryResult` is currently loading query result;\n    // while widget is refreshing, `this.data` !== `this.queryResult`\n\n    if (force || this.queryResult === undefined) {\n      this.loading = true;\n      this.refreshStartedAt = moment();\n\n      if (maxAge === undefined || force) {\n        maxAge = force ? 0 : undefined;\n      }\n\n      const queryResult = this.getQuery().getQueryResult(maxAge);\n      this.queryResult = queryResult;\n\n      queryResult\n        .toPromise()\n        .then(result => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = result;\n          }\n          return result;\n        })\n        .catch(error => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = error;\n          }\n          return error;\n        });\n    }\n\n    return this.queryResult.toPromise();\n  }\n\n  save(key, value) {\n    const data = pick(this, \"options\", \"text\", \"id\", \"width\", \"dashboard_id\", \"visualization_id\");\n    if (key && value) {\n      data[key] = merge({}, data[key], value); // done like this so `this.options` doesn't get updated by side-effect\n    }\n\n    let url = \"api/widgets\";\n    if (this.id) {\n      url = `${url}/${this.id}`;\n    }\n\n    return axios.post(url, data).then(data => {\n      each(data, (v, k) => {\n        this[k] = v;\n      });\n\n      return this;\n    });\n  }\n\n  delete() {\n    const url = `api/widgets/${this.id}`;\n    return axios.delete(url);\n  }\n\n  isStaticParam(param) {\n    const mappings = this.getParameterMappings();\n    const mappingType = mappings[param.name].type;\n    return mappingType === Widget.MappingType.StaticValue;\n  }\n\n  getParametersDefs() {\n    const mappings = this.getParameterMappings();\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs() : [];\n\n    const queryParams = location.search;\n\n    const localTypes = [Widget.MappingType.WidgetLevel, Widget.MappingType.StaticValue];\n    const localParameters = map(\n      filter(params, param => localTypes.indexOf(mappings[param.name].type) >= 0),\n      param => {\n        const mapping = mappings[param.name];\n        const result = cloneParameter(param);\n        result.title = mapping.title || param.title;\n        result.locals = [param];\n        result.urlPrefix = `p_w${this.id}_`;\n        if (mapping.type === Widget.MappingType.StaticValue) {\n          result.setValue(mapping.value);\n        } else {\n          result.fromUrlParams(queryParams);\n        }\n        return result;\n      }\n    );\n\n    // order widget params using paramOrder\n    return sortBy(localParameters, param =>\n      includes(this.options.paramOrder, param.name)\n        ? indexOf(this.options.paramOrder, param.name)\n        : size(this.options.paramOrder)\n    );\n  }\n\n  getParameterMappings() {\n    if (!isObject(this.options.parameterMappings)) {\n      this.options.parameterMappings = {};\n    }\n\n    const existingParams = {};\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs(false) : [];\n    each(params, param => {\n      existingParams[param.name] = true;\n      if (!isObject(this.options.parameterMappings[param.name])) {\n        // \"migration\" for old dashboards: parameters with `global` flag\n        // should be mapped to a dashboard-level parameter with the same name\n        this.options.parameterMappings[param.name] = {\n          name: param.name,\n          type: param.global ? Widget.MappingType.DashboardLevel : Widget.MappingType.WidgetLevel,\n          mapTo: param.name, // map to param with the same name\n          value: null, // for StaticValue\n          title: \"\", // Use parameter's title\n        };\n      }\n    });\n\n    // Remove mappings for parameters that do not exists anymore\n    const removedParams = difference(keys(this.options.parameterMappings), keys(existingParams));\n    each(removedParams, name => {\n      delete this.options.parameterMappings[name];\n    });\n\n    return this.options.parameterMappings;\n  }\n\n  getLocalParameters() {\n    return filter(this.getParametersDefs(), param => !this.isStaticParam(param));\n  }\n}\n\nexport default Widget;\n","import _ from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport Widget from \"./widget\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport { policy } from \"@/services/policy\";\n\nexport const urlForDashboard = ({ id, slug }) => `dashboards/${id}-${slug}`;\n\nexport function collectDashboardFilters(dashboard, queryResults, urlParams) {\n  const filters = {};\n  _.each(queryResults, queryResult => {\n    const queryFilters = queryResult && queryResult.getFilters ? queryResult.getFilters() : [];\n    _.each(queryFilters, queryFilter => {\n      const hasQueryStringValue = _.has(urlParams, queryFilter.name);\n\n      if (!(hasQueryStringValue || dashboard.dashboard_filters_enabled)) {\n        // If dashboard filters not enabled, or no query string value given,\n        // skip filters linking.\n        return;\n      }\n\n      if (hasQueryStringValue) {\n        queryFilter.current = urlParams[queryFilter.name];\n      }\n\n      const filter = { ...queryFilter };\n      if (!_.has(filters, queryFilter.name)) {\n        filters[filter.name] = filter;\n      } else {\n        filters[filter.name].values = _.union(filters[filter.name].values, filter.values);\n      }\n    });\n  });\n\n  return _.values(filters);\n}\n\nfunction prepareWidgetsForDashboard(widgets) {\n  // Default height for auto-height widgets.\n  // Compute biggest widget size and choose between it and some magic number.\n  // This value should be big enough so auto-height widgets will not overlap other ones.\n  const defaultWidgetSizeY =\n    Math.max(\n      _.chain(widgets)\n        .map(w => w.options.position.sizeY)\n        .max()\n        .value(),\n      20\n    ) + 5;\n\n  // Fix layout:\n  // 1. sort and group widgets by row\n  // 2. update position of widgets in each row - place it right below\n  //    biggest widget from previous row\n  _.chain(widgets)\n    .sortBy(widget => widget.options.position.row)\n    .groupBy(widget => widget.options.position.row)\n    .reduce((row, widgetsAtRow) => {\n      let height = 1;\n      _.each(widgetsAtRow, widget => {\n        height = Math.max(\n          height,\n          widget.options.position.autoHeight ? defaultWidgetSizeY : widget.options.position.sizeY\n        );\n        widget.options.position.row = row;\n        if (widget.options.position.sizeY < 1) {\n          widget.options.position.sizeY = defaultWidgetSizeY;\n        }\n      });\n      return row + height;\n    }, 0)\n    .value();\n\n  // Sort widgets by updated column and row value\n  widgets = _.sortBy(widgets, widget => widget.options.position.col);\n  widgets = _.sortBy(widgets, widget => widget.options.position.row);\n\n  return widgets;\n}\n\nfunction calculateNewWidgetPosition(existingWidgets, newWidget) {\n  const width = _.extend({ sizeX: dashboardGridOptions.defaultSizeX }, _.extend({}, newWidget.options).position).sizeX;\n\n  // Find first free row for each column\n  const bottomLine = _.chain(existingWidgets)\n    .map(w => {\n      const options = _.extend({}, w.options);\n      const position = _.extend({ row: 0, sizeY: 0 }, options.position);\n      return {\n        left: position.col,\n        top: position.row,\n        right: position.col + position.sizeX,\n        bottom: position.row + position.sizeY,\n        width: position.sizeX,\n        height: position.sizeY,\n      };\n    })\n    .reduce((result, item) => {\n      const from = Math.max(item.left, 0);\n      const to = Math.min(item.right, result.length + 1);\n      for (let i = from; i < to; i += 1) {\n        result[i] = Math.max(result[i], item.bottom);\n      }\n      return result;\n    }, _.map(new Array(dashboardGridOptions.columns), _.constant(0)))\n    .value();\n\n  // Go through columns, pick them by count necessary to hold new block,\n  // and calculate bottom-most free row per group.\n  // Choose group with the top-most free row (comparing to other groups)\n  return _.chain(_.range(0, dashboardGridOptions.columns - width + 1))\n    .map(col => ({\n      col,\n      row: _.chain(bottomLine)\n        .slice(col, col + width)\n        .max()\n        .value(),\n    }))\n    .sortBy(\"row\")\n    .first()\n    .value();\n}\n\nexport function Dashboard(dashboard) {\n  _.extend(this, dashboard);\n  Object.defineProperty(this, \"url\", {\n    get: function() {\n      return urlForDashboard(this);\n    },\n  });\n}\n\nfunction prepareDashboardWidgets(widgets) {\n  return prepareWidgetsForDashboard(_.map(widgets, widget => new Widget(widget)));\n}\n\nfunction transformSingle(dashboard) {\n  dashboard = new Dashboard(dashboard);\n  if (dashboard.widgets) {\n    dashboard.widgets = prepareDashboardWidgets(dashboard.widgets);\n  }\n  dashboard.publicAccessEnabled = dashboard.public_url !== undefined;\n  return dashboard;\n}\n\nfunction transformResponse(data) {\n  if (data.results) {\n    data = { ...data, results: _.map(data.results, transformSingle) };\n  } else {\n    data = transformSingle(data);\n  }\n  return data;\n}\n\nconst saveOrCreateUrl = data => (data.id ? `api/dashboards/${data.id}` : \"api/dashboards\");\nconst DashboardService = {\n  get: ({ id, slug }) => {\n    const params = {};\n    if (!id) {\n      params.legacy = null;\n    }\n    return axios.get(`api/dashboards/${id || slug}`, { params }).then(transformResponse);\n  },\n  getByToken: ({ token }) => axios.get(`api/dashboards/public/${token}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(transformResponse),\n  delete: ({ id }) => axios.delete(`api/dashboards/${id}`).then(transformResponse),\n  query: params => axios.get(\"api/dashboards\", { params }).then(transformResponse),\n  recent: params => axios.get(\"api/dashboards/recent\", { params }).then(transformResponse),\n  myDashboards: params => axios.get(\"api/dashboards/my\", { params }).then(transformResponse),\n  favorites: params => axios.get(\"api/dashboards/favorites\", { params }).then(transformResponse),\n  favorite: ({ id }) => axios.post(`api/dashboards/${id}/favorite`),\n  unfavorite: ({ id }) => axios.delete(`api/dashboards/${id}/favorite`),\n};\n\n_.extend(Dashboard, DashboardService);\n\nDashboard.prepareDashboardWidgets = prepareDashboardWidgets;\nDashboard.prepareWidgetsForDashboard = prepareWidgetsForDashboard;\n\nDashboard.prototype.canEdit = function canEdit() {\n  return policy.canEdit(this);\n};\n\nDashboard.prototype.getParametersDefs = function getParametersDefs() {\n  const globalParams = {};\n  const queryParams = location.search;\n  _.each(this.widgets, widget => {\n    if (widget.getQuery()) {\n      const mappings = widget.getParameterMappings();\n      widget\n        .getQuery()\n        .getParametersDefs(false)\n        .forEach(param => {\n          const mapping = mappings[param.name];\n          if (mapping.type === Widget.MappingType.DashboardLevel) {\n            // create global param\n            if (!globalParams[mapping.mapTo]) {\n              globalParams[mapping.mapTo] = cloneParameter(param);\n              globalParams[mapping.mapTo].name = mapping.mapTo;\n              globalParams[mapping.mapTo].title = mapping.title || param.title;\n              globalParams[mapping.mapTo].locals = [];\n            }\n\n            // add to locals list\n            globalParams[mapping.mapTo].locals.push(param);\n          }\n        });\n    }\n  });\n  const resultingGlobalParams = _.values(\n    _.each(globalParams, param => {\n      param.setValue(param.value); // apply global param value to all locals\n      param.fromUrlParams(queryParams); // try to initialize from url (may do nothing)\n    })\n  );\n\n  // order dashboard params using paramOrder\n  return _.sortBy(resultingGlobalParams, param =>\n    _.includes(this.options.globalParamOrder, param.name)\n      ? _.indexOf(this.options.globalParamOrder, param.name)\n      : _.size(this.options.globalParamOrder)\n  );\n};\n\nDashboard.prototype.addWidget = function addWidget(textOrVisualization, options = {}) {\n  const props = {\n    dashboard_id: this.id,\n    options: {\n      ...options,\n      isHidden: false,\n      position: {},\n    },\n    text: \"\",\n    visualization_id: null,\n    visualization: null,\n  };\n\n  if (_.isString(textOrVisualization)) {\n    props.text = textOrVisualization;\n  } else if (_.isObject(textOrVisualization)) {\n    props.visualization_id = textOrVisualization.id;\n    props.visualization = textOrVisualization;\n  } else {\n    // TODO: Throw an error?\n  }\n\n  const widget = new Widget(props);\n\n  const position = calculateNewWidgetPosition(this.widgets, widget);\n  widget.options.position.col = position.col;\n  widget.options.position.row = position.row;\n\n  return widget.save().then(() => {\n    this.widgets = [...this.widgets, widget];\n    return widget;\n  });\n};\n\nDashboard.prototype.favorite = function favorite() {\n  return Dashboard.favorite(this);\n};\n\nDashboard.prototype.unfavorite = function unfavorite() {\n  return Dashboard.unfavorite(this);\n};\n","import { trim } from \"lodash\";\nimport React, { useState } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { policy } from \"@/services/policy\";\nimport { Dashboard } from \"@/services/dashboard\";\n\nfunction CreateDashboardDialog({ dialog }) {\n  const [name, setName] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [saveInProgress, setSaveInProgress] = useState(false);\n  const isCreateDashboardEnabled = policy.isCreateDashboardEnabled();\n\n  function handleNameChange(event) {\n    const value = trim(event.target.value);\n    setName(value);\n    setIsValid(value !== \"\");\n  }\n\n  function save() {\n    if (name !== \"\") {\n      setSaveInProgress(true);\n\n      Dashboard.save({ name }).then(data => {\n        dialog.close();\n        navigateTo(`${data.url}?edit`);\n      });\n      recordEvent(\"create\", \"dashboard\");\n    }\n  }\n\n  return (\n    <Modal\n      {...dialog.props}\n      {...(isCreateDashboardEnabled ? {} : { footer: null })}\n      title=\"New Dashboard\"\n      okText=\"Save\"\n      cancelText=\"Close\"\n      okButtonProps={{\n        disabled: !isValid || saveInProgress,\n        loading: saveInProgress,\n        \"data-test\": \"DashboardSaveButton\",\n      }}\n      cancelButtonProps={{\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      closable={!saveInProgress}\n      maskClosable={!saveInProgress}\n      wrapProps={{\n        \"data-test\": \"CreateDashboardDialog\",\n      }}>\n      <DynamicComponent name=\"CreateDashboardDialogExtra\" disabled={!isCreateDashboardEnabled}>\n        <Input\n          defaultValue={name}\n          onChange={handleNameChange}\n          onPressEnter={save}\n          placeholder=\"Dashboard Name\"\n          aria-label=\"Dashboard name\"\n          disabled={saveInProgress}\n          autoFocus\n        />\n      </DynamicComponent>\n    </Modal>\n  );\n}\n\nCreateDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateDashboardDialog);\n","import { isString, isObject, isFunction, extend, omit, sortBy, find, filter } from \"lodash\";\nimport { stripBase } from \"@/components/ApplicationArea/Router\";\nimport { currentUser } from \"@/services/auth\";\n\nclass SettingsMenuItem {\n  constructor(menuItem) {\n    extend(this, { pathPrefix: `/${menuItem.path}` }, omit(menuItem, [\"isActive\", \"isAvailable\"]));\n    if (isFunction(menuItem.isActive)) {\n      this.isActive = menuItem.isActive;\n    }\n    if (isFunction(menuItem.isAvailable)) {\n      this.isAvailable = menuItem.isAvailable;\n    }\n  }\n\n  isActive(path) {\n    return path.startsWith(this.pathPrefix);\n  }\n\n  isAvailable() {\n    return this.permission === undefined || currentUser.hasPermission(this.permission);\n  }\n}\n\nclass SettingsMenu {\n  items = [];\n\n  add(id, item) {\n    id = isString(id) ? id : null;\n    this.remove(id);\n    if (isObject(item)) {\n      this.items.push(new SettingsMenuItem({ ...item, id }));\n      this.items = sortBy(this.items, \"order\");\n    }\n  }\n\n  remove(id) {\n    if (isString(id)) {\n      this.items = filter(this.items, item => item.id !== id);\n      // removing item does not change order of other items, so no need to sort\n    }\n  }\n\n  getAvailableItems() {\n    return filter(this.items, item => item.isAvailable());\n  }\n\n  getActiveItem(path) {\n    const strippedPath = stripBase(path);\n    return find(this.items, item => item.isActive(strippedPath));\n  }\n}\n\nexport default new SettingsMenu();\n","import React from \"react\";\nimport Link from \"@/components/Link\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport frontendVersion from \"@/version.json\";\n\nexport default function VersionInfo() {\n  return (\n    <React.Fragment>\n      <div>\n        Version: {clientConfig.version}\n        {frontendVersion !== clientConfig.version && ` (${frontendVersion.substring(0, 8)})`}\n      </div>\n      {clientConfig.newVersionAvailable && currentUser.hasPermission(\"super_admin\") && (\n        <div className=\"m-t-10\">\n          {/* eslint-disable react/jsx-no-target-blank */}\n          <Link href=\"https://version.redash.io/\" className=\"update-available\" target=\"_blank\" rel=\"noopener\">\n            Update Available <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">(opens in a new tab)</span>\n          </Link>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { first, includes } from \"lodash\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { useCurrentRoute } from \"@/components/ApplicationArea/Router\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport DesktopOutlinedIcon from \"@ant-design/icons/DesktopOutlined\";\nimport CodeOutlinedIcon from \"@ant-design/icons/CodeOutlined\";\nimport AlertOutlinedIcon from \"@ant-design/icons/AlertOutlined\";\nimport PlusOutlinedIcon from \"@ant-design/icons/PlusOutlined\";\nimport QuestionCircleOutlinedIcon from \"@ant-design/icons/QuestionCircleOutlined\";\nimport SettingOutlinedIcon from \"@ant-design/icons/SettingOutlined\";\nimport VersionInfo from \"./VersionInfo\";\n\nimport \"./DesktopNavbar.less\";\n\nfunction NavbarSection({ children, ...props }) {\n  return (\n    <Menu selectable={false} mode=\"vertical\" theme=\"dark\" {...props}>\n      {children}\n    </Menu>\n  );\n}\n\nfunction useNavbarActiveState() {\n  const currentRoute = useCurrentRoute();\n\n  return useMemo(\n    () => ({\n      dashboards: includes(\n        [\n          \"Dashboards.List\",\n          \"Dashboards.Favorites\",\n          \"Dashboards.My\",\n          \"Dashboards.ViewOrEdit\",\n          \"Dashboards.LegacyViewOrEdit\",\n        ],\n        currentRoute.id\n      ),\n      queries: includes(\n        [\n          \"Queries.List\",\n          \"Queries.Favorites\",\n          \"Queries.Archived\",\n          \"Queries.My\",\n          \"Queries.View\",\n          \"Queries.New\",\n          \"Queries.Edit\",\n        ],\n        currentRoute.id\n      ),\n      dataSources: includes([\"DataSources.List\"], currentRoute.id),\n      alerts: includes([\"Alerts.List\", \"Alerts.New\", \"Alerts.View\", \"Alerts.Edit\"], currentRoute.id),\n    }),\n    [currentRoute.id]\n  );\n}\n\nexport default function DesktopNavbar() {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  const activeState = useNavbarActiveState();\n\n  const canCreateQuery = currentUser.hasPermission(\"create_query\");\n  const canCreateDashboard = currentUser.hasPermission(\"create_dashboard\");\n  const canCreateAlert = currentUser.hasPermission(\"list_alerts\");\n\n  return (\n    <nav className=\"desktop-navbar\">\n      <NavbarSection className=\"desktop-navbar-logo\">\n        <div role=\"menuitem\">\n          <Link href=\"./\">\n            <img src={logoUrl} alt=\"Redash\" />\n          </Link>\n        </div>\n      </NavbarSection>\n\n      <NavbarSection>\n        {currentUser.hasPermission(\"list_dashboards\") && (\n          <Menu.Item key=\"dashboards\" className={activeState.dashboards ? \"navbar-active-item\" : null}>\n            <Link href=\"dashboards\">\n              <DesktopOutlinedIcon aria-label=\"Dashboard navigation button\" />\n              <span className=\"desktop-navbar-label\">Dashboards</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"view_query\") && (\n          <Menu.Item key=\"queries\" className={activeState.queries ? \"navbar-active-item\" : null}>\n            <Link href=\"queries\">\n              <CodeOutlinedIcon aria-label=\"Queries navigation button\" />\n              <span className=\"desktop-navbar-label\">Queries</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"list_alerts\") && (\n          <Menu.Item key=\"alerts\" className={activeState.alerts ? \"navbar-active-item\" : null}>\n            <Link href=\"alerts\">\n              <AlertOutlinedIcon aria-label=\"Alerts navigation button\" />\n              <span className=\"desktop-navbar-label\">Alerts</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-spacer\">\n        {(canCreateQuery || canCreateDashboard || canCreateAlert) && (\n          <Menu.SubMenu\n            key=\"create\"\n            popupClassName=\"desktop-navbar-submenu\"\n            data-test=\"CreateButton\"\n            tabIndex={0}\n            title={\n              <React.Fragment>\n                <PlusOutlinedIcon />\n                <span className=\"desktop-navbar-label\">Create</span>\n              </React.Fragment>\n            }>\n            {canCreateQuery && (\n              <Menu.Item key=\"new-query\">\n                <Link href=\"queries/new\" data-test=\"CreateQueryMenuItem\">\n                  New Query\n                </Link>\n              </Menu.Item>\n            )}\n            {canCreateDashboard && (\n              <Menu.Item key=\"new-dashboard\">\n                <PlainButton data-test=\"CreateDashboardMenuItem\" onClick={() => CreateDashboardDialog.showModal()}>\n                  New Dashboard\n                </PlainButton>\n              </Menu.Item>\n            )}\n            {canCreateAlert && (\n              <Menu.Item key=\"new-alert\">\n                <Link data-test=\"CreateAlertMenuItem\" href=\"alerts/new\">\n                  New Alert\n                </Link>\n              </Menu.Item>\n            )}\n          </Menu.SubMenu>\n        )}\n      </NavbarSection>\n\n      <NavbarSection>\n        <Menu.Item key=\"help\">\n          <HelpTrigger showTooltip={false} type=\"HOME\" tabIndex={0}>\n            <QuestionCircleOutlinedIcon />\n            <span className=\"desktop-navbar-label\">Help</span>\n          </HelpTrigger>\n        </Menu.Item>\n        {firstSettingsTab && (\n          <Menu.Item key=\"settings\" className={activeState.dataSources ? \"navbar-active-item\" : null}>\n            <Link href={firstSettingsTab.path} data-test=\"SettingsLink\">\n              <SettingOutlinedIcon />\n              <span className=\"desktop-navbar-label\">Settings</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-profile-menu\">\n        <Menu.SubMenu\n          key=\"profile\"\n          popupClassName=\"desktop-navbar-submenu\"\n          tabIndex={0}\n          title={\n            <span data-test=\"ProfileDropdown\" className=\"desktop-navbar-profile-menu-title\">\n              <img className=\"profile__image_thumb\" src={currentUser.profile_image_url} alt={currentUser.name} />\n            </span>\n          }>\n          <Menu.Item key=\"profile\">\n            <Link href=\"users/me\">Profile</Link>\n          </Menu.Item>\n          {currentUser.hasPermission(\"super_admin\") && (\n            <Menu.Item key=\"status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n          )}\n          <Menu.Divider />\n          <Menu.Item key=\"logout\">\n            <PlainButton data-test=\"LogOutButton\" onClick={() => Auth.logout()}>\n              Log out\n            </PlainButton>\n          </Menu.Item>\n          <Menu.Divider />\n          <Menu.Item key=\"version\" role=\"presentation\" disabled className=\"version-info\">\n            <VersionInfo />\n          </Menu.Item>\n        </Menu.SubMenu>\n      </NavbarSection>\n    </nav>\n  );\n}\n","import { first } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport MenuOutlinedIcon from \"@ant-design/icons/MenuOutlined\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport \"./MobileNavbar.less\";\n\nexport default function MobileNavbar({ getPopupContainer }) {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  return (\n    <div className=\"mobile-navbar\">\n      <div className=\"mobile-navbar-logo\">\n        <Link href=\"./\">\n          <img src={logoUrl} alt=\"Redash\" />\n        </Link>\n      </div>\n      <div>\n        <Dropdown\n          overlayStyle={{ minWidth: 200 }}\n          trigger={[\"click\"]}\n          getPopupContainer={getPopupContainer} // so the overlay menu stays with the fixed header when page scrolls\n          overlay={\n            <Menu mode=\"vertical\" theme=\"dark\" selectable={false} className=\"mobile-navbar-menu\">\n              {currentUser.hasPermission(\"list_dashboards\") && (\n                <Menu.Item key=\"dashboards\">\n                  <Link href=\"dashboards\">Dashboards</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"view_query\") && (\n                <Menu.Item key=\"queries\">\n                  <Link href=\"queries\">Queries</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"list_alerts\") && (\n                <Menu.Item key=\"alerts\">\n                  <Link href=\"alerts\">Alerts</Link>\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"profile\">\n                <Link href=\"users/me\">Edit Profile</Link>\n              </Menu.Item>\n              <Menu.Divider />\n              {firstSettingsTab && (\n                <Menu.Item key=\"settings\">\n                  <Link href={firstSettingsTab.path}>Settings</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && (\n                <Menu.Item key=\"status\">\n                  <Link href=\"admin/status\">System Status</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && <Menu.Divider />}\n              <Menu.Item key=\"help\">\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <Link href=\"https://redash.io/help\" target=\"_blank\" rel=\"noopener\">\n                  Help\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"logout\" onClick={() => Auth.logout()}>\n                Log out\n              </Menu.Item>\n            </Menu>\n          }>\n          <Button className=\"mobile-navbar-toggle-button\" ghost>\n            <MenuOutlinedIcon />\n          </Button>\n        </Dropdown>\n      </div>\n    </div>\n  );\n}\n\nMobileNavbar.propTypes = {\n  getPopupContainer: PropTypes.func,\n};\n\nMobileNavbar.defaultProps = {\n  getPopupContainer: null,\n};\n","import React, { useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DesktopNavbar from \"./DesktopNavbar\";\nimport MobileNavbar from \"./MobileNavbar\";\n\nimport \"./index.less\";\n\nexport default function ApplicationLayout({ children }) {\n  const mobileNavbarContainerRef = useRef();\n\n  const getMobileNavbarPopupContainer = useCallback(() => mobileNavbarContainerRef.current, []);\n\n  return (\n    <React.Fragment>\n      <DynamicComponent name=\"ApplicationWrapper\">\n        <div className=\"application-layout-side-menu\">\n          <DynamicComponent name=\"ApplicationDesktopNavbar\">\n            <DesktopNavbar />\n          </DynamicComponent>\n        </div>\n        <div className=\"application-layout-content\">\n          <nav className=\"application-layout-top-menu\" ref={mobileNavbarContainerRef}>\n            <DynamicComponent name=\"ApplicationMobileNavbar\" getPopupContainer={getMobileNavbarPopupContainer}>\n              <MobileNavbar getPopupContainer={getMobileNavbarPopupContainer} />\n            </DynamicComponent>\n          </nav>\n          {children}\n        </div>\n      </DynamicComponent>\n    </React.Fragment>\n  );\n}\n\nApplicationLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nApplicationLayout.defaultProps = {\n  children: null,\n};\n","import React, { useEffect, useState } from \"react\";\nimport ErrorBoundary, { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport { CurrentRoute } from \"@/services/routes\";\nimport organizationStatus from \"@/services/organizationStatus\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport ApplicationLayout from \"./ApplicationLayout\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport type UserSessionWrapperRenderChildrenProps<P> = {\n  pageTitle?: string;\n  onError: (error: Error) => void;\n} & P;\n\nexport interface UserSessionWrapperProps<P> {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  currentRoute: CurrentRoute<P>;\n  bodyClass?: string;\n}\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n\nexport function UserSessionWrapper<P>({ bodyClass, currentRoute, render }: UserSessionWrapperProps<P>) {\n  const [isAuthenticated, setIsAuthenticated] = useState(!!Auth.isAuthenticated());\n  useEffect(() => {\n    let isCancelled = false;\n    Promise.all([Auth.requireSession(), organizationStatus.refresh(), policy.refresh()])\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(!!Auth.isAuthenticated());\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (bodyClass) {\n      document.body.classList.toggle(bodyClass, true);\n      return () => {\n        document.body.classList.toggle(bodyClass, false);\n      };\n    }\n  }, [bodyClass]);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ApplicationLayout>\n      <React.Fragment key={currentRoute.key}>\n        {/* @ts-expect-error FIXME */}\n        <ErrorBoundary renderError={(error: Error) => <ErrorMessage error={error} />}>\n          <ErrorBoundaryContext.Consumer>\n            {(\n              {\n                handleError,\n              } /* : { handleError: UserSessionWrapperRenderChildrenProps<P>[\"onError\"] } FIXME bring back type */\n            ) => render({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError })}\n          </ErrorBoundaryContext.Consumer>\n        </ErrorBoundary>\n      </React.Fragment>\n    </ApplicationLayout>\n  );\n}\n\nexport type RouteWithUserSessionOptions<P> = {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  bodyClass?: string;\n  title: string;\n  path: string;\n};\n\nexport const UserSessionWrapperDynamicComponentName = \"UserSessionWrapper\";\n\nexport default function routeWithUserSession<P extends {} = {}>({\n  render: originalRender,\n  bodyClass,\n  ...rest\n}: RouteWithUserSessionOptions<P>) {\n  return {\n    ...rest,\n    render: (currentRoute: CurrentRoute<P>) => {\n      const props = {\n        render: originalRender,\n        bodyClass,\n        currentRoute,\n      };\n      return (\n        <DynamicComponent\n          {...props}\n          name={UserSessionWrapperDynamicComponentName}\n          fallback={<UserSessionWrapper {...props} />}\n        />\n      );\n    },\n  };\n}\n","import { keys, some } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { currentUser } from \"@/services/auth\";\nimport organizationStatus from \"@/services/organizationStatus\";\n\nimport \"./empty-state.less\";\n\nexport function Step({ show, completed, text, url, urlText, onClick }) {\n  if (!show) {\n    return null;\n  }\n\n  const commonProps = { children: urlText, onClick };\n\n  return (\n    <li className={classNames({ done: completed })}>\n      {url ? <Link href={url} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />} {text}\n    </li>\n  );\n}\n\nStep.propTypes = {\n  show: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.node,\n  url: PropTypes.string,\n  urlTarget: PropTypes.string,\n  urlText: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nStep.defaultProps = {\n  url: null,\n  urlTarget: null,\n  urlText: null,\n  text: null,\n  onClick: null,\n};\n\nexport function EmptyStateHelpMessage({ helpTriggerType }) {\n  return (\n    <p>\n      Need more support?{\" \"}\n      <HelpTrigger className=\"f-14\" type={helpTriggerType} showTooltip={false}>\n        See our Help\n      </HelpTrigger>\n    </p>\n  );\n}\n\nEmptyStateHelpMessage.propTypes = {\n  helpTriggerType: PropTypes.string.isRequired,\n};\n\nfunction EmptyState({\n  icon,\n  header,\n  description,\n  illustration,\n  helpMessage,\n  closable,\n  onClose,\n  onboardingMode,\n  showAlertStep,\n  showDashboardStep,\n  showDataSourceStep,\n  showInviteStep,\n  getStepsItems,\n  illustrationPath,\n}) {\n  const isAvailable = {\n    dataSource: showDataSourceStep,\n    query: true,\n    alert: showAlertStep,\n    dashboard: showDashboardStep,\n    inviteUsers: showInviteStep,\n  };\n\n  const isCompleted = {\n    dataSource: organizationStatus.objectCounters.data_sources > 0,\n    query: organizationStatus.objectCounters.queries > 0,\n    alert: organizationStatus.objectCounters.alerts > 0,\n    dashboard: organizationStatus.objectCounters.dashboards > 0,\n    inviteUsers: organizationStatus.objectCounters.users > 1,\n  };\n\n  const showCreateDashboardDialog = useCallback(() => {\n    CreateDashboardDialog.showModal();\n  }, []);\n\n  // Show if `onboardingMode=false` or any requested step not completed\n  const shouldShow = !onboardingMode || some(keys(isAvailable), step => isAvailable[step] && !isCompleted[step]);\n\n  if (!shouldShow) {\n    return null;\n  }\n\n  const renderDataSourcesStep = () => {\n    if (currentUser.isAdmin) {\n      return (\n        <Step\n          key=\"dataSources\"\n          show={isAvailable.dataSource}\n          completed={isCompleted.dataSource}\n          url=\"data_sources/new\"\n          urlText=\"Connect a Data Source\"\n        />\n      );\n    }\n\n    return (\n      <Step\n        key=\"dataSources\"\n        show={isAvailable.dataSource}\n        completed={isCompleted.dataSource}\n        text=\"Ask an account admin to connect a data source\"\n      />\n    );\n  };\n\n  const defaultStepsItems = [\n    {\n      key: \"dataSources\",\n      node: renderDataSourcesStep(),\n    },\n    {\n      key: \"queries\",\n      node: (\n        <Step\n          key=\"queries\"\n          show={isAvailable.query}\n          completed={isCompleted.query}\n          url=\"queries/new\"\n          urlText=\"Create your first Query\"\n        />\n      ),\n    },\n    {\n      key: \"alerts\",\n      node: (\n        <Step\n          key=\"alerts\"\n          show={isAvailable.alert}\n          completed={isCompleted.alert}\n          url=\"alerts/new\"\n          urlText=\"Create your first Alert\"\n        />\n      ),\n    },\n    {\n      key: \"dashboards\",\n      node: (\n        <Step\n          key=\"dashboards\"\n          show={isAvailable.dashboard}\n          completed={isCompleted.dashboard}\n          onClick={showCreateDashboardDialog}\n          urlText=\"Create your first Dashboard\"\n        />\n      ),\n    },\n    {\n      key: \"users\",\n      node: (\n        <Step\n          key=\"users\"\n          show={isAvailable.inviteUsers}\n          completed={isCompleted.inviteUsers}\n          url=\"users/new\"\n          urlText=\"Invite your team members\"\n        />\n      ),\n    },\n  ];\n\n  const stepsItems = getStepsItems ? getStepsItems(defaultStepsItems) : defaultStepsItems;\n  const imageSource = illustrationPath ? illustrationPath : \"static/images/illustrations/\" + illustration + \".svg\";\n\n  return (\n    <div className=\"empty-state-wrapper\">\n      <div className=\"empty-state bg-white tiled\">\n        <div className=\"empty-state__summary\">\n          {header && <h4>{header}</h4>}\n          <h2>\n            <i className={icon} aria-hidden=\"true\" />\n          </h2>\n          <p>{description}</p>\n          <img src={imageSource} alt={illustration + \" Illustration\"} width=\"75%\" />\n        </div>\n        <div className=\"empty-state__steps\">\n          <h4>Let&apos;s get started</h4>\n          <ol>{stepsItems.map(item => item.node)}</ol>\n          {helpMessage}\n        </div>\n      </div>\n      {closable && (\n        <PlainButton className=\"close-button\" aria-label=\"Close\" onClick={onClose}>\n          <CloseOutlinedIcon />\n        </PlainButton>\n      )}\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  icon: PropTypes.string,\n  header: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  illustration: PropTypes.string.isRequired,\n  illustrationPath: PropTypes.string,\n  helpMessage: PropTypes.node,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n\n  onboardingMode: PropTypes.bool,\n  showAlertStep: PropTypes.bool,\n  showDashboardStep: PropTypes.bool,\n  showDataSourceStep: PropTypes.bool,\n  showInviteStep: PropTypes.bool,\n\n  getStepItems: PropTypes.func,\n};\n\nEmptyState.defaultProps = {\n  icon: null,\n  header: null,\n  helpMessage: null,\n  closable: false,\n  onClose: () => {},\n\n  onboardingMode: false,\n  showAlertStep: false,\n  showDashboardStep: false,\n  showDataSourceStep: true,\n  showInviteStep: false,\n};\n\nexport default EmptyState;\n","import notification from \"antd/lib/notification\";\n\nnotification.config({\n  placement: \"bottomRight\",\n  duration: 3,\n});\n\nconst simpleNotification = {};\n\n[\"success\", \"error\", \"info\", \"warning\", \"warn\"].forEach(action => {\n  // eslint-disable-next-line arrow-body-style\n  simpleNotification[action] = (message, description = null, props = null) => {\n    return notification[action]({ ...props, message, description });\n  };\n});\n\nexport default {\n  // export Ant's notification and replace actions\n  ...notification,\n  ...simpleNotification,\n};\n","import { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\n\nexport default {\n  get: () => axios.get(\"api/settings/organization\"),\n  save: (data, message = \"Settings changes saved.\") =>\n    axios\n      .post(\"api/settings/organization\", data)\n      .then(data => {\n        notification.success(message);\n        return data;\n      })\n      .catch(() => {\n        notification.error(\"Failed saving changes.\");\n      }),\n};\n","import React, { useState } from \"react\";\nimport Card from \"antd/lib/card\";\nimport Button from \"antd/lib/button\";\nimport Typography from \"antd/lib/typography\";\nimport { clientConfig } from \"@/services/auth\";\nimport Link from \"@/components/Link\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport OrgSettings from \"@/services/organizationSettings\";\n\nconst Text = Typography.Text;\n\nfunction BeaconConsent() {\n  const [hide, setHide] = useState(false);\n\n  if (!clientConfig.showBeaconConsentMessage || hide) {\n    return null;\n  }\n\n  const hideConsentCard = () => {\n    clientConfig.showBeaconConsentMessage = false;\n    setHide(true);\n  };\n\n  const confirmConsent = confirm => {\n    let message = \"🙏 Thank you.\";\n\n    if (!confirm) {\n      message = \"Settings Saved.\";\n    }\n\n    OrgSettings.save({ beacon_consent: confirm }, message)\n      // .then(() => {\n      //   // const settings = get(response, 'settings');\n      //   // this.setState({ settings, formValues: { ...settings } });\n      // })\n      .finally(hideConsentCard);\n  };\n\n  return (\n    <DynamicComponent name=\"BeaconConsent\">\n      <div className=\"m-t-10 tiled\">\n        <Card\n          title={\n            <>\n              Would you be ok with sharing anonymous usage data with the Redash team?{\" \"}\n              <HelpTrigger type=\"USAGE_DATA_SHARING\" />\n            </>\n          }\n          bordered={false}>\n          <Text>Help Redash improve by automatically sending anonymous usage data:</Text>\n          <div className=\"m-t-5\">\n            <ul>\n              <li> Number of users, queries, dashboards, alerts, widgets and visualizations.</li>\n              <li> Types of data sources, alert destinations and visualizations.</li>\n            </ul>\n          </div>\n          <Text>All data is aggregated and will never include any sensitive or private data.</Text>\n          <div className=\"m-t-5\">\n            <Button type=\"primary\" className=\"m-r-5\" onClick={() => confirmConsent(true)}>\n              Yes\n            </Button>\n            <Button type=\"default\" onClick={() => confirmConsent(false)}>\n              No\n            </Button>\n          </div>\n          <div className=\"m-t-15\">\n            <Text type=\"secondary\">\n              You can change this setting anytime from the{\" \"}\n              <Link href=\"settings/organization\">Organization Settings</Link> page.\n            </Text>\n          </div>\n        </Card>\n      </div>\n    </DynamicComponent>\n  );\n}\n\nexport default BeaconConsent;\n","import { isString, isObject, filter, sortBy } from \"lodash\";\nimport React from \"react\";\nimport { Context, Route as UniversalRouterRoute } from \"universal-router\";\nimport pathToRegexp from \"path-to-regexp\";\n\nexport interface CurrentRoute<P> {\n  id: string | null;\n  key?: string;\n  title: string;\n  routeParams: P;\n}\n\nexport interface RedashRoute<P = {}, C extends Context = Context, R = any> extends UniversalRouterRoute<C, R> {\n  path: string; // we don't use other UniversalRouterRoute options, path should be available and should be a string\n  key?: string; // generated in Router.jsx\n  title: string;\n  render?: (currentRoute: CurrentRoute<P>) => React.ReactNode;\n  getApiKey?: () => string;\n}\n\ninterface RouteItem extends RedashRoute<any> {\n  id: string | null;\n}\n\nfunction getRouteParamsCount(path: string) {\n  const tokens = pathToRegexp.parse(path);\n  return filter(tokens, isObject).length;\n}\n\nclass Routes {\n  _items: RouteItem[] = [];\n  _sorted = false;\n\n  get items(): RouteItem[] {\n    if (!this._sorted) {\n      this._items = sortBy(this._items, [\n        item => getRouteParamsCount(item.path), // simple definitions first, with more params - last\n        item => -item.path.length, // longer first\n        item => item.path, // if same type and length - sort alphabetically\n      ]);\n      this._sorted = true;\n    }\n    return this._items;\n  }\n\n  public register<P>(id: string, route: RedashRoute<P>) {\n    const idOrNull = isString(id) ? id : null;\n    this.unregister(idOrNull);\n    if (isObject(route)) {\n      this._items = [...this.items, { ...route, id: idOrNull }];\n      this._sorted = false;\n    }\n  }\n\n  public unregister(id: string | null) {\n    if (isString(id)) {\n      // removing item does not break their order (if already sorted)\n      this._items = filter(this.items, item => item.id !== id);\n    }\n  }\n}\n\nexport default new Routes();\n","import { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { Query } from \"@/services/query\";\n\nexport function FavoriteList({ title, resource, itemUrl, emptyState }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    resource\n      .favorites()\n      .then(({ results }) => setItems(results))\n      .finally(() => setLoading(false));\n  }, [resource]);\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center m-b-20\">\n        <p className=\"flex-fill f-500 c-black m-0\">{title}</p>\n        {loading && <LoadingOutlinedIcon />}\n      </div>\n      {!isEmpty(items) && (\n        <div role=\"list\" className=\"list-group\">\n          {items.map(item => (\n            <Link key={itemUrl(item)} role=\"listitem\" className=\"list-group-item\" href={itemUrl(item)}>\n              <span className=\"btn-favorite m-r-5\">\n                <i className=\"fa fa-star\" aria-hidden=\"true\" />\n              </span>\n              {item.name}\n              {item.is_draft && <span className=\"label label-default m-l-5\">Unpublished</span>}\n            </Link>\n          ))}\n        </div>\n      )}\n      {isEmpty(items) && !loading && emptyState}\n    </>\n  );\n}\n\nFavoriteList.propTypes = {\n  title: PropTypes.string.isRequired,\n  resource: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  itemUrl: PropTypes.func.isRequired,\n  emptyState: PropTypes.node,\n};\nFavoriteList.defaultProps = { emptyState: null };\n\nexport function DashboardAndQueryFavoritesList() {\n  return (\n    <div className=\"tile\">\n      <div className=\"t-body tb-padding\">\n        <div className=\"row home-favorites-list\">\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Dashboards\"\n              resource={Dashboard}\n              itemUrl={dashboard => dashboard.url}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"dashboards\">Dashboards</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Queries\"\n              resource={Query}\n              itemUrl={query => `queries/${query.id}`}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"queries\">Queries</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { includes } from \"lodash\";\nimport React, { useEffect } from \"react\";\n\nimport Alert from \"antd/lib/alert\";\nimport Link from \"@/components/Link\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport BeaconConsent from \"@/components/BeaconConsent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { messages } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport { DashboardAndQueryFavoritesList } from \"./components/FavoritesList\";\n\nimport \"./Home.less\";\n\nfunction DeprecatedEmbedFeatureAlert() {\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          You have enabled <code>ALLOW_PARAMETERS_IN_EMBEDS</code>. This setting is now deprecated and should be turned\n          off. Parameters in embeds are supported by default.{\" \"}\n          <Link\n            href=\"https://discuss.redash.io/t/support-for-parameters-in-embedded-visualizations/3337\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Read more\n          </Link>\n          .\n        </>\n      }\n    />\n  );\n}\n\nfunction EmailNotVerifiedAlert() {\n  const verifyEmail = () => {\n    axios.post(\"verification_email/\").then(data => {\n      notification.success(data.message);\n    });\n  };\n\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          We have sent an email with a confirmation link to your email address. Please follow the link to verify your\n          email address.{\" \"}\n          <PlainButton type=\"link\" onClick={verifyEmail}>\n            Resend email\n          </PlainButton>\n          .\n        </>\n      }\n    />\n  );\n}\n\nexport default function Home() {\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"personal_homepage\");\n  }, []);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"container\">\n        {includes(messages, \"using-deprecated-embed-feature\") && <DeprecatedEmbedFeatureAlert />}\n        {includes(messages, \"email-not-verified\") && <EmailNotVerifiedAlert />}\n        <DynamicComponent name=\"Home.EmptyState\">\n          <EmptyState\n            header=\"Welcome to Redash 👋\"\n            description=\"Connect to any data source, easily visualize and share your data\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"GETTING_STARTED\" />}\n            showDashboardStep\n            showInviteStep\n            onboardingMode\n          />\n        </DynamicComponent>\n        <DynamicComponent name=\"HomeExtra\" />\n        <DashboardAndQueryFavoritesList />\n        <BeaconConsent />\n      </div>\n    </div>\n  );\n}\n\nroutes.register(\n  \"Home\",\n  routeWithUserSession({\n    path: \"/\",\n    title: \"Redash\",\n    render: pageProps => <Home {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.less\";\n\nexport default function PageHeader({ title, actions }) {\n  return (\n    <div className=\"page-header-wrapper\">\n      <h3>{title}</h3>\n      {actions && <div className=\"page-header-actions\">{actions}</div>}\n    </div>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n  actions: PropTypes.node,\n};\n\nPageHeader.defaultProps = {\n  title: \"\",\n  actions: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\n\nimport \"./layout.less\";\n\nexport default function Layout({ activeTab, children }) {\n  return (\n    <div className=\"admin-page-layout\">\n      <div className=\"container\">\n        <PageHeader title=\"Admin\" />\n        <div className=\"bg-white tiled\">\n          <Menu selectedKeys={[activeTab]} selectable={false} mode=\"horizontal\">\n            <Menu.Item key=\"system_status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"jobs\">\n              <Link href=\"admin/queries/jobs\">RQ Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"outdated_queries\">\n              <Link href=\"admin/queries/outdated\">Outdated Queries</Link>\n            </Menu.Item>\n          </Menu>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  activeTab: PropTypes.string,\n  children: PropTypes.node,\n};\n\nLayout.defaultProps = {\n  activeTab: \"system_status\",\n  children: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default class FavoritesControl extends React.Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      is_favorite: PropTypes.bool.isRequired,\n    }).isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  toggleItem(event, item, callback) {\n    const action = item.is_favorite ? item.unfavorite.bind(item) : item.favorite.bind(item);\n    const savedIsFavorite = item.is_favorite;\n\n    action().then(() => {\n      item.is_favorite = !savedIsFavorite;\n      this.forceUpdate();\n      callback();\n    });\n  }\n\n  render() {\n    const { item, onChange } = this.props;\n    const icon = item.is_favorite ? \"fa fa-star\" : \"fa fa-star-o\";\n    const title = item.is_favorite ? \"Remove from favorites\" : \"Add to favorites\";\n    return (\n      <PlainButton\n        title={title}\n        aria-label={title}\n        className=\"favorites-control btn-favorite\"\n        onClick={event => this.toggleItem(event, item, onChange)}>\n        <i className={icon} aria-hidden=\"true\" />\n      </PlainButton>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport { wrap } from \"lodash\";\nimport moment from \"moment\";\n\nexport const DataSource = PropTypes.shape({\n  syntax: PropTypes.string,\n  options: PropTypes.shape({\n    doc: PropTypes.string,\n    doc_url: PropTypes.string,\n  }),\n  type_name: PropTypes.string,\n});\n\nexport const Table = PropTypes.shape({\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const Schema = PropTypes.arrayOf(Table);\n\nexport const RefreshScheduleType = PropTypes.shape({\n  interval: PropTypes.number,\n  time: PropTypes.string,\n  day_of_week: PropTypes.string,\n  until: PropTypes.string,\n});\n\nexport const RefreshScheduleDefault = {\n  interval: null,\n  time: null,\n  day_of_week: null,\n  until: null,\n};\n\nexport const UserProfile = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  profileImageUrl: PropTypes.string,\n  apiKey: PropTypes.string,\n  isDisabled: PropTypes.bool,\n});\n\nexport const Destination = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n});\n\nexport const Query = PropTypes.shape({\n  id: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  data_source_id: PropTypes.any.isRequired,\n  created_at: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  user: UserProfile,\n  query: PropTypes.string,\n  queryHash: PropTypes.string,\n  is_safe: PropTypes.bool.isRequired,\n  is_draft: PropTypes.bool.isRequired,\n  is_archived: PropTypes.bool.isRequired,\n  api_key: PropTypes.string.isRequired,\n});\n\nexport const AlertOptions = PropTypes.shape({\n  column: PropTypes.string,\n  op: PropTypes.oneOf([\">\", \">=\", \"<\", \"<=\", \"==\", \"!=\"]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  custom_subject: PropTypes.string,\n  custom_body: PropTypes.string,\n});\n\nexport const Alert = PropTypes.shape({\n  id: PropTypes.any,\n  name: PropTypes.string,\n  created_at: PropTypes.string,\n  last_triggered_at: PropTypes.string,\n  updated_at: PropTypes.string,\n  rearm: PropTypes.number,\n  state: PropTypes.oneOf([\"ok\", \"triggered\", \"unknown\"]),\n  user: UserProfile,\n  query: Query,\n  options: PropTypes.shape({\n    column: PropTypes.string,\n    op: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }).isRequired,\n});\n\nfunction checkMoment(isRequired, props, propName, componentName) {\n  const value = props[propName];\n  const isRequiredValid = isRequired && value !== null && value !== undefined && moment.isMoment(value);\n  const isOptionalValid = !isRequired && (value === null || value === undefined || moment.isMoment(value));\n  if (!isRequiredValid && !isOptionalValid) {\n    return new Error(\"Prop `\" + propName + \"` supplied to `\" + componentName + \"` should be a Moment.js instance.\");\n  }\n}\n\nexport const Moment = wrap(false, checkMoment);\nMoment.isRequired = wrap(true, checkMoment);\n","import moment from \"moment\";\nimport { isNil } from \"lodash\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\nimport { clientConfig } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\n\nfunction toMoment(value) {\n  value = !isNil(value) ? moment(value) : null;\n  return value && value.isValid() ? value : null;\n}\n\nexport default function TimeAgo({ date, placeholder, autoUpdate, variation }) {\n  const startDate = toMoment(date);\n  const [value, setValue] = useState(null);\n  const title = useMemo(() => (startDate ? startDate.format(clientConfig.dateTimeFormat) : null), [startDate]);\n\n  useEffect(() => {\n    function update() {\n      setValue(startDate ? startDate.fromNow() : placeholder);\n    }\n    update();\n\n    if (autoUpdate) {\n      const timer = setInterval(update, 30 * 1000);\n      return () => clearInterval(timer);\n    }\n  }, [autoUpdate, startDate, placeholder]);\n\n  if (variation === \"timeAgoInTooltip\") {\n    return (\n      <Tooltip title={value}>\n        <span data-test=\"TimeAgo\">{title}</span>\n      </Tooltip>\n    );\n  }\n  return (\n    <Tooltip title={title}>\n      <span data-test=\"TimeAgo\">{value}</span>\n    </Tooltip>\n  );\n}\n\nTimeAgo.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n  placeholder: PropTypes.string,\n  autoUpdate: PropTypes.bool,\n  variation: PropTypes.oneOf([\"timeAgoInTooltip\"]),\n};\n\nTimeAgo.defaultProps = {\n  date: null,\n  placeholder: \"\",\n  autoUpdate: true,\n};\n","import moment from \"moment\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport const IntervalEnum = {\n  NEVER: \"Never\",\n  SECONDS: \"second\",\n  MINUTES: \"minute\",\n  HOURS: \"hour\",\n  DAYS: \"day\",\n  WEEKS: \"week\",\n  MILLISECONDS: \"millisecond\",\n};\n\nexport const AbbreviatedTimeUnits = {\n  SECONDS: \"s\",\n  MINUTES: \"m\",\n  HOURS: \"h\",\n  DAYS: \"d\",\n  WEEKS: \"w\",\n  MILLISECONDS: \"ms\",\n};\n\nfunction formatDateTimeValue(value, format) {\n  if (!value) {\n    return \"\";\n  }\n\n  const parsed = moment(value);\n  if (!parsed.isValid()) {\n    return \"-\";\n  }\n\n  return parsed.format(format);\n}\n\nexport function formatDateTime(value) {\n  return formatDateTimeValue(value, clientConfig.dateTimeFormat);\n}\n\nexport function formatDateTimePrecise(value, withMilliseconds = false) {\n  return formatDateTimeValue(value, clientConfig.dateFormat + (withMilliseconds ? \" HH:mm:ss.SSS\" : \" HH:mm:ss\"));\n}\n\nexport function formatDate(value) {\n  return formatDateTimeValue(value, clientConfig.dateFormat);\n}\n\nexport function localizeTime(time) {\n  const [hrs, mins] = time.split(\":\");\n  return moment\n    .utc()\n    .hour(hrs)\n    .minute(mins)\n    .local()\n    .format(\"HH:mm\");\n}\n\nexport function secondsToInterval(count) {\n  if (!count) {\n    return { interval: IntervalEnum.NEVER };\n  }\n\n  let interval = IntervalEnum.SECONDS;\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.MINUTES;\n  }\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.HOURS;\n  }\n  if (count >= 24 && interval === IntervalEnum.HOURS) {\n    count /= 24;\n    interval = IntervalEnum.DAYS;\n  }\n  if (count >= 7 && !(count % 7) && interval === IntervalEnum.DAYS) {\n    count /= 7;\n    interval = IntervalEnum.WEEKS;\n  }\n  return { count, interval };\n}\n\nexport function pluralize(text, count) {\n  const should = count !== 1;\n  return text + (should ? \"s\" : \"\");\n}\n\nexport function durationHumanize(durationInSeconds, options = {}) {\n  if (!durationInSeconds) {\n    return \"-\";\n  }\n  let ret = \"\";\n  const { interval, count } = secondsToInterval(durationInSeconds);\n  const rounded = Math.round(count);\n  if (rounded !== 1 || !options.omitSingleValueNumber) {\n    ret = `${rounded} `;\n  }\n  ret += pluralize(interval, rounded);\n  return ret;\n}\n\nexport function toHuman(text) {\n  return text.replace(/_/g, \" \").replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nexport function remove(items, item) {\n  if (items === undefined) {\n    return items;\n  }\n\n  let notEquals;\n\n  if (item instanceof Array) {\n    notEquals = other => item.indexOf(other) === -1;\n  } else {\n    notEquals = other => item !== other;\n  }\n\n  const filtered = [];\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (notEquals(items[i])) {\n      filtered.push(items[i]);\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Formats number to string\n * @param value {number}\n * @param [fractionDigits] {number}\n * @return {string}\n */\nexport function formatNumber(value, fractionDigits = 3) {\n  return Math.round(value) !== value ? value.toFixed(fractionDigits) : value.toString();\n}\n\n/**\n * Formats any number using predefined units\n * @param value {string|number}\n * @param divisor {number}\n * @param [units] {Array<string>}\n * @param [fractionDigits] {number}\n * @return {{unit: string, value: string, divisor: number}}\n */\nexport function prettyNumberWithUnit(value, divisor, units = [], fractionDigits) {\n  if (isNaN(parseFloat(value)) || !isFinite(value)) {\n    return {\n      value: \"\",\n      unit: \"\",\n      divisor: 1,\n    };\n  }\n\n  let unit = 0;\n  let greatestDivisor = 1;\n\n  while (value >= divisor && unit < units.length - 1) {\n    value /= divisor;\n    greatestDivisor *= divisor;\n    unit += 1;\n  }\n\n  return {\n    value: formatNumber(value, fractionDigits),\n    unit: units[unit],\n    divisor: greatestDivisor,\n  };\n}\n\nexport function prettySizeWithUnit(bytes, fractionDigits) {\n  return prettyNumberWithUnit(bytes, 1024, [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"], fractionDigits);\n}\n\nexport function prettySize(bytes) {\n  const { value, unit } = prettySizeWithUnit(bytes);\n  if (!value) {\n    return \"?\";\n  }\n  return value + \" \" + unit;\n}\n\nexport function join(arr) {\n  if (arr === undefined || arr === null) {\n    return \"\";\n  }\n\n  return arr.join(\" / \");\n}\n\nexport function formatColumnValue(value, columnType = null) {\n  if (moment.isMoment(value)) {\n    if (columnType === \"date\") {\n      return formatDate(value);\n    }\n    return formatDateTime(value);\n  }\n\n  if (typeof value === \"boolean\") {\n    return value.toString();\n  }\n\n  return value;\n}\n","import { isFunction, map, filter, extend, omit, identity, range, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Table from \"antd/lib/table\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { durationHumanize, formatDate, formatDateTime } from \"@/lib/utils\";\n\n// `this` refers to previous function in the chain (`Columns.***`).\n// Adds `sorter: true` field to column definition\nfunction sortable(...args) {\n  return extend(this(...args), { sorter: true });\n}\n\nexport const Columns = {\n  favorites(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        render: (text, item) => <FavoritesControl item={item} />,\n      },\n      overrides\n    );\n  },\n  avatar(overrides, formatTitle) {\n    formatTitle = isFunction(formatTitle) ? formatTitle : identity;\n    return extend(\n      {\n        width: \"1%\",\n        render: (user, item) => (\n          <img\n            src={item.user.profile_image_url}\n            className=\"profile__image_thumb\"\n            alt={formatTitle(user.name, item)}\n            title={formatTitle(user.name, item)}\n          />\n        ),\n      },\n      overrides\n    );\n  },\n  date(overrides) {\n    return extend(\n      {\n        render: text => formatDate(text),\n      },\n      overrides\n    );\n  },\n  dateTime(overrides) {\n    return extend(\n      {\n        render: text => formatDateTime(text),\n      },\n      overrides\n    );\n  },\n  duration(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n        render: text => durationHumanize(text),\n      },\n      overrides\n    );\n  },\n  timeAgo(overrides, timeAgoCustomProps = undefined) {\n    return extend(\n      {\n        render: value => <TimeAgo date={value} {...timeAgoCustomProps} />,\n      },\n      overrides\n    );\n  },\n  custom(render, overrides) {\n    return extend(\n      {\n        render,\n      },\n      overrides\n    );\n  },\n};\n\nColumns.date.sortable = sortable;\nColumns.dateTime.sortable = sortable;\nColumns.duration.sortable = sortable;\nColumns.timeAgo.sortable = sortable;\nColumns.custom.sortable = sortable;\n\nexport default class ItemsTable extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    // eslint-disable-next-line react/forbid-prop-types\n    items: PropTypes.arrayOf(PropTypes.object),\n    columns: PropTypes.arrayOf(\n      PropTypes.shape({\n        field: PropTypes.string, // data field\n        orderByField: PropTypes.string, // field to order by (defaults to `field`)\n        render: PropTypes.func, // (prop, item) => text | node; `prop` is `item[field]`\n        isAvailable: PropTypes.func, // return `true` to show column and `false` to hide; if omitted: show column\n      })\n    ),\n    showHeader: PropTypes.bool,\n    onRowClick: PropTypes.func, // (event, item) => void\n\n    orderByField: PropTypes.string,\n    orderByReverse: PropTypes.bool,\n    toggleSorting: PropTypes.func,\n    \"data-test\": PropTypes.string,\n    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  };\n\n  static defaultProps = {\n    loading: false,\n    items: [],\n    columns: [],\n    showHeader: true,\n    onRowClick: null,\n\n    orderByField: null,\n    orderByReverse: false,\n    toggleSorting: () => {},\n  };\n\n  prepareColumns() {\n    const { orderByField, orderByReverse, toggleSorting } = this.props;\n    const orderByDirection = orderByReverse ? \"descend\" : \"ascend\";\n\n    return map(\n      map(\n        filter(this.props.columns, column => (isFunction(column.isAvailable) ? column.isAvailable() : true)),\n        column => extend(column, { orderByField: column.orderByField || column.field })\n      ),\n      (column, index) => {\n        // Bind click events only to sortable columns\n        const onHeaderCell = column.sorter ? () => ({ onClick: () => toggleSorting(column.orderByField) }) : null;\n\n        // Wrap render function to pass correct arguments\n        const render = isFunction(column.render) ? (text, row) => column.render(text, row.item) : identity;\n\n        return extend(omit(column, [\"field\", \"orderByField\", \"render\"]), {\n          key: \"column\" + index,\n          dataIndex: [\"item\", column.field],\n          defaultSortOrder: column.orderByField === orderByField ? orderByDirection : null,\n          onHeaderCell,\n          render,\n        });\n      }\n    );\n  }\n\n  getRowKey = record => {\n    const { rowKey } = this.props;\n    if (rowKey) {\n      if (isFunction(rowKey)) {\n        return rowKey(record.item);\n      }\n      return record.item[rowKey];\n    }\n    return record.key;\n  };\n\n  render() {\n    const tableDataProps = {\n      columns: this.prepareColumns(),\n      dataSource: map(this.props.items, (item, index) => ({ key: \"row\" + index, item })),\n    };\n\n    // Bind events only if `onRowClick` specified\n    const onTableRow = isFunction(this.props.onRowClick)\n      ? row => ({\n          onClick: event => {\n            this.props.onRowClick(event, row.item);\n          },\n        })\n      : null;\n\n    const { showHeader } = this.props;\n    if (this.props.loading) {\n      if (isEmpty(tableDataProps.dataSource)) {\n        tableDataProps.columns = tableDataProps.columns.map(column => ({\n          ...column,\n          sorter: false,\n          render: () => <Skeleton active paragraph={false} />,\n        }));\n        tableDataProps.dataSource = range(10).map(key => ({ key: `${key}` }));\n      } else {\n        tableDataProps.loading = { indicator: null };\n      }\n    }\n\n    return (\n      <Table\n        className={classNames(\"table-data\", { \"ant-table-headerless\": !showHeader })}\n        showHeader={showHeader}\n        rowKey={this.getRowKey}\n        pagination={false}\n        onRow={onTableRow}\n        data-test={this.props[\"data-test\"]}\n        {...tableDataProps}\n      />\n    );\n  }\n}\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Badge from \"antd/lib/badge\";\nimport Card from \"antd/lib/card\";\nimport Spin from \"antd/lib/spin\";\nimport Table from \"antd/lib/table\";\nimport { Columns } from \"@/components/items-list/components/ItemsTable\";\n\n// CounterCard\n\nexport function CounterCard({ title, value, loading }) {\n  return (\n    <Spin spinning={loading}>\n      <Card>\n        {title}\n        <div className=\"f-20\">{value}</div>\n      </Card>\n    </Spin>\n  );\n}\n\nCounterCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.bool.isRequired,\n};\n\nCounterCard.defaultProps = {\n  value: \"\",\n};\n\n// Tables\n\nconst queryJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Query ID\", dataIndex: [\"meta\", \"query_id\"] },\n  { title: \"Org ID\", dataIndex: [\"meta\", \"org_id\"] },\n  { title: \"Data Source ID\", dataIndex: [\"meta\", \"data_source_id\"] },\n  { title: \"User ID\", dataIndex: [\"meta\", \"user_id\"] },\n  Columns.custom(scheduled => scheduled.toString(), { title: \"Scheduled\", dataIndex: [\"meta\", \"scheduled\"] }),\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst otherJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Job Name\", dataIndex: \"name\" },\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst workersColumns = [\n  Columns.custom(\n    value => (\n      <span>\n        <Badge status={{ busy: \"processing\", idle: \"default\", started: \"success\", suspended: \"warning\" }[value]} />{\" \"}\n        {value}\n      </span>\n    ),\n    { title: \"State\", dataIndex: \"state\" }\n  ),\n]\n  .concat(\n    map([\"Hostname\", \"PID\", \"Name\", \"Queues\", \"Current Job\", \"Successful Jobs\", \"Failed Jobs\"], c => ({\n      title: c,\n      dataIndex: c.toLowerCase().replace(/\\s/g, \"_\"),\n    }))\n  )\n  .concat([\n    Columns.dateTime({ title: \"Birth Date\", dataIndex: \"birth_date\" }),\n    Columns.duration({ title: \"Total Working Time\", dataIndex: \"total_working_time\" }),\n  ]);\n\nconst queuesColumns = map([\"Name\", \"Started\", \"Queued\"], c => ({ title: c, dataIndex: c.toLowerCase() }));\n\nconst TablePropTypes = {\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport function WorkersTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={workersColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nWorkersTable.propTypes = TablePropTypes;\n\nexport function QueuesTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queuesColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueuesTable.propTypes = TablePropTypes;\n\nexport function QueryJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queryJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueryJobsTable.propTypes = TablePropTypes;\n\nexport function OtherJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={otherJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nOtherJobsTable.propTypes = TablePropTypes;\n","import { partition, flatMap, values } from \"lodash\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nimport Alert from \"antd/lib/alert\";\nimport Tabs from \"antd/lib/tabs\";\nimport * as Grid from \"antd/lib/grid\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport { CounterCard, WorkersTable, QueuesTable, QueryJobsTable, OtherJobsTable } from \"@/components/admin/RQStatus\";\n\nimport { axios } from \"@/services/axios\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass Jobs extends React.Component {\n  state = {\n    activeTab: location.hash,\n    isLoading: true,\n    error: null,\n\n    queueCounters: [],\n    overallCounters: { started: 0, queued: 0 },\n    startedJobs: [],\n    workers: [],\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/rq_status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    // Ignore data after component unmounted\n    clearTimeout(this._refreshTimer);\n    this.processQueues = () => {};\n    this.handleError = () => {};\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/api/admin/queries/rq_status\")\n      .then(data => this.processQueues(data))\n      .catch(error => this.handleError(error));\n\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  processQueues = ({ queues, workers }) => {\n    const queueCounters = values(queues).map(({ started, ...rest }) => ({\n      started: started.length,\n      ...rest,\n    }));\n\n    const overallCounters = queueCounters.reduce(\n      (c, q) => ({\n        started: c.started + q.started,\n        queued: c.queued + q.queued,\n      }),\n      { started: 0, queued: 0 }\n    );\n\n    const startedJobs = flatMap(values(queues), queue =>\n      queue.started.map(job => ({\n        ...job,\n        enqueued_at: moment.utc(job.enqueued_at),\n        started_at: moment.utc(job.started_at),\n      }))\n    );\n\n    this.setState({ isLoading: false, queueCounters, startedJobs, overallCounters, workers });\n  };\n\n  handleError = error => {\n    this.setState({ isLoading: false, error });\n  };\n\n  render() {\n    const { isLoading, error, queueCounters, startedJobs, overallCounters, workers, activeTab } = this.state;\n    const [startedQueryJobs, otherStartedJobs] = partition(startedJobs, [\n      \"name\",\n      \"redash.tasks.queries.execution.execute_query\",\n    ]);\n\n    const changeTab = newTab => {\n      location.setHash(newTab);\n      this.setState({ activeTab: newTab });\n    };\n\n    return (\n      <Layout activeTab=\"jobs\">\n        <div className=\"p-15\">\n          {error && <Alert type=\"error\" message=\"Failed loading status. Please refresh.\" />}\n\n          {!error && (\n            <React.Fragment>\n              <Grid.Row gutter={15} className=\"m-b-15\">\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Started Jobs\" value={overallCounters.started} loading={isLoading} />\n                </Grid.Col>\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Queued Jobs\" value={overallCounters.queued} loading={isLoading} />\n                </Grid.Col>\n              </Grid.Row>\n\n              <Tabs activeKey={activeTab || \"queues\"} onTabClick={changeTab} animated={false}>\n                <Tabs.TabPane key=\"queues\" tab=\"Queues\">\n                  <QueuesTable loading={isLoading} items={queueCounters} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"workers\" tab=\"Workers\">\n                  <WorkersTable loading={isLoading} items={workers} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"queries\" tab=\"Queries\">\n                  <QueryJobsTable loading={isLoading} items={startedQueryJobs} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"other\" tab=\"Other Jobs\">\n                  <OtherJobsTable loading={isLoading} items={otherStartedJobs} />\n                </Tabs.TabPane>\n              </Tabs>\n            </React.Fragment>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.Jobs\",\n  routeWithUserSession({\n    path: \"/admin/queries/jobs\",\n    title: \"RQ Status\",\n    render: pageProps => <Jobs {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"antd/lib/pagination\";\n\nconst MIN_ITEMS_PER_PAGE = 5;\n\nexport default function Paginator({ page, showPageSizeSelect, pageSize, onPageSizeChange, totalCount, onChange }) {\n  if (totalCount <= (showPageSizeSelect ? MIN_ITEMS_PER_PAGE : pageSize)) {\n    return null;\n  }\n  return (\n    <div className=\"paginator-container\">\n      <Pagination\n        showSizeChanger={showPageSizeSelect}\n        pageSizeOptions={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n        onShowSizeChange={(_, size) => onPageSizeChange(size)}\n        defaultCurrent={page}\n        pageSize={pageSize}\n        total={totalCount}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nPaginator.propTypes = {\n  page: PropTypes.number.isRequired,\n  showPageSizeSelect: PropTypes.bool,\n  pageSize: PropTypes.number.isRequired,\n  totalCount: PropTypes.number.isRequired,\n  onPageSizeChange: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nPaginator.defaultProps = {\n  showPageSizeSelect: false,\n  onChange: () => {},\n  onPageSizeChange: () => {},\n};\n","import { map, trim, uniq, compact } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nfunction EditTagsDialog({ dialog, tags, getAvailableTags }) {\n  const [availableTags, setAvailableTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [values, setValues] = useState(() => uniq(map(tags, trim))); // lazy evaluate\n  const [selectRef, setSelectRef] = useState(null);\n\n  // Select is initially disabled, so autoFocus prop cannot make it focused.\n  // Solution is to pass focus to the select when available tags are loaded and\n  // select becomes enabled.\n  useEffect(() => {\n    if (selectRef && !isLoading) {\n      selectRef.focus();\n    }\n  }, [selectRef, isLoading]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    getAvailableTags().then(availableTags => {\n      if (!isCancelled) {\n        setAvailableTags(uniq(compact(map(availableTags, trim))));\n        setIsLoading(false);\n      }\n    });\n    return () => {\n      isCancelled = true;\n    };\n  }, [getAvailableTags]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      onOk={() => dialog.close(values)}\n      title=\"Add/Edit Tags\"\n      className=\"shortModal\"\n      wrapProps={{ \"data-test\": \"EditTagsDialog\" }}>\n      <Select\n        ref={setSelectRef}\n        mode=\"tags\"\n        className=\"w-100\"\n        placeholder=\"Add some tags...\"\n        defaultValue={values}\n        onChange={v => setValues(compact(map(v, trim)))}\n        disabled={isLoading}\n        loading={isLoading}>\n        {map(availableTags, tag => (\n          <Select.Option key={tag}>{tag}</Select.Option>\n        ))}\n      </Select>\n    </Modal>\n  );\n}\n\nEditTagsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  getAvailableTags: PropTypes.func.isRequired,\n};\n\nEditTagsDialog.defaultProps = {\n  tags: [],\n};\n\nexport default wrapDialog(EditTagsDialog);\n","import { map, trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport EditTagsDialog from \"./EditTagsDialog\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport class TagsControl extends React.Component {\n  static propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string),\n    canEdit: PropTypes.bool,\n    getAvailableTags: PropTypes.func,\n    onEdit: PropTypes.func,\n    className: PropTypes.string,\n    tagsExtra: PropTypes.node,\n    tagSeparator: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    tags: [],\n    canEdit: false,\n    getAvailableTags: () => Promise.resolve([]),\n    onEdit: () => {},\n    className: \"\",\n    tagsExtra: null,\n    tagSeparator: null,\n    children: null,\n  };\n\n  editTags = (tags, getAvailableTags) => {\n    EditTagsDialog.showModal({ tags, getAvailableTags }).onClose(this.props.onEdit);\n  };\n\n  renderEditButton() {\n    const tags = map(this.props.tags, trim);\n    return (\n      <PlainButton\n        className=\"label label-tag hidden-xs\"\n        onClick={() => this.editTags(tags, this.props.getAvailableTags)}\n        data-test=\"EditTagsButton\">\n        {tags.length === 0 && (\n          <React.Fragment>\n            <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n            Add tag\n          </React.Fragment>\n        )}\n        {tags.length > 0 && (\n          <>\n            <i className=\"zmdi zmdi-edit\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Edit</span>\n          </>\n        )}\n      </PlainButton>\n    );\n  }\n\n  render() {\n    const { tags, tagSeparator } = this.props;\n    return (\n      <div className={\"tags-control \" + this.props.className} data-test=\"TagsControl\">\n        {this.props.children}\n        {map(tags, (tag, i) => (\n          <React.Fragment key={tag}>\n            {tagSeparator && i > 0 && <span className=\"tag-separator\">{tagSeparator}</span>}\n            <span className=\"label label-tag\" key={tag} title={tag} data-test=\"TagLabel\">\n              {tag}\n            </span>\n          </React.Fragment>\n        ))}\n        {this.props.canEdit && this.renderEditButton()}\n        {this.props.tagsExtra}\n      </div>\n    );\n  }\n}\n\nfunction modelTagsControl({ archivedTooltip }) {\n  // See comment for `propTypes`/`defaultProps`\n  // eslint-disable-next-line react/prop-types\n  function ModelTagsControl({ isDraft, isArchived, ...props }) {\n    return (\n      <TagsControl {...props}>\n        {!isArchived && isDraft && <span className=\"label label-tag-unpublished\">Unpublished</span>}\n        {isArchived && (\n          <Tooltip placement=\"right\" title={archivedTooltip}>\n            <span className=\"label label-tag-archived\">Archived</span>\n          </Tooltip>\n        )}\n      </TagsControl>\n    );\n  }\n\n  ModelTagsControl.propTypes = {\n    isDraft: PropTypes.bool,\n    isArchived: PropTypes.bool,\n  };\n\n  ModelTagsControl.defaultProps = {\n    isDraft: false,\n    isArchived: false,\n  };\n\n  return ModelTagsControl;\n}\n\nexport const QueryTagsControl = modelTagsControl({\n  archivedTooltip: \"This query is archived and can't be used in dashboards, or appear in search results.\",\n});\n\nexport const DashboardTagsControl = modelTagsControl({\n  archivedTooltip: \"This dashboard is archived and won't be listed in dashboards nor search results.\",\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { localizeTime, durationHumanize } from \"@/lib/utils\";\nimport { RefreshScheduleType, RefreshScheduleDefault } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nexport default class SchedulePhrase extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    isNew: PropTypes.bool.isRequired,\n    isLink: PropTypes.bool,\n    onClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n    isLink: false,\n    onClick: () => {},\n  };\n\n  get content() {\n    const { interval: seconds } = this.props.schedule || SchedulePhrase.defaultProps.schedule;\n    if (!seconds) {\n      return [\"Never\"];\n    }\n    const humanized = durationHumanize(seconds, {\n      omitSingleValueNumber: true,\n    });\n    const short = `Every ${humanized}`;\n    let full = `Refreshes every ${humanized}`;\n\n    const { time, day_of_week: dayOfWeek } = this.props.schedule;\n    if (time) {\n      full += ` at ${localizeTime(time)}`;\n    }\n    if (dayOfWeek) {\n      full += ` on ${dayOfWeek}`;\n    }\n\n    return [short, full];\n  }\n\n  render() {\n    if (this.props.isNew) {\n      return \"Never\";\n    }\n\n    const [short, full] = this.content;\n    const content = full ? <Tooltip title={full}>{short}</Tooltip> : short;\n\n    return this.props.isLink ? (\n      <PlainButton type=\"link\" className=\"schedule-phrase\" onClick={this.props.onClick} data-test=\"EditSchedule\">\n        {content}\n      </PlainButton>\n    ) : (\n      content\n    );\n  }\n}\n","import { omit, debounce } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { clientConfig } from \"@/services/auth\";\nimport { AxiosError } from \"axios\";\n\nexport interface PaginationOptions {\n  page?: number;\n  itemsPerPage?: number;\n}\n\nexport interface Controller<I, P = any> {\n  params: P; // TODO: Find out what params is (except merging with props)\n\n  isLoaded: boolean;\n  isEmpty: boolean;\n\n  // search\n  searchTerm?: string;\n  updateSearch: (searchTerm: string) => void;\n\n  // tags\n  selectedTags: string[];\n  updateSelectedTags: (selectedTags: string[]) => void;\n\n  // sorting\n  orderByField?: string;\n  orderByReverse: boolean;\n  toggleSorting: (orderByField: string) => void;\n\n  // pagination\n  page: number;\n  itemsPerPage: number;\n  totalItemsCount: number;\n  pageSizeOptions: number[];\n  pageItems: I[];\n  updatePagination: (options: PaginationOptions) => void; // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: (error: any) => void; // TODO: Find out if error is string or object or Exception.\n}\n\nexport const ControllerType = PropTypes.shape({\n  // values of props declared by wrapped component and some additional props from items list\n  params: PropTypes.object.isRequired,\n\n  isLoaded: PropTypes.bool.isRequired,\n  isEmpty: PropTypes.bool.isRequired,\n\n  // search\n  searchTerm: PropTypes.string,\n  updateSearch: PropTypes.func.isRequired, // (searchTerm: string) => void\n\n  // tags\n  selectedTags: PropTypes.array.isRequired,\n  updateSelectedTags: PropTypes.func.isRequired, // (selectedTags: array of tags) => void\n\n  // sorting\n  orderByField: PropTypes.string,\n  orderByReverse: PropTypes.bool.isRequired,\n  toggleSorting: PropTypes.func.isRequired, // (orderByField: string) => void\n\n  // pagination\n  page: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  totalItemsCount: PropTypes.number.isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  pageItems: PropTypes.array.isRequired,\n  updatePagination: PropTypes.func.isRequired, // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: PropTypes.func.isRequired, // (error) => void\n});\n\nexport type GenericItemSourceError = AxiosError | Error;\n\nexport interface ItemsListWrapperProps {\n  onError?: (error: AxiosError | Error) => void;\n  children: React.ReactNode;\n}\n\ninterface ItemsListWrapperState<I, P = any> extends Controller<I, P> {\n  totalCount?: number;\n  update: () => void;\n}\n\ntype ItemsSource = any; // TODO: Type ItemsSource\ntype StateStorage = any; // TODO: Type StateStore\n\nexport interface ItemsListWrappedComponentProps<I, P = any> {\n  controller: Controller<I, P>;\n}\n\nexport function wrap<I, P = any>(\n  WrappedComponent: React.ComponentType<ItemsListWrappedComponentProps<I>>,\n  createItemsSource: () => ItemsSource,\n  createStateStorage: () => StateStorage\n) {\n  class ItemsListWrapper extends React.Component<ItemsListWrapperProps, ItemsListWrapperState<I, P>> {\n    private _itemsSource: ItemsSource;\n\n    static propTypes = {\n      onError: PropTypes.func,\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      onError: (error: GenericItemSourceError) => {\n        // Allow calling chain to roll up, and then throw the error in global context\n        setTimeout(() => {\n          throw error;\n        });\n      },\n      children: null,\n    };\n\n    constructor(props: ItemsListWrapperProps) {\n      super(props);\n\n      const stateStorage = createStateStorage();\n      const itemsSource = createItemsSource();\n      this._itemsSource = itemsSource;\n\n      itemsSource.setState({ ...stateStorage.getState(), validate: false });\n      itemsSource.getCallbackContext = () => this.state;\n\n      itemsSource.onBeforeUpdate = () => {\n        const state = itemsSource.getState();\n        stateStorage.setState(state);\n        this.setState(this.getState({ ...state, isLoaded: false }));\n      };\n\n      itemsSource.onAfterUpdate = () => {\n        const state = itemsSource.getState();\n        this.setState(this.getState({ ...state, isLoaded: true }));\n      };\n\n      itemsSource.onError = (error: GenericItemSourceError) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.props.onError!(error);\n\n      const initialState = this.getState({ ...itemsSource.getState(), isLoaded: false });\n      const { updatePagination, toggleSorting, updateSearch, updateSelectedTags, update, handleError } = itemsSource;\n      this.state = {\n        ...initialState,\n        toggleSorting, // eslint-disable-line react/no-unused-state\n        updateSearch: debounce(updateSearch, 200), // eslint-disable-line react/no-unused-state\n        updateSelectedTags, // eslint-disable-line react/no-unused-state\n        updatePagination, // eslint-disable-line react/no-unused-state\n        update, // eslint-disable-line react/no-unused-state\n        handleError, // eslint-disable-line react/no-unused-state\n      };\n    }\n\n    componentDidMount() {\n      this.state.update();\n    }\n\n    componentWillUnmount() {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onBeforeUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onAfterUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onError = () => {};\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getState({\n      isLoaded,\n      totalCount,\n      pageItems,\n      params,\n      ...rest\n    }: ItemsListWrapperState<I, P>): ItemsListWrapperState<I, P> {\n      return {\n        ...rest,\n\n        params: {\n          ...params, // custom params from items source\n          ...omit(this.props, [\"onError\", \"children\"]), // add all props except of own ones\n        },\n\n        isLoaded,\n        isEmpty: !isLoaded || totalCount === 0,\n        totalItemsCount: totalCount || 0,\n        pageSizeOptions: (clientConfig as any).pageSizeOptions, // TODO: Type auth.js\n        pageItems: pageItems || [],\n      };\n    }\n\n    render() {\n      // don't pass own props to wrapped component\n      const { children, onError, ...props } = this.props;\n      return (\n        <WrappedComponent {...props} controller={this.state}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n  }\n\n  // Copy static methods from `WrappedComponent`\n  hoistNonReactStatics(ItemsListWrapper, WrappedComponent);\n\n  return ItemsListWrapper;\n}\n","import { isUndefined } from \"lodash\";\n\nexport default class Paginator {\n  page = 1;\n\n  itemsPerPage = 20;\n\n  totalCount = 0;\n\n  get totalPages() {\n    return Math.ceil(this.totalCount / this.itemsPerPage);\n  }\n\n  setPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 1;\n    if (validate) {\n      this.page = value >= 1 && value <= this.totalPages ? value : 1;\n    } else {\n      this.page = value >= 1 ? value : 1;\n    }\n  }\n\n  setItemsPerPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 20;\n    this.itemsPerPage = value >= 1 ? value : 1;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  setTotalCount(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 0;\n    this.totalCount = value;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  constructor({ page, itemsPerPage, totalCount, validate = true } = {}) {\n    this.setItemsPerPage(itemsPerPage, validate);\n    this.setTotalCount(totalCount, validate);\n    this.setPage(page, validate);\n  }\n\n  getItemsForPage(items) {\n    const first = this.itemsPerPage * (this.page - 1);\n    const last = first + this.itemsPerPage;\n\n    return items.slice(first, last);\n  }\n}\n","import { isString, sortBy } from \"lodash\";\n\nconst ORDER_BY_REVERSE = \"-\";\n\nexport function compile(field, reverse) {\n  if (!field) {\n    return null;\n  }\n  return reverse ? ORDER_BY_REVERSE + field : field;\n}\n\nexport function parse(compiled) {\n  compiled = isString(compiled) ? compiled : \"\";\n  const reverse = compiled.startsWith(ORDER_BY_REVERSE);\n  if (reverse) {\n    compiled = compiled.substring(1);\n  }\n  const field = compiled !== \"\" ? compiled : null;\n  return { field, reverse };\n}\n\nexport default class Sorter {\n  field = null;\n\n  reverse = false;\n\n  sortByIteratees = null;\n\n  get compiled() {\n    return compile(this.field, this.reverse);\n  }\n\n  set compiled(value) {\n    const { field, reverse } = parse(value);\n    this.field = field;\n    this.reverse = reverse;\n  }\n\n  setField(value) {\n    this.field = isString(value) && value !== \"\" ? value : null;\n  }\n\n  setReverse(value) {\n    this.reverse = !!value; // cast to boolean\n  }\n\n  constructor({ orderByField, orderByReverse } = {}, sortByIteratees = undefined) {\n    this.setField(orderByField);\n    this.setReverse(orderByReverse);\n    this.sortByIteratees = sortByIteratees;\n  }\n\n  toggleField(field) {\n    if (!isString(field) || field === \"\") {\n      return;\n    }\n    if (field === this.field) {\n      this.reverse = !this.reverse;\n    } else {\n      this.field = field;\n      this.reverse = false;\n    }\n  }\n\n  sort(items) {\n    if (this.field) {\n      const customIteratee = this.sortByIteratees && this.sortByIteratees[this.field];\n      items = sortBy(items, customIteratee ? [customIteratee] : this.field);\n      if (this.reverse) {\n        items.reverse();\n      }\n      return items;\n    }\n  }\n}\n","import { identity, isFunction, isNil, isString } from \"lodash\";\n\nclass ItemsFetcher {\n  _getRequest(state, context) {\n    return this._originalGetRequest({}, context);\n  }\n\n  _processResults({ results, count }, state, context) {\n    return {\n      results: this._originalProcessResults(results, context),\n      count,\n    };\n  }\n\n  constructor({ getRequest, doRequest, processResults }) {\n    this._originalGetRequest = isFunction(getRequest) ? getRequest : identity;\n    this._originalDoRequest = doRequest;\n    this._originalProcessResults = isFunction(processResults) ? processResults : identity;\n  }\n\n  fetch(changes, state, context) {\n    const request = this._getRequest(state, context);\n    return this._originalDoRequest(request, context).then(data => this._processResults(data, state, context));\n  }\n}\n\n// For endpoints that return just an array with items; sorting and pagination\n// is performed on client\nexport class PlainListFetcher extends ItemsFetcher {\n  _allItems = [];\n\n  _getRequest({ searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n\n  _processResults(data, { paginator, sorter }, context) {\n    this._allItems = this._originalProcessResults(data, context);\n    this._allItems = sorter.sort(this._allItems);\n    return {\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    };\n  }\n\n  fetch(changes, state, context) {\n    // For plain lists we need to reload items from server only if tags or search changes.\n    if (isNil(changes) || changes.tags || changes.sorting) {\n      return super.fetch(changes, state, context);\n    }\n    // Sorting and pagination could be updated using previously fetched items.\n    const { paginator, sorter } = state;\n    if (changes.sorting) {\n      this._allItems = sorter.sort(this._allItems);\n    }\n    return Promise.resolve({\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    });\n  }\n}\n\n// For endpoints that support server-side pagination (return object with\n// items for current page and total items count)\nexport class PaginatedListFetcher extends ItemsFetcher {\n  _getRequest({ paginator, sorter, searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        page: paginator.page,\n        page_size: paginator.itemsPerPage,\n        order: sorter.compiled,\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n}\n","import { isFunction, identity, map, extend } from \"lodash\";\nimport Paginator from \"./Paginator\";\nimport Sorter from \"./Sorter\";\nimport { PlainListFetcher, PaginatedListFetcher } from \"./ItemsFetcher\";\n\nexport class ItemsSource {\n  onBeforeUpdate = null;\n\n  onAfterUpdate = null;\n\n  onError = null;\n\n  sortByIteratees = undefined;\n\n  getCallbackContext = () => null;\n\n  _beforeUpdate() {\n    if (isFunction(this.onBeforeUpdate)) {\n      return Promise.resolve(this.onBeforeUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  _afterUpdate() {\n    if (isFunction(this.onAfterUpdate)) {\n      return Promise.resolve(this.onAfterUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  // changes: object with flags or null (full refresh requested)\n  _changed(changes) {\n    const state = {\n      paginator: this._paginator,\n      sorter: this._sorter,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n    };\n    const customParams = {};\n    const context = {\n      ...this.getCallbackContext(),\n      setCustomParams: params => {\n        extend(customParams, params);\n      },\n    };\n    return this._beforeUpdate().then(() => {\n      const fetchToken = Math.random()\n        .toString(36)\n        .substr(2);\n      this._currentFetchToken = fetchToken;\n      return this._fetcher\n        .fetch(changes, state, context)\n        .then(({ results, count, allResults }) => {\n          if (this._currentFetchToken === fetchToken) {\n            this._pageItems = results;\n            this._allItems = allResults || null;\n            this._paginator.setTotalCount(count);\n            this._params = { ...this._params, ...customParams };\n            return this._afterUpdate();\n          }\n        })\n        .catch(error => this.handleError(error));\n    });\n  }\n\n  constructor({\n    getRequest,\n    doRequest,\n    processResults,\n    isPlainList = false,\n    sortByIteratees = undefined,\n    ...defaultState\n  }) {\n    if (!isFunction(getRequest)) {\n      getRequest = identity;\n    }\n\n    this._fetcher = isPlainList\n      ? new PlainListFetcher({ getRequest, doRequest, processResults })\n      : new PaginatedListFetcher({ getRequest, doRequest, processResults });\n\n    this.sortByIteratees = sortByIteratees;\n\n    this.setState(defaultState);\n    this._pageItems = [];\n\n    this._params = {};\n  }\n\n  getState() {\n    return {\n      page: this._paginator.page,\n      itemsPerPage: this._paginator.itemsPerPage,\n      orderByField: this._sorter.field,\n      orderByReverse: this._sorter.reverse,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n      totalCount: this._paginator.totalCount,\n      pageItems: this._pageItems,\n      allItems: this._allItems,\n      params: this._params,\n    };\n  }\n\n  setState(state) {\n    this._paginator = new Paginator(state);\n    this._sorter = new Sorter(state, this.sortByIteratees);\n\n    this._searchTerm = state.searchTerm || \"\";\n    this._selectedTags = state.selectedTags || [];\n\n    this._savedOrderByField = this._sorter.field;\n  }\n\n  updatePagination = ({ page, itemsPerPage }) => {\n    const { page: prevPage, itemsPerPage: prevItemsPerPage } = this._paginator;\n    this._paginator.setItemsPerPage(itemsPerPage);\n    this._paginator.setPage(page);\n    this._changed({\n      pagination: {\n        page: prevPage !== this._paginator.page, // page changed flag\n        itemsPerPage: prevItemsPerPage !== this._paginator.itemsPerPage, // items per page changed flags\n      },\n    });\n  };\n\n  toggleSorting = orderByField => {\n    this._sorter.toggleField(orderByField);\n    this._savedOrderByField = this._sorter.field;\n    this._changed({ sorting: true });\n  };\n\n  updateSearch = searchTerm => {\n    // here we update state directly, but later `fetchData` will update it properly\n    this._searchTerm = searchTerm;\n    // in search mode ignore the ordering and use the ranking order\n    // provided by the server-side FTS backend instead, unless it was\n    // requested by the user by actively ordering in search mode\n    if (searchTerm === \"\") {\n      this._sorter.setField(this._savedOrderByField); // restore ordering\n    } else {\n      this._sorter.setField(null);\n    }\n    this._paginator.setPage(1);\n    this._changed({ search: true, pagination: { page: true } });\n  };\n\n  updateSelectedTags = selectedTags => {\n    this._selectedTags = selectedTags;\n    this._paginator.setPage(1);\n    this._changed({ tags: true, pagination: { page: true } });\n  };\n\n  update = () => this._changed();\n\n  handleError = error => {\n    if (isFunction(this.onError)) {\n      this.onError(error);\n    }\n  };\n}\n\nexport class ResourceItemsSource extends ItemsSource {\n  constructor({ getResource, getItemProcessor, ...rest }) {\n    getItemProcessor = isFunction(getItemProcessor) ? getItemProcessor : () => null;\n    super({\n      ...rest,\n      doRequest: (request, context) => {\n        const resource = getResource(context)(request);\n        return resource;\n      },\n      processResults: (results, context) => {\n        let processItem = getItemProcessor(context);\n        processItem = isFunction(processItem) ? processItem : identity;\n        return map(results, item => processItem(item, context));\n      },\n    });\n  }\n}\n","import { defaults } from \"lodash\";\nimport { clientConfig } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport { parse as parseOrderBy, compile as compileOrderBy } from \"./Sorter\";\n\nexport class StateStorage {\n  constructor(state = {}) {\n    this._state = { ...state };\n  }\n\n  getState() {\n    return defaults(this._state, {\n      page: 1,\n      itemsPerPage: clientConfig.pageSize,\n      orderByField: \"created_at\",\n      orderByReverse: false,\n      searchTerm: \"\",\n      tags: [],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState() {}\n}\n\nexport class UrlStateStorage extends StateStorage {\n  getState() {\n    const defaultState = super.getState();\n    const params = location.search;\n\n    const searchTerm = params.q || \"\";\n\n    // in search mode order by should be explicitly specified in url, otherwise use default\n    const defaultOrderBy =\n      searchTerm !== \"\" ? \"\" : compileOrderBy(defaultState.orderByField, defaultState.orderByReverse);\n\n    const { field: orderByField, reverse: orderByReverse } = parseOrderBy(params.order || defaultOrderBy);\n\n    return {\n      page: parseInt(params.page, 10) || defaultState.page,\n      itemsPerPage: parseInt(params.page_size, 10) || defaultState.itemsPerPage,\n      orderByField,\n      orderByReverse,\n      searchTerm,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState({ page, itemsPerPage, orderByField, orderByReverse, searchTerm }) {\n    location.setSearch(\n      {\n        page,\n        page_size: itemsPerPage,\n        order: compileOrderBy(orderByField, orderByReverse),\n        q: searchTerm !== \"\" ? searchTerm : null,\n      },\n      true\n    );\n  }\n}\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"loading\" message for list pages\nexport default function LoadingState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" {...props} />\n    </div>\n  );\n}\n","import { map, uniqueId } from \"lodash\";\nimport React from \"react\";\n\nimport Switch from \"antd/lib/switch\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Layout from \"@/components/admin/Layout\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport { axios } from \"@/services/axios\";\nimport { Query } from \"@/services/query\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass OutdatedQueries extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    {\n      title: \"ID\",\n      field: \"id\",\n      width: \"1%\",\n      align: \"right\",\n      sorter: true,\n    },\n    Columns.custom.sortable(\n      (text, item) => (\n        <React.Fragment>\n          <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n            {item.name}\n          </Link>\n          <QueryTagsControl\n            className=\"d-block\"\n            tags={item.tags}\n            isDraft={item.is_draft}\n            isArchived={item.is_archived}\n          />\n        </React.Fragment>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\" }),\n    Columns.duration.sortable({ title: \"Runtime\", field: \"runtime\" }),\n    Columns.dateTime.sortable({ title: \"Last Executed At\", field: \"retrieved_at\", orderByField: \"executed_at\" }),\n    Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n      title: \"Update Schedule\",\n      field: \"schedule\",\n    }),\n  ];\n\n  state = {\n    autoUpdate: true,\n  };\n\n  _updateTimer = null;\n  autoUpdateSwitchId = uniqueId(\"auto-update-switch\");\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/queries/outdated\");\n    this.update(true);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._updateTimer);\n  }\n\n  update = (isInitialCall = false) => {\n    if (!isInitialCall && this.state.autoUpdate) {\n      this.props.controller.update();\n    }\n    this._updateTimer = setTimeout(this.update, 60 * 1000);\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <Layout activeTab={controller.params.currentPage}>\n        <div className=\"m-15\">\n          <div>\n            <label htmlFor={this.autoUpdateSwitchId} className=\"m-0\">\n              Auto update\n            </label>\n            <Switch\n              id={this.autoUpdateSwitchId}\n              className=\"m-l-10\"\n              checked={this.state.autoUpdate}\n              onChange={autoUpdate => this.setState({ autoUpdate })}\n            />\n          </div>\n          {controller.params.lastUpdatedAt && (\n            <div className=\"m-t-5\">\n              Last updated: <TimeAgo date={controller.params.lastUpdatedAt * 1000} />\n            </div>\n          )}\n        </div>\n        {!controller.isLoaded && <LoadingState />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center p-15\">There are no outdated queries.</div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"bg-white tiled table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </Layout>\n    );\n  }\n}\n\nconst OutdatedQueriesPage = itemsList(\n  OutdatedQueries,\n  () =>\n    new ItemsSource({\n      doRequest(request, context) {\n        return (\n          axios\n            .get(\"/api/admin/queries/outdated\")\n            // eslint-disable-next-line camelcase\n            .then(({ queries, updated_at }) => {\n              context.setCustomParams({ lastUpdatedAt: parseFloat(updated_at) });\n              return queries;\n            })\n        );\n      },\n      processResults(items) {\n        return map(items, item => new Query(item));\n      },\n      isPlainList: true,\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Admin.OutdatedQueries\",\n  routeWithUserSession({\n    path: \"/admin/queries/outdated\",\n    title: \"Outdated Queries\",\n    render: pageProps => <OutdatedQueriesPage {...pageProps} currentPage=\"outdated_queries\" />,\n  })\n);\n","/* eslint-disable react/prop-types */\n\nimport { toPairs } from \"lodash\";\nimport React from \"react\";\n\nimport List from \"antd/lib/list\";\nimport Card from \"antd/lib/card\";\nimport TimeAgo from \"@/components/TimeAgo\";\n\nimport { toHuman, prettySize } from \"@/lib/utils\";\n\nexport function General({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"General\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, value]) => (\n            <List.Item extra={<span className=\"badge\">{value}</span>}>{toHuman(name)}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function DatabaseMetrics({ info }) {\n  return (\n    <Card title=\"Redash Database\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, size]) => (\n            <List.Item extra={<span className=\"badge\">{prettySize(size)}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Queues({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"Queues\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, queue]) => (\n            <List.Item extra={<span className=\"badge\">{queue.size}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Manager({ info }) {\n  const items = info\n    ? [\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.lastRefreshAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Last Refresh\n        </List.Item>,\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.startedAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Started\n        </List.Item>,\n        <List.Item extra={<span className=\"badge\">{info.outdatedQueriesCount}</span>}>\n          Outdated Queries Count\n        </List.Item>,\n      ]\n    : [];\n\n  return (\n    <Card title=\"Manager\" size=\"small\">\n      {!info && <div className=\"text-muted text-center\">No data</div>}\n      {info && <List size=\"small\" itemLayout=\"vertical\" dataSource={items} renderItem={item => item} />}\n    </Card>\n  );\n}\n","import { omit } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport * as StatusBlock from \"@/components/admin/StatusBlock\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nimport \"./system-status.less\";\n\nclass SystemStatus extends React.Component {\n  static propTypes = {\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    queues: [],\n    manager: null,\n    databaseMetrics: {},\n    status: {},\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._refreshTimer);\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/status.json\")\n      .then(data => {\n        this.setState({\n          queues: data.manager.queues,\n          manager: {\n            startedAt: data.manager.started_at * 1000,\n            lastRefreshAt: data.manager.last_refresh_at * 1000,\n            outdatedQueriesCount: data.manager.outdated_queries_count,\n          },\n          databaseMetrics: data.database_metrics.metrics || [],\n          status: omit(data, [\"workers\", \"manager\", \"database_metrics\"]),\n        });\n      })\n      .catch(error => this.props.onError(error));\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  render() {\n    return (\n      <Layout activeTab=\"system_status\">\n        <div className=\"system-status-page\">\n          <div className=\"system-status-page-blocks\">\n            <div className=\"system-status-page-block\">\n              <StatusBlock.General info={this.state.status} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Manager info={this.state.manager} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Queues info={this.state.queues} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.DatabaseMetrics info={this.state.databaseMetrics} />\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.SystemStatus\",\n  routeWithUserSession({\n    path: \"/admin/status\",\n    title: \"System Status\",\n    render: pageProps => <SystemStatus {...pageProps} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\nimport { merge } from \"lodash\";\n\n// backwards compatibility\nconst normalizeCondition = {\n  \"greater than\": \">\",\n  \"less than\": \"<\",\n  equals: \"=\",\n};\n\nconst transformResponse = data =>\n  merge({}, data, {\n    options: {\n      op: normalizeCondition[data.options.op] || data.options.op,\n    },\n  });\n\nconst transformRequest = data => {\n  const newData = Object.assign({}, data);\n  if (newData.query_id === undefined) {\n    newData.query_id = newData.query.id;\n    newData.destination_id = newData.destinations;\n    delete newData.query;\n    delete newData.destinations;\n  }\n\n  return newData;\n};\n\nconst saveOrCreateUrl = data => (data.id ? `api/alerts/${data.id}` : \"api/alerts\");\n\nconst Alert = {\n  query: () => axios.get(\"api/alerts\"),\n  get: ({ id }) => axios.get(`api/alerts/${id}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), transformRequest(data)),\n  delete: data => axios.delete(`api/alerts/${data.id}`),\n  mute: data => axios.post(`api/alerts/${data.id}/mute`),\n  unmute: data => axios.delete(`api/alerts/${data.id}/mute`),\n};\n\nexport default Alert;\n","import { toUpper } from \"lodash\";\nimport React from \"react\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Alert from \"@/services/alert\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nexport const STATE_CLASS = {\n  unknown: \"label-warning\",\n  ok: \"label-success\",\n  triggered: \"label-danger\",\n};\n\nclass AlertsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, alert) => (\n        <span title={alert.options.muted ? \"Muted\" : \"Active\"}>\n          <i className={`fa fa-bell-${alert.options.muted ? \"slash\" : \"o\"} p-r-0`} aria-hidden=\"true\" />\n          <span className=\"sr-only\">{alert.options.muted ? \"Muted\" : \"Active\"}</span>\n        </span>\n      ),\n      {\n        title: (\n          <>\n            <i className=\"fa fa-bell p-r-0\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Sort by notification status.</span>\n          </>\n        ),\n        field: \"muted\",\n        width: \"1%\",\n      }\n    ),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <Link className=\"table-main-title\" href={\"alerts/\" + alert.id}>\n            {alert.name}\n          </Link>\n        </div>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n      }\n    ),\n    Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <span className={`label ${STATE_CLASS[alert.state]}`}>{toUpper(alert.state)}</span>\n        </div>\n      ),\n      {\n        title: \"State\",\n        field: \"state\",\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.timeAgo.sortable({ title: \"Last Updated At\", field: \"updated_at\", width: \"1%\" }),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  ];\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div className=\"page-alerts-list\">\n        <div className=\"container\">\n          <PageHeader\n            title={controller.params.pageTitle}\n            actions={\n              currentUser.hasPermission(\"list_alerts\") ? (\n                <Link.Button block type=\"primary\" href=\"alerts/new\">\n                  <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                  New Alert\n                </Link.Button>\n              ) : null\n            }\n          />\n          <div>\n            {controller.isLoaded && controller.isEmpty ? (\n              <DynamicComponent name=\"AlertsList.EmptyState\">\n                <EmptyState\n                  icon=\"fa fa-bell-o\"\n                  illustration=\"alert\"\n                  description=\"Get notified on certain events\"\n                  helpMessage={<EmptyStateHelpMessage helpTriggerType=\"ALERTS\" />}\n                  showAlertStep\n                />\n              </DynamicComponent>\n            ) : (\n              <div className=\"table-responsive bg-white tiled\">\n                <ItemsTable\n                  loading={!controller.isLoaded}\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst AlertsListPage = itemsList(\n  AlertsList,\n  () =>\n    new ResourceItemsSource({\n      isPlainList: true,\n      getRequest() {\n        return {};\n      },\n      getResource() {\n        return Alert.query.bind(Alert);\n      },\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true, itemsPerPage: 20 })\n);\n\nroutes.register(\n  \"Alerts.List\",\n  routeWithUserSession({\n    path: \"/alerts\",\n    title: \"Alerts\",\n    render: pageProps => <AlertsListPage {...pageProps} currentPage=\"alerts\" />,\n  })\n);\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Modal from \"antd/lib/modal\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\n\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default function MenuButton({ doDelete, canEdit, mute, unmute, muted }) {\n  const [loading, setLoading] = useState(false);\n\n  const execute = useCallback(action => {\n    setLoading(true);\n    action().finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    Modal.confirm({\n      title: \"Delete Alert\",\n      content: \"Are you sure you want to delete this alert?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => {\n        setLoading(true);\n        doDelete().catch(() => {\n          setLoading(false);\n        });\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [doDelete]);\n\n  return (\n    <Dropdown\n      className={cx(\"m-l-5\", { disabled: !canEdit })}\n      trigger={[canEdit ? \"click\" : undefined]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu>\n          <Menu.Item>\n            {muted ? (\n              <PlainButton onClick={() => execute(unmute)}>Unmute Notifications</PlainButton>\n            ) : (\n              <PlainButton onClick={() => execute(mute)}>Mute Notifications</PlainButton>\n            )}\n          </Menu.Item>\n          <Menu.Item>\n            <PlainButton onClick={confirmDelete}>Delete</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button aria-label=\"More actions\">\n        {loading ? <LoadingOutlinedIcon /> : <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />}\n      </Button>\n    </Dropdown>\n  );\n}\n\nMenuButton.propTypes = {\n  doDelete: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  muted: PropTypes.bool,\n};\n\nMenuButton.defaultProps = {\n  muted: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport { getDefaultName } from \"../Alert\";\n\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport \"./Title.less\";\n\nexport default function Title({ alert, editMode, name, onChange, children }) {\n  const defaultName = getDefaultName(alert);\n  return (\n    <div className=\"alert-header\">\n      <div className=\"alert-title\">\n        <h3>\n          {editMode && alert.query ? (\n            // BUG: Input is not the same width as the container\n            // TODO: consider adding a label (not obvious for sighted users)\n            <Input\n              className=\"f-inherit\"\n              placeholder={defaultName}\n              value={name}\n              aria-label=\"Alert title\"\n              onChange={e => onChange(e.target.value)}\n            />\n          ) : (\n            name || defaultName\n          )}\n        </h3>\n      </div>\n      <div className=\"alert-actions\">{children}</div>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  alert: AlertType.isRequired,\n  name: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  name: null,\n  children: null,\n  onChange: null,\n  editMode: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, includes, toString, isEmpty } from \"lodash\";\n\nimport Input from \"antd/lib/input\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Select from \"antd/lib/select\";\nimport Divider from \"antd/lib/divider\";\n\nimport { AlertOptions as AlertOptionsType } from \"@/components/proptypes\";\n\nimport \"./Criteria.less\";\n\nconst CONDITIONS = {\n  \">\": \"\\u003e\",\n  \">=\": \"\\u2265\",\n  \"<\": \"\\u003c\",\n  \"<=\": \"\\u2264\",\n  \"==\": \"\\u003d\",\n  \"!=\": \"\\u2260\",\n};\n\nconst VALID_STRING_CONDITIONS = [\"==\", \"!=\"];\n\nfunction DisabledInput({ children, minWidth }) {\n  return (\n    <div className=\"criteria-disabled-input\" style={{ minWidth }}>\n      {children}\n    </div>\n  );\n}\n\nDisabledInput.propTypes = {\n  children: PropTypes.node.isRequired,\n  minWidth: PropTypes.number.isRequired,\n};\n\nexport default function Criteria({ columnNames, resultValues, alertOptions, onChange, editMode }) {\n  const columnValue = !isEmpty(resultValues) ? head(resultValues)[alertOptions.column] : null;\n  const invalidMessage = (() => {\n    // bail if condition is valid for strings\n    if (includes(VALID_STRING_CONDITIONS, alertOptions.op)) {\n      return null;\n    }\n\n    if (isNaN(alertOptions.value)) {\n      return \"Value column type doesn't match threshold type.\";\n    }\n\n    if (isNaN(columnValue)) {\n      return \"Value column isn't supported by condition type.\";\n    }\n\n    return null;\n  })();\n\n  const columnHint = (\n    <small className=\"alert-criteria-hint\">\n      Top row value is <code className=\"p-0\">{toString(columnValue) || \"unknown\"}</code>\n    </small>\n  );\n\n  return (\n    <div data-test=\"Criteria\">\n      <div className=\"input-title\">\n        <span className=\"input-label\">Value column</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.column}\n            onChange={column => onChange({ column })}\n            dropdownMatchSelectWidth={false}\n            style={{ minWidth: 100 }}>\n            {columnNames.map(name => (\n              <Select.Option key={name}>{name}</Select.Option>\n            ))}\n          </Select>\n        ) : (\n          <DisabledInput minWidth={70}>{alertOptions.column}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <span className=\"input-label\">Condition</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.op}\n            onChange={op => onChange({ op })}\n            optionLabelProp=\"label\"\n            dropdownMatchSelectWidth={false}\n            style={{ width: 55 }}>\n            <Select.Option value=\">\" label={CONDITIONS[\">\"]}>\n              {CONDITIONS[\">\"]} greater than\n            </Select.Option>\n            <Select.Option value=\">=\" label={CONDITIONS[\">=\"]}>\n              {CONDITIONS[\">=\"]} greater than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"<\" label={CONDITIONS[\"<\"]}>\n              {CONDITIONS[\"<\"]} less than\n            </Select.Option>\n            <Select.Option value=\"<=\" label={CONDITIONS[\"<=\"]}>\n              {CONDITIONS[\"<=\"]} less than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"==\" label={CONDITIONS[\"==\"]}>\n              {CONDITIONS[\"==\"]} equals\n            </Select.Option>\n            <Select.Option value=\"!=\" label={CONDITIONS[\"!=\"]}>\n              {CONDITIONS[\"!=\"]} not equal to\n            </Select.Option>\n          </Select>\n        ) : (\n          <DisabledInput minWidth={50}>{CONDITIONS[alertOptions.op]}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <label className=\"input-label\" htmlFor=\"threshold-criterion\">\n          Threshold\n        </label>\n        {editMode ? (\n          <Input\n            id=\"threshold-criterion\"\n            style={{ width: 90 }}\n            value={alertOptions.value}\n            onChange={e => onChange({ value: e.target.value })}\n          />\n        ) : (\n          <DisabledInput minWidth={50}>{alertOptions.value}</DisabledInput>\n        )}\n      </div>\n      <div className=\"ant-form-item-explain\">\n        {columnHint}\n        <br />\n        {invalidMessage && (\n          <small>\n            <WarningFilledIcon className=\"warning-icon-danger\" /> {invalidMessage}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n}\n\nCriteria.propTypes = {\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n  alertOptions: AlertOptionsType.isRequired,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nCriteria.defaultProps = {\n  onChange: () => {},\n  editMode: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toLower, isNumber } from \"lodash\";\n\nimport InputNumber from \"antd/lib/input-number\";\nimport Select from \"antd/lib/select\";\n\nimport \"./Rearm.less\";\n\nconst DURATIONS = [\n  [\"Second\", 1],\n  [\"Minute\", 60],\n  [\"Hour\", 3600],\n  [\"Day\", 86400],\n  [\"Week\", 604800],\n];\n\nfunction RearmByDuration({ value, onChange, editMode }) {\n  const [durationIdx, setDurationIdx] = useState();\n  const [count, setCount] = useState();\n\n  useEffect(() => {\n    for (let i = DURATIONS.length - 1; i >= 0; i -= 1) {\n      const [, durValue] = DURATIONS[i];\n      if (value % durValue === 0) {\n        setDurationIdx(i);\n        setCount(value / durValue);\n        break;\n      }\n    }\n  }, [value]);\n\n  if (!isNumber(count) || !isNumber(durationIdx)) {\n    return null;\n  }\n\n  const onChangeCount = newCount => {\n    setCount(newCount);\n    onChange(newCount * DURATIONS[durationIdx][1]);\n  };\n\n  const onChangeIdx = newIdx => {\n    setDurationIdx(newIdx);\n    onChange(count * DURATIONS[newIdx][1]);\n  };\n\n  const plural = count !== 1 ? \"s\" : \"\";\n\n  if (editMode) {\n    return (\n      <>\n        <InputNumber value={count} onChange={onChangeCount} min={1} precision={0} />\n        <Select value={durationIdx} onChange={onChangeIdx}>\n          {DURATIONS.map(([name], idx) => (\n            <Select.Option value={idx} key={name}>\n              {name}\n              {plural}\n            </Select.Option>\n          ))}\n        </Select>\n      </>\n    );\n  }\n\n  const [name] = DURATIONS[durationIdx];\n  return count + \" \" + toLower(name) + plural;\n}\n\nRearmByDuration.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n};\n\nRearmByDuration.defaultProps = {\n  onChange: () => {},\n};\n\nfunction RearmEditor({ value, onChange }) {\n  const [selected, setSelected] = useState(value < 2 ? value : 2);\n\n  const _onChange = newSelected => {\n    setSelected(newSelected);\n    onChange(newSelected < 2 ? newSelected : 3600);\n  };\n\n  return (\n    <div className=\"alert-rearm\">\n      <Select\n        optionLabelProp=\"label\"\n        defaultValue={selected || 0}\n        dropdownMatchSelectWidth={false}\n        onChange={_onChange}>\n        <Select.Option value={0} label=\"Just once\">\n          Just once <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={1} label=\"Each time alert is evaluated\">\n          Each time alert is evaluated <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={2} label=\"At most every\">\n          At most every ... <em>when alert is evaluated</em>\n        </Select.Option>\n      </Select>\n      {selected === 2 && value && <RearmByDuration value={value} onChange={onChange} editMode />}\n    </div>\n  );\n}\n\nRearmEditor.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction RearmViewer({ value }) {\n  let phrase = \"\";\n  switch (value) {\n    case 0:\n      phrase = \"just once, until back to normal\";\n      break;\n    case 1:\n      phrase = \"each time alert is evaluated, until back to normal\";\n      break;\n    default:\n      phrase = (\n        <>\n          at most every <RearmByDuration value={value} editMode={false} />, when alert is evaluated\n        </>\n      );\n  }\n\n  return <span>Notifications are sent {phrase}.</span>;\n}\n\nRearmViewer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default function Rearm({ editMode, ...props }) {\n  return editMode ? <RearmEditor {...props} /> : <RearmViewer {...props} />;\n}\n\nRearm.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n};\n\nRearm.defaultProps = {\n  onChange: null,\n  editMode: false,\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport default function useSearchResults(fetch, { initialResults = null, debounceTimeout = 200 } = {}) {\n  const [result, setResult] = useState(initialResults);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentSearchTerm = useRef(null);\n  const isDestroyed = useRef(false);\n\n  const [doSearch] = useDebouncedCallback(searchTerm => {\n    setIsLoading(true);\n    currentSearchTerm.current = searchTerm;\n    fetch(searchTerm)\n      .catch(() => initialResults)\n      .then(data => {\n        if (searchTerm === currentSearchTerm.current && !isDestroyed.current) {\n          setResult(data);\n          setIsLoading(false);\n        }\n      });\n  }, debounceTimeout);\n\n  useEffect(\n    () =>\n      // ignore all requests after component destruction\n      () => {\n        isDestroyed.current = true;\n      },\n    []\n  );\n\n  return [doSearch, result, isLoading];\n}\n","import { find } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport { Query } from \"@/services/query\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nconst { Option } = Select;\nfunction search(term) {\n  if (term === null) {\n    return Promise.resolve(null);\n  }\n\n  // get recent\n  if (!term) {\n    return Query.recent().then(results => results.filter(item => !item.is_draft)); // filter out draft\n  }\n\n  // search by query\n  return Query.query({ q: term }).then(({ results }) => results);\n}\n\nexport default function QuerySelector(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedQuery, setSelectedQuery] = useState();\n  const [doSearch, searchResults, searching] = useSearchResults(search, { initialResults: [] });\n\n  const placeholder = \"Search a query by name\";\n  const clearIcon = (\n    <i\n      className=\"fa fa-times hide-in-percy\"\n      role=\"button\"\n      tabIndex={0}\n      aria-label=\"Clear\"\n      onClick={() => selectQuery(null)}\n    />\n  );\n  const spinIcon = (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className={cx(\"fa fa-spinner fa-pulse hide-in-percy\", { hidden: !searching })} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Searching...</span>\n    </span>\n  );\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  // set selected from prop\n  useEffect(() => {\n    if (props.selectedQuery) {\n      setSelectedQuery(props.selectedQuery);\n    }\n  }, [props.selectedQuery]);\n\n  function selectQuery(queryId) {\n    let query = null;\n    if (queryId) {\n      query = find(searchResults, { id: queryId });\n      if (!query) {\n        // shouldn't happen\n        notification.error(\"Something went wrong...\", \"Couldn't select query\");\n      }\n    }\n\n    setSearchTerm(query ? null : \"\"); // empty string triggers recent fetch\n    setSelectedQuery(query);\n    props.onChange(query);\n  }\n\n  function renderResults() {\n    if (!searchResults.length) {\n      return <div className=\"text-muted\">No results matching search term.</div>;\n    }\n\n    return (\n      <ul className=\"list-group\">\n        {searchResults.map(q => (\n          <PlainButton\n            className={cx(\"query-selector-result\", \"list-group-item\", { inactive: q.is_draft })}\n            key={q.id}\n            role=\"listitem\"\n            onClick={() => selectQuery(q.id)}\n            data-test={`QueryId${q.id}`}>\n            {q.name} <QueryTagsControl isDraft={q.is_draft} tags={q.tags} className=\"inline-tags-control\" />\n          </PlainButton>\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.disabled) {\n    return (\n      <Input value={selectedQuery && selectedQuery.name} aria-label=\"Tied query\" placeholder={placeholder} disabled />\n    );\n  }\n\n  if (props.type === \"select\") {\n    const suffixIcon = selectedQuery ? clearIcon : null;\n    const value = selectedQuery ? selectedQuery.name : searchTerm;\n\n    return (\n      <Select\n        showSearch\n        dropdownMatchSelectWidth={false}\n        placeholder={placeholder}\n        value={value || undefined} // undefined for the placeholder to show\n        onSearch={setSearchTerm}\n        onChange={selectQuery}\n        suffixIcon={searching ? spinIcon : suffixIcon}\n        notFoundContent={null}\n        filterOption={false}\n        defaultActiveFirstOption={false}\n        className={props.className}\n        data-test=\"QuerySelector\">\n        {searchResults &&\n          searchResults.map(q => {\n            const disabled = q.is_draft;\n            return (\n              <Option\n                value={q.id}\n                key={q.id}\n                disabled={disabled}\n                className=\"query-selector-result\"\n                data-test={`QueryId${q.id}`}>\n                {q.name}{\" \"}\n                <QueryTagsControl\n                  isDraft={q.is_draft}\n                  tags={q.tags}\n                  className={cx(\"inline-tags-control\", { disabled })}\n                />\n              </Option>\n            );\n          })}\n      </Select>\n    );\n  }\n\n  return (\n    <span data-test=\"QuerySelector\">\n      {selectedQuery ? (\n        <Input value={selectedQuery.name} aria-label=\"Tied query\" suffix={clearIcon} readOnly />\n      ) : (\n        <Input\n          placeholder={placeholder}\n          value={searchTerm}\n          aria-label=\"Tied query\"\n          onChange={e => setSearchTerm(e.target.value)}\n          suffix={spinIcon}\n        />\n      )}\n      <div className=\"scrollbox\" style={{ maxHeight: \"50vh\", marginTop: 15 }}>\n        {searchResults && renderResults()}\n      </div>\n    </span>\n  );\n}\n\nQuerySelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selectedQuery: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  type: PropTypes.oneOf([\"select\", \"default\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nQuerySelector.defaultProps = {\n  selectedQuery: null,\n  type: \"default\",\n  className: null,\n  disabled: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { Query as QueryType } from \"@/components/proptypes\";\n\nimport Tooltip from \"@/components/Tooltip\";\n\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport QuestionCircleTwoToneIcon from \"@ant-design/icons/QuestionCircleTwoTone\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport \"./Query.less\";\n\nexport default function QueryFormItem({ query, queryResult, onChange, editMode }) {\n  const queryHint =\n    query && query.schedule ? (\n      <small>\n        Scheduled to refresh{\" \"}\n        <i className=\"alert-query-schedule\">\n          <SchedulePhrase schedule={query.schedule} isNew={false} />\n        </i>\n      </small>\n    ) : (\n      <small>\n        <WarningFilledIcon className=\"warning-icon-danger\" /> This query has no <i>refresh schedule</i>.{\" \"}\n        <Tooltip title=\"A query schedule is not necessary but is highly recommended for alerts. An Alert without a query schedule will only send notifications if a user in your organization manually executes this query.\">\n          <a role=\"presentation\">\n            Why it&apos;s recommended <QuestionCircleTwoToneIcon />\n          </a>\n        </Tooltip>\n      </small>\n    );\n\n  return (\n    <>\n      {editMode ? (\n        <QuerySelector onChange={onChange} selectedQuery={query} className=\"alert-query-selector\" type=\"select\" />\n      ) : (\n        <Tooltip title=\"Open query in a new tab.\">\n          <Link href={`queries/${query.id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"alert-query-link\">\n            {query.name} <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">(opens in a new tab)</span>\n          </Link>\n        </Tooltip>\n      )}\n      <div className=\"ant-form-item-explain\">{query && queryHint}</div>\n      {query && !queryResult && (\n        <div className=\"m-t-30\">\n          <LoadingOutlinedIcon className=\"m-r-5\" /> Loading query data\n        </div>\n      )}\n    </>\n  );\n}\n\nQueryFormItem.propTypes = {\n  query: QueryType,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nQueryFormItem.defaultProps = {\n  query: null,\n  queryResult: null,\n  onChange: () => {},\n  editMode: false,\n};\n","import { filter, find, isEmpty, size } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport BigMessage from \"@/components/BigMessage\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./SelectItemsDialog.less\";\n\nfunction ItemsList({ items, renderItem, onItemClick }) {\n  const renderListItem = useCallback(\n    item => {\n      const { content, className, isDisabled } = renderItem(item);\n\n      return (\n        <List.Item\n          className={classNames(\"select-items-list\", \"w-100\", \"p-l-10\", \"p-r-10\", { disabled: isDisabled }, className)}\n          onClick={isDisabled ? null : () => onItemClick(item)}>\n          {content}\n        </List.Item>\n      );\n    },\n    [renderItem, onItemClick]\n  );\n\n  return <List size=\"small\" dataSource={items} renderItem={renderListItem} />;\n}\n\nItemsList.propTypes = {\n  items: PropTypes.array,\n  renderItem: PropTypes.func,\n  onItemClick: PropTypes.func,\n};\n\nItemsList.defaultProps = {\n  items: [],\n  renderItem: () => {},\n  onItemClick: () => {},\n};\n\nfunction SelectItemsDialog({\n  dialog,\n  dialogTitle,\n  inputPlaceholder,\n  itemKey,\n  renderItem,\n  renderStagedItem,\n  searchItems,\n  selectedItemsTitle,\n  width,\n  showCount,\n  extraFooterContent,\n}) {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [search, items, isLoading] = useSearchResults(searchItems, { initialResults: [] });\n  const hasResults = items.length > 0;\n\n  useEffect(() => {\n    search();\n  }, [search]);\n\n  const isItemSelected = useCallback(\n    item => {\n      const key = itemKey(item);\n      return !!find(selectedItems, i => itemKey(i) === key);\n    },\n    [selectedItems, itemKey]\n  );\n\n  const toggleItem = useCallback(\n    item => {\n      if (isItemSelected(item)) {\n        const key = itemKey(item);\n        setSelectedItems(filter(selectedItems, i => itemKey(i) !== key));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems, itemKey, isItemSelected]\n  );\n\n  const save = useCallback(() => {\n    dialog.close(selectedItems).catch(error => {\n      if (error) {\n        notification.error(\"Failed to save some of selected items.\");\n      }\n    });\n  }, [dialog, selectedItems]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"select-items-dialog\"\n      width={width}\n      title={dialogTitle}\n      footer={\n        <div className=\"d-flex align-items-center\">\n          <span className=\"flex-fill m-r-5\" style={{ textAlign: \"left\", color: \"rgba(0, 0, 0, 0.5)\" }}>\n            {extraFooterContent}\n          </span>\n          <Button {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n            Cancel\n          </Button>\n          <Button\n            {...dialog.props.okButtonProps}\n            onClick={save}\n            disabled={selectedItems.length === 0 || dialog.props.okButtonProps.disabled}\n            type=\"primary\">\n            Save\n            {showCount && !isEmpty(selectedItems) ? ` (${size(selectedItems)})` : null}\n          </Button>\n        </div>\n      }>\n      <div className=\"d-flex align-items-center m-b-10\">\n        <div className=\"flex-fill\">\n          <Input.Search\n            onChange={event => search(event.target.value)}\n            placeholder={inputPlaceholder}\n            aria-label={inputPlaceholder}\n            autoFocus\n          />\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20\">\n            <h5 className=\"m-0\">{selectedItemsTitle}</h5>\n          </div>\n        )}\n      </div>\n\n      <div className=\"d-flex align-items-stretch\" style={{ minHeight: \"30vh\", maxHeight: \"50vh\" }}>\n        <div className=\"flex-fill scrollbox\">\n          {isLoading && <LoadingState className=\"\" />}\n          {!isLoading && !hasResults && (\n            <BigMessage icon=\"fa-search\" message=\"No items match your search.\" className=\"\" />\n          )}\n          {!isLoading && hasResults && (\n            <ItemsList\n              items={items}\n              renderItem={item => renderItem(item, { isSelected: isItemSelected(item) })}\n              onItemClick={toggleItem}\n            />\n          )}\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20 scrollbox\">\n            {selectedItems.length > 0 && (\n              <ItemsList\n                items={selectedItems}\n                renderItem={item => renderStagedItem(item, { isSelected: true })}\n                onItemClick={toggleItem}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nSelectItemsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dialogTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  selectedItemsTitle: PropTypes.string,\n  searchItems: PropTypes.func.isRequired, // (searchTerm: string): Promise<Items[]> if `searchTerm === ''` load all\n  itemKey: PropTypes.func, // (item) => string|number - return key of item (by default `id`)\n  // left list\n  // (item, { isSelected }) => {\n  //   content: node, // item contents\n  //   className: string = '', // additional class for item wrapper\n  //   isDisabled: bool = false, // is item clickable or disabled\n  // }\n  renderItem: PropTypes.func,\n  // right list; args/results save as for `renderItem`. if not specified - `renderItem` will be used\n  renderStagedItem: PropTypes.func,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  extraFooterContent: PropTypes.node,\n  showCount: PropTypes.bool,\n};\n\nSelectItemsDialog.defaultProps = {\n  dialogTitle: \"Add Items\",\n  inputPlaceholder: \"Search...\",\n  selectedItemsTitle: \"Selected items\",\n  itemKey: item => item.id,\n  renderItem: () => \"\",\n  renderStagedItem: null, // hidden by default\n  width: \"80%\",\n  extraFooterContent: null,\n  showCount: false,\n};\n\nexport default wrapDialog(SelectItemsDialog);\n","import { axios } from \"@/services/axios\";\n\nexport const IMG_ROOT = \"static/images/destinations\";\n\nconst Destination = {\n  query: () => axios.get(\"api/destinations\"),\n  get: ({ id }) => axios.get(`api/destinations/${id}`),\n  types: () => axios.get(\"api/destinations/types\"),\n  create: data => axios.post(`api/destinations`, data),\n  save: data => axios.post(`api/destinations/${data.id}`, data),\n  delete: ({ id }) => axios.delete(`api/destinations/${id}`),\n};\n\nexport default Destination;\n","import { axios } from \"@/services/axios\";\n\nconst AlertSubscription = {\n  query: ({ alertId }) => axios.get(`api/alerts/${alertId}/subscriptions`),\n  create: data => axios.post(`api/alerts/${data.alert_id}/subscriptions`, data),\n  delete: data => axios.delete(`api/alerts/${data.alert_id}/subscriptions/${data.id}`),\n};\n\nexport default AlertSubscription;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function ListItemAddon({ isSelected, isStaged, alreadyInGroup, deselectedIcon }) {\n  if (isStaged) {\n    return (\n      <>\n        <i className=\"fa fa-remove\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Remove</span>\n      </>\n    );\n  }\n  if (alreadyInGroup) {\n    return (\n      <Tooltip title=\"Already selected\">\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span tabIndex={0}>\n          <i className=\"fa fa-check\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Already selected</span>\n        </span>\n      </Tooltip>\n    );\n  }\n  return isSelected ? (\n    <>\n      <i className=\"fa fa-check\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Selected</span>\n    </>\n  ) : (\n    <>\n      <i className={`fa ${deselectedIcon}`} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Select</span>\n    </>\n  );\n}\n\nListItemAddon.propTypes = {\n  isSelected: PropTypes.bool,\n  isStaged: PropTypes.bool,\n  alreadyInGroup: PropTypes.bool,\n  deselectedIcon: PropTypes.string,\n};\n\nListItemAddon.defaultProps = {\n  isSelected: false,\n  isStaged: false,\n  alreadyInGroup: false,\n  deselectedIcon: \"fa-angle-double-right\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Alert from \"antd/lib/alert\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function EmailSettingsWarning({ featureName, className, mode, adminOnly }) {\n  const messageDescriptionId = useUniqueId(\"sr-mail-description\");\n\n  if (!clientConfig.mailSettingsMissing) {\n    return null;\n  }\n\n  if (adminOnly && !currentUser.isAdmin) {\n    return null;\n  }\n\n  const message = (\n    <span id={messageDescriptionId}>\n      Your mail server isn&apos;t configured correctly, and is needed for {featureName} to work.{\" \"}\n      <HelpTrigger type=\"MAIL_CONFIG\" className=\"f-inherit\" />\n    </span>\n  );\n\n  if (mode === \"icon\") {\n    return (\n      <Tooltip title={message} placement=\"topRight\" arrowPointAtCenter>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span className={className} aria-label=\"Mail alert\" aria-describedby={messageDescriptionId} tabIndex={0}>\n          <i className={\"fa fa-exclamation-triangle\"} aria-hidden=\"true\" />\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return <Alert message={message} type=\"error\" className={className} />;\n}\n\nEmailSettingsWarning.propTypes = {\n  featureName: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  mode: PropTypes.oneOf([\"alert\", \"icon\"]),\n  adminOnly: PropTypes.bool,\n};\n\nEmailSettingsWarning.defaultProps = {\n  className: null,\n  mode: \"alert\",\n  adminOnly: false,\n};\n","import { without, find, includes, map, toLower } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport Button from \"antd/lib/button\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { Destination as DestinationType, UserProfile as UserType } from \"@/components/proptypes\";\n\nimport DestinationService, { IMG_ROOT } from \"@/services/destination\";\nimport AlertSubscription from \"@/services/alert-subscription\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\n\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./AlertDestinations.less\";\n\nconst USER_EMAIL_DEST_ID = -1;\n\nfunction normalizeSub(sub) {\n  if (!sub.destination) {\n    sub.destination = {\n      id: USER_EMAIL_DEST_ID,\n      name: sub.user.email,\n      icon: \"DEPRECATED\",\n      type: \"email\",\n    };\n  }\n  return sub;\n}\n\nfunction ListItem({ destination: { name, type }, user, unsubscribe }) {\n  const canUnsubscribe = currentUser.isAdmin || currentUser.id === user.id;\n\n  return (\n    <li className=\"destination-wrapper\">\n      <img src={`${IMG_ROOT}/${type}.png`} className=\"destination-icon\" alt={name} />\n      <span className=\"flex-fill\">{name}</span>\n      {type === \"email\" && (\n        <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n      )}\n      {canUnsubscribe && (\n        <Tooltip title=\"Remove\" mouseEnterDelay={0.5}>\n          <PlainButton className=\"remove-button\" onClick={unsubscribe}>\n            {/* TODO: lacks visual feedback */}\n            <CloseOutlinedIcon />\n          </PlainButton>\n        </Tooltip>\n      )}\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  destination: DestinationType.isRequired,\n  user: UserType.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n};\n\nexport default class AlertDestinations extends React.Component {\n  static propTypes = {\n    alertId: PropTypes.any.isRequired,\n  };\n\n  state = {\n    dests: [],\n    subs: null,\n  };\n\n  componentDidMount() {\n    const { alertId } = this.props;\n    Promise.all([\n      DestinationService.query(), // get all destinations\n      AlertSubscription.query({ alertId }), // get subcriptions per alert\n    ]).then(([dests, subs]) => {\n      subs = subs.map(normalizeSub);\n      this.setState({ dests, subs });\n    });\n  }\n\n  showAddAlertSubDialog = () => {\n    const { dests, subs } = this.state;\n\n    SelectItemsDialog.showModal({\n      width: 570,\n      showCount: true,\n      extraFooterContent: (\n        <>\n          <i className=\"fa fa-info-circle\" aria-hidden=\"true\" /> Create new destinations in{\" \"}\n          <Tooltip title=\"Opens page in a new tab.\">\n            <Link href=\"destinations/new\" target=\"_blank\">\n              Alert Destinations\n            </Link>\n          </Tooltip>\n        </>\n      ),\n      dialogTitle: \"Add Existing Alert Destinations\",\n      inputPlaceholder: \"Search destinations...\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return Promise.resolve(dests.filter(d => includes(toLower(d.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = !!find(subs, s => s.destination.id === item.id);\n\n        return {\n          content: (\n            <div className=\"destination-wrapper\">\n              <img src={`${IMG_ROOT}/${item.type}.png`} className=\"destination-icon\" alt={item.name} />\n              <span className=\"flex-fill\">{item.name}</span>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} deselectedIcon=\"fa-plus\" />\n            </div>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n    }).onClose(items => {\n      const promises = map(items, item => this.subscribe(item));\n      return Promise.all(promises)\n        .then(() => {\n          notification.success(\"Subscribed.\");\n        })\n        .catch(() => {\n          notification.error(\"Failed saving subscription.\");\n          return Promise.reject(null); // keep dialog visible but suppress its default error message\n        });\n    });\n  };\n\n  onUserEmailToggle = sub => {\n    if (sub) {\n      this.unsubscribe(sub);\n    } else {\n      this.subscribe();\n    }\n  };\n\n  subscribe = dest => {\n    const { alertId } = this.props;\n\n    const sub = { alert_id: alertId };\n    if (dest) {\n      sub.destination_id = dest.id;\n    }\n\n    return AlertSubscription.create(sub).then(sub => {\n      const { subs } = this.state;\n      this.setState({\n        subs: [...subs, normalizeSub(sub)],\n      });\n    });\n  };\n\n  unsubscribe = sub => {\n    AlertSubscription.delete(sub)\n      .then(() => {\n        // not showing subscribe notification cause it's redundant here\n        const { subs } = this.state;\n        this.setState({\n          subs: without(subs, sub),\n        });\n      })\n      .catch(() => {\n        notification.error(\"Failed unsubscribing.\");\n      });\n  };\n\n  render() {\n    if (!this.props.alertId) {\n      return null;\n    }\n\n    const { subs } = this.state;\n    const currentUserEmailSub = find(subs, {\n      destination: { id: USER_EMAIL_DEST_ID },\n      user: { id: currentUser.id },\n    });\n    const filteredSubs = without(subs, currentUserEmailSub);\n    const { mailSettingsMissing } = clientConfig;\n\n    return (\n      <div className=\"alert-destinations\" data-test=\"AlertDestinations\">\n        <Tooltip title='Click to add an existing \"Alert Destination\"' mouseEnterDelay={0.5}>\n          <Button\n            data-test=\"ShowAddAlertSubDialog\"\n            type=\"primary\"\n            size=\"small\"\n            className=\"add-button\"\n            onClick={this.showAddAlertSubDialog}>\n            <i className=\"fa fa-plus f-12 m-r-5\" aria-hidden=\"true\" /> Add\n          </Button>\n        </Tooltip>\n        <ul>\n          <li className=\"destination-wrapper\">\n            <i className=\"destination-icon fa fa-envelope\" aria-hidden=\"true\" />\n            <span className=\"flex-fill\">{currentUser.email}</span>\n            <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n            {!mailSettingsMissing && (\n              <Switch\n                size=\"small\"\n                className=\"toggle-button\"\n                checked={!!currentUserEmailSub}\n                loading={!subs}\n                onChange={() => this.onUserEmailToggle(currentUserEmailSub)}\n                data-test=\"UserEmailToggle\"\n              />\n            )}\n          </li>\n          {filteredSubs.map(s => (\n            <ListItem key={s.id} unsubscribe={() => this.unsubscribe(s)} {...s} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\n\nexport default function HorizontalFormItem({ children, label, className, ...props }) {\n  const labelCol = { span: 4 };\n  const wrapperCol = { span: 16 };\n  if (!label) {\n    wrapperCol.offset = 4;\n  }\n\n  className = cx(\"alert-form-item\", className);\n\n  return (\n    <Form.Item labelCol={labelCol} wrapperCol={wrapperCol} label={label} className={className} {...props}>\n      {children}\n    </Form.Item>\n  );\n}\n\nHorizontalFormItem.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  className: PropTypes.string,\n};\n\nHorizontalFormItem.defaultProps = {\n  children: null,\n  label: null,\n  className: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Link from \"@/components/Link\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport AntAlert from \"antd/lib/alert\";\nimport * as Grid from \"antd/lib/grid\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport AlertDestinations from \"./components/AlertDestinations\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\nimport { STATE_CLASS } from \"../alerts/AlertsList\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nfunction AlertState({ state, lastTriggered }) {\n  return (\n    <div className=\"alert-state\">\n      <span className={`alert-state-indicator label ${STATE_CLASS[state]}`}>Status: {state}</span>\n      {state === \"unknown\" && <div className=\"ant-form-item-explain\">Alert condition has not been evaluated.</div>}\n      {lastTriggered && (\n        <div className=\"ant-form-item-explain\">\n          Last triggered{\" \"}\n          <span className=\"alert-last-triggered\">\n            <TimeAgo date={lastTriggered} />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAlertState.propTypes = {\n  state: PropTypes.string.isRequired,\n  lastTriggered: PropTypes.string,\n};\n\nAlertState.defaultProps = {\n  lastTriggered: null,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AlertView extends React.Component {\n  state = {\n    unmuting: false,\n  };\n\n  unmute = () => {\n    this.setState({ unmuting: true });\n    this.props.unmute().finally(() => {\n      this.setState({ unmuting: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, canEdit, onEdit, menuButton } = this.props;\n    const { query, name, options, rearm } = alert;\n\n    return (\n      <>\n        <Title name={name} alert={alert}>\n          <DynamicComponent name=\"AlertView.HeaderExtra\" alert={alert} />\n          <Tooltip title={canEdit ? \"\" : \"You do not have sufficient permissions to edit this alert\"}>\n            <Button type=\"default\" onClick={canEdit ? onEdit : null} className={cx({ disabled: !canEdit })}>\n              <i className=\"fa fa-edit m-r-5\" aria-hidden=\"true\" />\n              Edit\n            </Button>\n            {menuButton}\n          </Tooltip>\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <Grid.Row type=\"flex\" gutter={16}>\n            <Grid.Col xs={24} md={16} className=\"d-flex\">\n              <Form className=\"flex-fill\">\n                <HorizontalFormItem>\n                  <AlertState state={alert.state} lastTriggered={alert.last_triggered_at} />\n                </HorizontalFormItem>\n                <HorizontalFormItem label=\"Query\">\n                  <Query query={query} queryResult={queryResult} />\n                </HorizontalFormItem>\n                {queryResult && options && (\n                  <>\n                    <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                      <Criteria\n                        columnNames={queryResult.getColumnNames()}\n                        resultValues={queryResult.getData()}\n                        alertOptions={options}\n                      />\n                    </HorizontalFormItem>\n                    <HorizontalFormItem label=\"Notifications\" className=\"form-item-line-height-normal\">\n                      <Rearm value={rearm || 0} />\n                      <br />\n                      Set to {options.custom_subject || options.custom_body ? \"custom\" : \"default\"} notification\n                      template.\n                    </HorizontalFormItem>\n                  </>\n                )}\n              </Form>\n            </Grid.Col>\n            <Grid.Col xs={24} md={8}>\n              {options.muted && (\n                <AntAlert\n                  className=\"m-b-20\"\n                  message={\n                    <>\n                      <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\" /> Notifications are muted\n                    </>\n                  }\n                  description={\n                    <>\n                      Notifications for this alert will not be sent.\n                      <br />\n                      {canEdit && (\n                        <>\n                          To restore notifications click\n                          <Button\n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={this.unmute}\n                            loading={this.state.unmuting}\n                            className=\"m-t-5 m-l-5\">\n                            Unmute\n                          </Button>\n                        </>\n                      )}\n                    </>\n                  }\n                  type=\"warning\"\n                />\n              )}\n              <h4>\n                Destinations{\" \"}\n                <Tooltip title=\"Open Alert Destinations page in a new tab.\">\n                  <Link href=\"destinations\" target=\"_blank\">\n                    <i className=\"fa fa-external-link f-13\" aria-hidden=\"true\" />\n                    <span className=\"sr-only\">(opens in a new tab)</span>\n                  </Link>\n                </Tooltip>\n              </h4>\n              <AlertDestinations alertId={alert.id} />\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertView.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  canEdit: PropTypes.bool.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  menuButton: PropTypes.node.isRequired,\n  unmute: PropTypes.func,\n};\n\nAlertView.defaultProps = {\n  queryResult: null,\n  unmute: null,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, isEmpty, isNull, isUndefined } from \"lodash\";\nimport Mustache from \"mustache\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType, Query as QueryType } from \"@/components/proptypes\";\n\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./NotificationTemplate.less\";\n\nfunction normalizeCustomTemplateData(alert, query, columnNames, resultValues) {\n  const topValue = !isEmpty(resultValues) ? head(resultValues)[alert.options.column] : null;\n\n  return {\n    ALERT_STATUS: \"TRIGGERED\",\n    ALERT_CONDITION: alert.options.op,\n    ALERT_THRESHOLD: alert.options.value,\n    ALERT_NAME: alert.name,\n    ALERT_URL: `${window.location.origin}/alerts/${alert.id}`,\n    QUERY_NAME: query.name,\n    QUERY_URL: `${window.location.origin}/queries/${query.id}`,\n    QUERY_RESULT_VALUE: isNull(topValue) || isUndefined(topValue) ? \"UNKNOWN\" : topValue,\n    QUERY_RESULT_ROWS: resultValues,\n    QUERY_RESULT_COLS: columnNames,\n  };\n}\n\nfunction NotificationTemplate({ alert, query, columnNames, resultValues, subject, setSubject, body, setBody }) {\n  const hasContent = !!(subject || body);\n  const [enabled, setEnabled] = useState(hasContent ? 1 : 0);\n  const [showPreview, setShowPreview] = useState(false);\n\n  const renderData = normalizeCustomTemplateData(alert, query, columnNames, resultValues);\n\n  const render = tmpl => Mustache.render(tmpl || \"\", renderData);\n  const onEnabledChange = value => {\n    if (value || !hasContent) {\n      setEnabled(value);\n      setShowPreview(false);\n    } else {\n      Modal.confirm({\n        title: \"Are you sure?\",\n        content: \"Switching to default template will discard your custom template.\",\n        onOk: () => {\n          setSubject(null);\n          setBody(null);\n          setEnabled(value);\n          setShowPreview(false);\n        },\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    }\n  };\n\n  return (\n    <div className=\"alert-template\">\n      <Select\n        value={enabled}\n        onChange={onEnabledChange}\n        optionLabelProp=\"label\"\n        dropdownMatchSelectWidth={false}\n        style={{ width: \"fit-content\" }}>\n        <Select.Option value={0} label=\"Use default template\">\n          Default template\n        </Select.Option>\n        <Select.Option value={1} label=\"Use custom template\">\n          Custom template\n        </Select.Option>\n      </Select>\n      {!!enabled && (\n        <div className=\"alert-custom-template\" data-test=\"AlertCustomTemplate\">\n          <div className=\"d-flex align-items-center\">\n            <h5 className=\"flex-fill\">Subject / Body</h5>\n            Preview{\" \"}\n            <Switch size=\"small\" className=\"alert-template-preview\" value={showPreview} onChange={setShowPreview} />\n          </div>\n          {/* TODO: consider adding real labels (not clear for sighted users as well) */}\n          <Input\n            value={showPreview ? render(subject) : subject}\n            aria-label=\"Subject\"\n            onChange={e => setSubject(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomSubject\"\n          />\n          <Input.TextArea\n            value={showPreview ? render(body) : body}\n            aria-label=\"Body\"\n            autoSize={{ minRows: 9 }}\n            onChange={e => setBody(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomBody\"\n          />\n          <HelpTrigger type=\"ALERT_NOTIF_TEMPLATE_GUIDE\" className=\"f-13\">\n            <i className=\"fa fa-question-circle\" aria-hidden=\"true\" /> Formatting guide{\" \"}\n            <span className=\"sr-only\">(help)</span>\n          </HelpTrigger>\n        </div>\n      )}\n    </div>\n  );\n}\n\nNotificationTemplate.propTypes = {\n  alert: AlertType.isRequired,\n  query: QueryType.isRequired,\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.any).isRequired,\n  subject: PropTypes.string,\n  setSubject: PropTypes.func.isRequired,\n  body: PropTypes.string,\n  setBody: PropTypes.func.isRequired,\n};\n\nNotificationTemplate.defaultProps = {\n  subject: \"\",\n  body: \"\",\n};\n\nexport default NotificationTemplate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\n\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertEdit extends React.Component {\n  _isMounted = false;\n\n  state = {\n    saving: false,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      if (this._isMounted) {\n        this.setState({ saving: false });\n      }\n    });\n  };\n\n  cancel = () => {\n    this.props.cancel();\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange, menuButton } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title name={name} alert={alert} onChange={onNameChange} editMode>\n          <DynamicComponent name=\"AlertEdit.HeaderExtra\" alert={alert} />\n          <Button className=\"m-r-5\" onClick={() => this.cancel()}>\n            <i className=\"fa fa-times m-r-5\" aria-hidden=\"true\" />\n            Cancel\n          </Button>\n          <Button type=\"primary\" onClick={() => this.save()}>\n            {saving ? (\n              <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">Saving...</span>\n              </span>\n            ) : (\n              <>\n                <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />\n              </>\n            )}\n            Save Changes\n          </Button>\n          {menuButton}\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n            </Form>\n            <div>\n              <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n                Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(help)</span>\n              </HelpTrigger>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertEdit.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  menuButton: PropTypes.node.isRequired,\n  save: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  onQuerySelected: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertEdit.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertNew extends React.Component {\n  state = {\n    saving: false,\n  };\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      this.setState({ saving: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title alert={alert} name={name} onChange={onNameChange} editMode />\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <div className=\"m-b-30\">\n                Start by selecting the query that you would like to monitor using the search bar.\n                <br />\n                Keep in mind that Alerts do not work with queries that use parameters.\n              </div>\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n              <HorizontalFormItem>\n                <Button type=\"primary\" onClick={this.save} disabled={!query} className=\"btn-create-alert\">\n                  {saving && (\n                    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                      <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">Saving...</span>\n                    </span>\n                  )}\n                  Create Alert\n                </Button>\n              </HorizontalFormItem>\n            </Form>\n            <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertNew.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  onQuerySelected: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertNew.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import { head, includes, trim, template, values } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nimport { currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport AlertService from \"@/services/alert\";\nimport { Query as QueryService } from \"@/services/query\";\nimport routes from \"@/services/routes\";\n\nimport MenuButton from \"./components/MenuButton\";\nimport AlertView from \"./AlertView\";\nimport AlertEdit from \"./AlertEdit\";\nimport AlertNew from \"./AlertNew\";\n\nconst MODES = {\n  NEW: 0,\n  VIEW: 1,\n  EDIT: 2,\n};\n\nconst defaultNameBuilder = template(\"<%= query.name %>: <%= options.column %> <%= options.op %> <%= options.value %>\");\n\nexport function getDefaultName(alert) {\n  if (!alert.query) {\n    return \"New Alert\";\n  }\n  return defaultNameBuilder(alert);\n}\n\nclass Alert extends React.Component {\n  static propTypes = {\n    mode: PropTypes.oneOf(values(MODES)),\n    alertId: PropTypes.string,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mode: null,\n    alertId: null,\n    onError: () => {},\n  };\n\n  _isMounted = false;\n\n  state = {\n    alert: null,\n    queryResult: null,\n    pendingRearm: null,\n    canEdit: false,\n    mode: null,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { mode } = this.props;\n    this.setState({ mode });\n\n    if (mode === MODES.NEW) {\n      this.setState({\n        alert: {\n          options: {\n            op: \">\",\n            value: 1,\n            muted: false,\n          },\n        },\n        pendingRearm: 0,\n        canEdit: true,\n      });\n    } else {\n      const { alertId } = this.props;\n      AlertService.get({ id: alertId })\n        .then(alert => {\n          if (this._isMounted) {\n            const canEdit = currentUser.canEdit(alert);\n\n            // force view mode if can't edit\n            if (!canEdit) {\n              this.setState({ mode: MODES.VIEW });\n              notification.warn(\n                \"You cannot edit this alert\",\n                \"You do not have sufficient permissions to edit this alert, and have been redirected to the view-only page.\",\n                { duration: 0 }\n              );\n            }\n\n            this.setState({ alert, canEdit, pendingRearm: alert.rearm });\n            this.onQuerySelected(alert.query);\n          }\n        })\n        .catch(error => {\n          if (this._isMounted) {\n            this.props.onError(error);\n          }\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    const { alert, pendingRearm } = this.state;\n\n    alert.name = trim(alert.name) || getDefaultName(alert);\n    alert.rearm = pendingRearm || null;\n\n    return AlertService.save(alert)\n      .then(alert => {\n        notification.success(\"Saved.\");\n        navigateTo(`alerts/${alert.id}`, true);\n        this.setState({ alert, mode: MODES.VIEW });\n      })\n      .catch(() => {\n        notification.error(\"Failed saving alert.\");\n      });\n  };\n\n  onQuerySelected = query => {\n    this.setState(({ alert }) => ({\n      alert: Object.assign(alert, { query }),\n      queryResult: null,\n    }));\n\n    if (query) {\n      // get cached result for column names and values\n      new QueryService(query).getQueryResultPromise().then(queryResult => {\n        if (this._isMounted) {\n          this.setState({ queryResult });\n          let { column } = this.state.alert.options;\n          const columns = queryResult.getColumnNames();\n\n          // default to first column name if none chosen, or irrelevant in current query\n          if (!column || !includes(columns, column)) {\n            column = head(queryResult.getColumnNames());\n          }\n          this.setAlertOptions({ column });\n        }\n      });\n    }\n  };\n\n  onNameChange = name => {\n    const { alert } = this.state;\n    this.setState({\n      alert: Object.assign(alert, { name }),\n    });\n  };\n\n  onRearmChange = pendingRearm => {\n    this.setState({ pendingRearm });\n  };\n\n  setAlertOptions = obj => {\n    const { alert } = this.state;\n    const options = { ...alert.options, ...obj };\n    this.setState({\n      alert: Object.assign(alert, { options }),\n    });\n  };\n\n  delete = () => {\n    const { alert } = this.state;\n    return AlertService.delete(alert)\n      .then(() => {\n        notification.success(\"Alert deleted successfully.\");\n        navigateTo(\"alerts\");\n      })\n      .catch(() => {\n        notification.error(\"Failed deleting alert.\");\n      });\n  };\n\n  mute = () => {\n    const { alert } = this.state;\n    return AlertService.mute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: true });\n        notification.warn(\"Notifications have been muted.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed muting notifications.\");\n      });\n  };\n\n  unmute = () => {\n    const { alert } = this.state;\n    return AlertService.unmute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: false });\n        notification.success(\"Notifications have been restored.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed restoring notifications.\");\n      });\n  };\n\n  edit = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}/edit`, true);\n    this.setState({ mode: MODES.EDIT });\n  };\n\n  cancel = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}`, true);\n    this.setState({ mode: MODES.VIEW });\n  };\n\n  render() {\n    const { alert } = this.state;\n    if (!alert) {\n      return <LoadingState className=\"m-t-30\" />;\n    }\n\n    const muted = !!alert.options.muted;\n    const { queryResult, mode, canEdit, pendingRearm } = this.state;\n\n    const menuButton = (\n      <MenuButton doDelete={this.delete} muted={muted} mute={this.mute} unmute={this.unmute} canEdit={canEdit} />\n    );\n\n    const commonProps = {\n      alert,\n      queryResult,\n      pendingRearm,\n      save: this.save,\n      menuButton,\n      onQuerySelected: this.onQuerySelected,\n      onRearmChange: this.onRearmChange,\n      onNameChange: this.onNameChange,\n      onCriteriaChange: this.setAlertOptions,\n      onNotificationTemplateChange: this.setAlertOptions,\n    };\n\n    return (\n      <div className=\"alert-page\">\n        <div className=\"container\">\n          {mode === MODES.NEW && <AlertNew {...commonProps} />}\n          {mode === MODES.VIEW && (\n            <AlertView canEdit={canEdit} onEdit={this.edit} muted={muted} unmute={this.unmute} {...commonProps} />\n          )}\n          {mode === MODES.EDIT && <AlertEdit cancel={this.cancel} {...commonProps} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Alerts.New\",\n  routeWithUserSession({\n    path: \"/alerts/new\",\n    title: \"New Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.NEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.View\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.VIEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.Edit\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId/edit\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.EDIT} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\n\nfunction processTags(data) {\n  return data.tags || [];\n}\n\nexport default function getTags(url) {\n  return axios.get(url).then(processTags);\n}\n","import { map, includes, difference } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Badge from \"antd/lib/badge\";\nimport Menu from \"antd/lib/menu\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport getTags from \"@/services/getTags\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./TagsList.less\";\n\ntype Tag = {\n  name: string;\n  count?: number;\n};\n\ntype TagsListProps = {\n  tagsUrl: string;\n  showUnselectAll: boolean;\n  onUpdate?: (selectedTags: string[]) => void;\n};\n\nfunction TagsList({ tagsUrl, showUnselectAll = false, onUpdate }: TagsListProps): JSX.Element | null {\n  const [allTags, setAllTags] = useState<Tag[]>([]);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    getTags(tagsUrl).then(tags => {\n      if (!isCancelled) {\n        setAllTags(tags);\n      }\n    });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [tagsUrl]);\n\n  const toggleTag = useCallback(\n    (event, tag) => {\n      let newSelectedTags;\n      if (event.shiftKey) {\n        // toggle tag\n        if (includes(selectedTags, tag)) {\n          newSelectedTags = difference(selectedTags, [tag]);\n        } else {\n          newSelectedTags = [...selectedTags, tag];\n        }\n      } else {\n        // if the tag is the only selected, deselect it, otherwise select only it\n        if (includes(selectedTags, tag) && selectedTags.length === 1) {\n          newSelectedTags = [];\n        } else {\n          newSelectedTags = [tag];\n        }\n      }\n\n      setSelectedTags(newSelectedTags);\n      if (onUpdate) {\n        onUpdate([...newSelectedTags]);\n      }\n    },\n    [selectedTags, onUpdate]\n  );\n\n  const unselectAll = useCallback(() => {\n    setSelectedTags([]);\n    if (onUpdate) {\n      onUpdate([]);\n    }\n  }, [onUpdate]);\n\n  if (allTags.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"tags-list\">\n      <div className=\"tags-list-title\">\n        <span className=\"tags-list-label\">Tags</span>\n        {showUnselectAll && selectedTags.length > 0 && (\n          <PlainButton type=\"link\" onClick={unselectAll}>\n            <CloseOutlinedIcon />\n            clear selection\n          </PlainButton>\n        )}\n      </div>\n\n      <div className=\"tiled\">\n        <Menu className=\"invert-stripe-position\" mode=\"inline\" selectedKeys={selectedTags}>\n          {map(allTags, tag => (\n            <Menu.Item key={tag.name} className=\"m-0\">\n              <PlainButton\n                className=\"d-flex align-items-center justify-content-between\"\n                onClick={event => toggleTag(event, tag.name)}>\n                <span className=\"max-character col-xs-11\">{tag.name}</span>\n                <Badge count={tag.count} />\n              </PlainButton>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default TagsList;\n","import { isFunction, isString, filter, map } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport AntdMenu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport TagsList from \"@/components/TagsList\";\n\n/*\n    SearchInput\n */\n\nexport function SearchInput({ placeholder, value, showIcon, onChange, label }) {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const onInputChange = useCallback(\n    event => {\n      const newValue = event.target.value;\n      setCurrentValue(newValue);\n      onChange(newValue);\n    },\n    [onChange]\n  );\n\n  const InputControl = showIcon ? Input.Search : Input;\n  return (\n    <div className=\"m-b-10\">\n      <InputControl\n        className=\"form-control\"\n        placeholder={placeholder}\n        value={currentValue}\n        aria-label={label}\n        onChange={onInputChange}\n      />\n    </div>\n  );\n}\n\nSearchInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  showIcon: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  showIcon: false,\n  label: \"Search\",\n};\n\n/*\n    Menu\n */\n\nexport function Menu({ items, selected }) {\n  items = filter(items, item => (isFunction(item.isAvailable) ? item.isAvailable() : true));\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10 tags-list tiled\">\n      <AntdMenu className=\"invert-stripe-position\" mode=\"inline\" selectable={false} selectedKeys={[selected]}>\n        {map(items, item => (\n          <AntdMenu.Item key={item.key} className=\"m-0\">\n            <Link href={item.href}>\n              {isString(item.icon) && item.icon !== \"\" && (\n                <span className=\"btn-favorite m-r-5\">\n                  <i className={item.icon} aria-hidden=\"true\" />\n                </span>\n              )}\n              {isFunction(item.icon) && (item.icon(item) || null)}\n              {item.title}\n            </Link>\n          </AntdMenu.Item>\n        ))}\n      </AntdMenu>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      icon: PropTypes.func, // function to render icon\n      isAvailable: PropTypes.func, // return `true` to show item and `false` to hide; if omitted: show item\n    })\n  ),\n  selected: PropTypes.string,\n};\n\nMenu.defaultProps = {\n  items: [],\n  selected: null,\n};\n\n/*\n    MenuIcon\n */\n\nexport function MenuIcon({ icon }) {\n  return (\n    <span className=\"btn-favorite m-r-5\">\n      <i className={icon} aria-hidden=\"true\" />\n    </span>\n  );\n}\n\nMenuIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n};\n\n/*\n    ProfileImage\n */\n\nexport function ProfileImage({ user }) {\n  if (!isString(user.profile_image_url) || user.profile_image_url === \"\") {\n    return null;\n  }\n  return <img src={user.profile_image_url} className=\"profile__image--sidebar m-r-5\" width=\"13\" alt={user.name} />;\n}\n\nProfileImage.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\n/*\n    Tags\n */\n\nexport function Tags({ url, onChange, showUnselectAll }) {\n  if (url === \"\") {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10\">\n      <TagsList tagsUrl={url} onUpdate={onChange} showUnselectAll={showUnselectAll} />\n    </div>\n  );\n}\n\nTags.propTypes = {\n  url: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  showUnselectAll: PropTypes.bool,\n  unselectAllButtonTitle: PropTypes.string,\n};\n","import { filter, includes, intersection } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport { Columns } from \"../components/ItemsTable\";\n\nexport default function useItemsListExtraActions(controller, listColumns, ExtraActionsComponent) {\n  const [actionsState, setActionsState] = useState({ isAvailable: false });\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  // clear selection when page changes\n  useEffect(() => {\n    setSelectedItems([]);\n  }, [controller.pageItems, actionsState.isAvailable]);\n\n  const areAllItemsSelected = useMemo(() => {\n    const allItems = controller.pageItems;\n    if (allItems.length === 0 || selectedItems.length === 0) {\n      return false;\n    }\n    return intersection(selectedItems, allItems).length === allItems.length;\n  }, [selectedItems, controller.pageItems]);\n\n  const toggleAllItems = useCallback(() => {\n    if (areAllItemsSelected) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(controller.pageItems);\n    }\n  }, [areAllItemsSelected, controller.pageItems]);\n\n  const toggleItem = useCallback(\n    item => {\n      if (includes(selectedItems, item)) {\n        setSelectedItems(filter(selectedItems, s => s !== item));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems]\n  );\n\n  const checkboxColumn = useMemo(\n    () =>\n      Columns.custom(\n        (text, item) => <Checkbox checked={includes(selectedItems, item)} onChange={() => toggleItem(item)} />,\n        {\n          title: () => <Checkbox checked={areAllItemsSelected} onChange={toggleAllItems} />,\n          field: \"id\",\n          width: \"1%\",\n        }\n      ),\n    [selectedItems, areAllItemsSelected, toggleAllItems, toggleItem]\n  );\n\n  const Component = useCallback(\n    function ItemsListExtraActionsComponentWrapper(props) {\n      // this check mostly needed to avoid eslint exhaustive deps warning\n      if (!ExtraActionsComponent) {\n        return null;\n      }\n\n      return <ExtraActionsComponent onStateChange={setActionsState} {...props} />;\n    },\n    [ExtraActionsComponent]\n  );\n\n  return useMemo(\n    () => ({\n      areExtraActionsAvailable: actionsState.isAvailable,\n      listColumns: actionsState.isAvailable ? [checkboxColumn, ...listColumns] : listColumns,\n      Component,\n      selectedItems,\n      setSelectedItems,\n    }),\n    [actionsState, listColumns, checkboxColumn, selectedItems, Component]\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./content-with-sidebar.less\";\n\nconst propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  className: null,\n  children: null,\n};\n\n// Sidebar\n\nfunction Sidebar({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-sidebar\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nSidebar.propTypes = propTypes;\nSidebar.defaultProps = defaultProps;\n\n// Content\n\nfunction Content({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-content\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nContent.propTypes = propTypes;\nContent.defaultProps = defaultProps;\n\n// Layout\n\nexport default function Layout({ children, className = undefined, ...props }) {\n  return (\n    <div className={classNames(\"layout-with-sidebar\", className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nLayout.propTypes = propTypes;\nLayout.defaultProps = defaultProps;\n\nLayout.Sidebar = Sidebar;\nLayout.Content = Content;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BigMessage from \"@/components/BigMessage\";\nimport { TagsControl } from \"@/components/tags-control/TagsControl\";\n\nexport default function NoTaggedObjectsFound({ objectType, tags }) {\n  return (\n    <BigMessage icon=\"fa-tags\">\n      No {objectType} found tagged with&nbsp;\n      <TagsControl className=\"inline-tags-control\" tags={Array.from(tags)} tagSeparator={\"+\"} />.\n    </BigMessage>\n  );\n}\n\nNoTaggedObjectsFound.propTypes = {\n  objectType: PropTypes.string.isRequired,\n  tags: PropTypes.oneOfType([PropTypes.array, PropTypes.objectOf(Set)]).isRequired,\n};\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport interface DashboardListEmptyStateProps {\n  page: string;\n  searchTerm: string;\n  selectedTags: string[];\n}\n\nexport default function DashboardListEmptyState({ page, searchTerm, selectedTags }: DashboardListEmptyStateProps) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"dashboards\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark dashboards as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_dashboard\") ? (\n        <span>\n          <Button type=\"primary\" size=\"small\" onClick={() => CreateDashboardDialog.showModal()}>\n            Create your first dashboard!\n          </Button>{\" \"}\n          <HelpTrigger className=\"f-14\" type=\"DASHBOARDS\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"DashboardList.EmptyState\">\n          <EmptyState\n            icon=\"zmdi zmdi-view-quilt\"\n            description=\"See the big picture\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"DASHBOARDS\" />}\n            showDashboardStep\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nDashboardListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nimport DashboardListEmptyState from \"./components/DashboardListEmptyState\";\n\nimport \"./dashboard-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"dashboards\",\n    title: \"All Dashboards\",\n    icon: () => <Sidebar.MenuIcon icon=\"zmdi zmdi-view-quilt\" />,\n  },\n  {\n    key: \"my\",\n    href: \"dashboards/my\",\n    title: \"My Dashboards\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"dashboards/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={item.url} data-test={`DashboardId${item.id}`}>\n          {item.name}\n        </Link>\n        <DashboardTagsControl\n          className=\"d-block\"\n          tags={item.tags}\n          isDraft={item.is_draft}\n          isArchived={item.is_archived}\n        />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Created At\",\n    field: \"created_at\",\n    width: \"1%\",\n  }),\n];\n\nfunction DashboardListExtraActions(props) {\n  return <DynamicComponent name=\"DashboardList.Actions\" {...props} />;\n}\n\nfunction DashboardList({ controller }) {\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, DashboardListExtraActions);\n\n  return (\n    <div className=\"page-dashboard-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_dashboard\") ? (\n              <Button block type=\"primary\" onClick={() => CreateDashboardDialog.showModal()}>\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Dashboard\n              </Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Dashboards...\"\n              label=\"Search dashboards\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/dashboards/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            <div data-test=\"DashboardLayoutContent\">\n              {controller.isLoaded && controller.isEmpty ? (\n                <DashboardListEmptyState\n                  page={controller.params.currentPage}\n                  searchTerm={controller.searchTerm}\n                  selectedTags={controller.selectedTags}\n                />\n              ) : (\n                <React.Fragment>\n                  <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                    <ExtraActionsComponent selectedItems={selectedItems} />\n                  </div>\n                  <div className=\"bg-white tiled table-responsive\">\n                    <ItemsTable\n                      items={controller.pageItems}\n                      loading={!controller.isLoaded}\n                      columns={tableColumns}\n                      orderByField={controller.orderByField}\n                      orderByReverse={controller.orderByReverse}\n                      toggleSorting={controller.toggleSorting}\n                    />\n                    <Paginator\n                      showPageSizeSelect\n                      totalCount={controller.totalItemsCount}\n                      pageSize={controller.itemsPerPage}\n                      onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                      page={controller.page}\n                      onChange={page => controller.updatePagination({ page })}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nDashboardList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst DashboardListPage = itemsList(\n  DashboardList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Dashboard.query.bind(Dashboard),\n          my: Dashboard.myDashboards.bind(Dashboard),\n          favorites: Dashboard.favorites.bind(Dashboard),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Dashboard(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Dashboards.List\",\n  routeWithUserSession({\n    path: \"/dashboards\",\n    title: \"Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.Favorites\",\n  routeWithUserSession({\n    path: \"/dashboards/favorites\",\n    title: \"Favorite Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.My\",\n  routeWithUserSession({\n    path: \"/dashboards/my\",\n    title: \"My Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import { each, filter, map, toLower, toString, trim, upperFirst, without } from \"lodash\";\nimport Mousetrap from \"mousetrap\";\nimport \"mousetrap/plugins/global-bind/mousetrap-global-bind\";\n\nconst modKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Cmd\" : \"Ctrl\";\nconst altKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Option\" : \"Alt\";\n\nexport function humanReadableShortcut(shortcut, limit = Infinity) {\n  const modifiers = {\n    mod: upperFirst(modKey),\n    alt: upperFirst(altKey),\n  };\n\n  shortcut = toLower(toString(shortcut));\n  shortcut = filter(map(shortcut.split(\",\"), trim), s => s !== \"\").slice(0, limit);\n  shortcut = map(shortcut, sc => {\n    sc = filter(map(sc.split(\"+\")), s => s !== \"\");\n    return map(sc, s => modifiers[s] || upperFirst(s)).join(\" + \");\n  }).join(\", \");\n\n  return shortcut !== \"\" ? shortcut : null;\n}\n\nconst handlers = {};\n\nfunction onShortcut(event, shortcut) {\n  event.preventDefault();\n  event.retunValue = false;\n  each(handlers[shortcut], fn => fn());\n}\n\nconst KeyboardShortcuts = {\n  modKey,\n  altKey,\n\n  bind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = [...without(handlers[k], fn), fn];\n        Mousetrap.bindGlobal(k, onShortcut);\n      });\n    });\n  },\n\n  unbind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = without(handlers[k], fn);\n        if (handlers[k].length === 0) {\n          handlers[k] = undefined;\n          Mousetrap.unbind(k);\n        }\n      });\n    });\n  },\n};\n\nexport default KeyboardShortcuts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Badge from \"antd/lib/badge\";\nimport Tooltip from \"@/components/Tooltip\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nfunction ParameterApplyButton({ paramCount, onClick }) {\n  // show spinner when count is empty so the fade out is consistent\n  const icon = !paramCount ? (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Loading...</span>\n    </span>\n  ) : (\n    <i className=\"fa fa-check\" aria-hidden=\"true\" />\n  );\n\n  return (\n    <div className=\"parameter-apply-button\" data-show={!!paramCount} data-test=\"ParameterApplyButton\">\n      <Badge count={paramCount}>\n        <Tooltip title={paramCount ? `${KeyboardShortcuts.modKey} + Enter` : null}>\n          <span>\n            <Button onClick={onClick}>{icon} Apply Changes</Button>\n          </span>\n        </Tooltip>\n      </Badge>\n    </div>\n  );\n}\n\nParameterApplyButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  paramCount: PropTypes.number.isRequired,\n};\n\nexport default ParameterApplyButton;\n","const canvas = document.createElement(\"canvas\");\ncanvas.style.display = \"none\";\ndocument.body.appendChild(canvas);\n\nexport function calculateTextWidth(text: string, container = document.body) {\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    const containerStyle = window.getComputedStyle(container);\n    ctx.font = `${containerStyle.fontSize} ${containerStyle.fontFamily}`;\n    const textMetrics = ctx.measureText(text);\n    let actualWidth = textMetrics.width;\n    if (\"actualBoundingBoxLeft\" in textMetrics) {\n      // only available on evergreen browsers\n      actualWidth = Math.abs(textMetrics.actualBoundingBoxLeft) + Math.abs(textMetrics.actualBoundingBoxRight);\n    }\n    return actualWidth;\n  }\n\n  return null;\n}\n","import React, { useMemo } from \"react\";\nimport { maxBy } from \"lodash\";\nimport AntdSelect, { SelectProps, LabeledValue } from \"antd/lib/select\";\nimport { calculateTextWidth } from \"@/lib/calculateTextWidth\";\n\nconst MIN_LEN_FOR_VIRTUAL_SCROLL = 400;\n\ninterface VirtualScrollLabeledValue extends LabeledValue {\n  label: string;\n}\n\ninterface VirtualScrollSelectProps extends Omit<SelectProps<string>, \"optionFilterProp\" | \"children\"> {\n  options: Array<VirtualScrollLabeledValue>;\n}\nfunction SelectWithVirtualScroll({ options, ...props }: VirtualScrollSelectProps): JSX.Element {\n  const dropdownMatchSelectWidth = useMemo<number | boolean>(() => {\n    if (options && options.length > MIN_LEN_FOR_VIRTUAL_SCROLL) {\n      const largestOpt = maxBy(options, \"label.length\");\n\n      if (largestOpt) {\n        const offset = 40;\n        const optionText = largestOpt.label;\n        const width = calculateTextWidth(optionText);\n        if (width) {\n          return width + offset;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [options]);\n\n  return (\n    <AntdSelect<string>\n      dropdownMatchSelectWidth={dropdownMatchSelectWidth}\n      options={options}\n      optionFilterProp=\"label\" // as this component expects \"options\" prop\n      {...props}\n    />\n  );\n}\n\nexport default SelectWithVirtualScroll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateTimeInput = React.forwardRef(({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n  const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      showTime\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date and Time\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateTimeInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeInput;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isFunction, get, findIndex } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Typography from \"antd/lib/typography\";\nimport { DynamicDateType } from \"@/services/parameters/DateParameter\";\nimport { DynamicDateRangeType } from \"@/services/parameters/DateRangeParameter\";\n\nimport ArrowLeftOutlinedIcon from \"@ant-design/icons/ArrowLeftOutlined\";\nimport ThunderboltTwoToneIcon from \"@ant-design/icons/ThunderboltTwoTone\";\nimport ThunderboltOutlinedIcon from \"@ant-design/icons/ThunderboltOutlined\";\n\nimport \"./DynamicButton.less\";\n\nconst { Text } = Typography;\n\nfunction DynamicButton({ options, selectedDynamicValue, onSelect, enabled, staticValueLabel }) {\n  const menu = (\n    <Menu\n      className=\"dynamic-menu\"\n      onClick={({ key }) => onSelect(get(options, key, \"static\"))}\n      selectedKeys={[`${findIndex(options, { value: selectedDynamicValue })}`]}\n      data-test=\"DynamicButtonMenu\">\n      {options.map((option, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Menu.Item key={index}>\n          {option.name} {option.label && <em>{isFunction(option.label) ? option.label() : option.label}</em>}\n        </Menu.Item>\n      ))}\n      {enabled && <Menu.Divider />}\n      {enabled && (\n        <Menu.Item>\n          <ArrowLeftOutlinedIcon />\n          <Text type=\"secondary\">{staticValueLabel}</Text>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n\n  const containerRef = useRef(null);\n\n  return (\n    <div ref={containerRef}>\n      <div role=\"presentation\" onClick={e => e.stopPropagation()}>\n        <Dropdown.Button\n          overlay={menu}\n          className=\"dynamic-button\"\n          placement=\"bottomRight\"\n          trigger={[\"click\"]}\n          icon={\n            enabled ? (\n              <ThunderboltTwoToneIcon className=\"dynamic-icon\" />\n            ) : (\n              <ThunderboltOutlinedIcon className=\"dynamic-icon\" />\n            )\n          }\n          getPopupContainer={() => containerRef.current}\n          data-test=\"DynamicButton\"\n        />\n      </div>\n    </div>\n  );\n}\n\nDynamicButton.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object), // eslint-disable-line react/forbid-prop-types\n  selectedDynamicValue: PropTypes.oneOfType([DynamicDateType, DynamicDateRangeType]),\n  onSelect: PropTypes.func,\n  enabled: PropTypes.bool,\n  staticValueLabel: PropTypes.string,\n};\n\nDynamicButton.defaultProps = {\n  options: [],\n  selectedDynamicValue: null,\n  onSelect: () => {},\n  enabled: false,\n  staticValueLabel: \"Back to Static Value\",\n};\n\nexport default DynamicButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes } from \"lodash\";\nimport { isDynamicDate } from \"@/services/parameters/DateParameter\";\nimport DateInput from \"@/components/DateInput\";\nimport DateTimeInput from \"@/components/DateTimeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nclass DynamicDatePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (parameterValue) {\n        onSelect(moment(parameterValue));\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, className, dateOptions, dynamicButtonOptions, onSelect } = this.props;\n    const hasDynamicValue = isDynamicDate(value);\n    const isDateTime = includes(type, \"datetime\");\n\n    const additionalAttributes = {};\n\n    let DateComponent = DateInput;\n    if (isDateTime) {\n      DateComponent = DateTimeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (moment.isMoment(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      const dynamicDate = value;\n      additionalAttributes.placeholder = dynamicDate && dynamicDate.name;\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div className={classNames(\"date-parameter\", className)}>\n        <DateComponent\n          {...dateOptions}\n          ref={this.dateComponentRef}\n          className={classNames(\"redash-datepicker\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getDynamicDateFromString } from \"@/services/parameters/DateParameter\";\nimport DynamicDatePicker from \"@/components/dynamic-parameters/DynamicDatePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"Today/Now\",\n    value: getDynamicDateFromString(\"d_now\"),\n    label: () =>\n      getDynamicDateFromString(\"d_now\")\n        .value()\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateFromString(\"d_yesterday\")\n        .value()\n        .format(\"MMM D\"),\n  },\n];\n\nfunction DateParameter(props) {\n  return (\n    <DynamicDatePicker\n      dynamicButtonOptions={{ options: DYNAMIC_DATE_OPTIONS }}\n      {...props}\n      dateOptions={{ \"aria-label\": \"Parameter date value\" }}\n    />\n  );\n}\n\nDateParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateParameter;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateRangeInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <RangePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateRangeInput;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateTimeRangeInput = React.forwardRef(\n  ({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n    const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n    const additionalAttributes = {};\n    if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n      additionalAttributes.defaultValue = defaultValue;\n    }\n    if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n      additionalAttributes.value = value;\n    }\n    return (\n      <RangePicker\n        ref={ref}\n        className={className}\n        showTime\n        {...additionalAttributes}\n        format={format}\n        onChange={onSelect}\n        {...props}\n      />\n    );\n  }\n);\n\nDateTimeRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeRangeInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes, isArray, isObject } from \"lodash\";\nimport { isDynamicDateRange } from \"@/services/parameters/DateRangeParameter\";\nimport DateRangeInput from \"@/components/DateRangeInput\";\nimport DateTimeRangeInput from \"@/components/DateTimeRangeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nfunction isValidDateRangeValue(value) {\n  return isArray(value) && value.length === 2 && moment.isMoment(value[0]) && moment.isMoment(value[1]);\n}\n\nclass DynamicDateRangePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.oneOf([\"date-range\", \"datetime-range\", \"datetime-range-with-seconds\"]).isRequired,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateRangeOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"date-range\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateRangeComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (isObject(parameterValue) && parameterValue.start && parameterValue.end) {\n        onSelect([moment(parameterValue.start), moment(parameterValue.end)]);\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateRangeComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, onSelect, className, dynamicButtonOptions, dateRangeOptions, parameter, ...rest } = this.props;\n    const isDateTimeRange = includes(type, \"datetime-range\");\n    const hasDynamicValue = isDynamicDateRange(value);\n\n    const additionalAttributes = {};\n\n    let DateRangeComponent = DateRangeInput;\n    if (isDateTimeRange) {\n      DateRangeComponent = DateTimeRangeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (isValidDateRangeValue(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      additionalAttributes.placeholder = [value && value.name];\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div {...rest} className={classNames(\"date-range-parameter\", className)}>\n        <DateRangeComponent\n          {...dateRangeOptions}\n          ref={this.dateRangeComponentRef}\n          className={classNames(\"redash-datepicker date-range-input\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDateRangePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { includes } from \"lodash\";\nimport { getDynamicDateRangeFromString } from \"@/services/parameters/DateRangeParameter\";\nimport DynamicDateRangePicker from \"@/components/dynamic-parameters/DynamicDateRangePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"This week\",\n    value: getDynamicDateRangeFromString(\"d_this_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"This month\",\n    value: getDynamicDateRangeFromString(\"d_this_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"This year\",\n    value: getDynamicDateRangeFromString(\"d_this_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last week\",\n    value: getDynamicDateRangeFromString(\"d_last_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Last month\",\n    value: getDynamicDateRangeFromString(\"d_last_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"Last year\",\n    value: getDynamicDateRangeFromString(\"d_last_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last 7 days\",\n    value: getDynamicDateRangeFromString(\"d_last_7_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_7_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 14 days\",\n    value: getDynamicDateRangeFromString(\"d_last_14_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_14_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 30 days\",\n    value: getDynamicDateRangeFromString(\"d_last_30_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_30_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 60 days\",\n    value: getDynamicDateRangeFromString(\"d_last_60_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_60_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 90 days\",\n    value: getDynamicDateRangeFromString(\"d_last_90_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_90_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 12 months\",\n    value: getDynamicDateRangeFromString(\"d_last_12_months\"),\n    label: null,\n  },\n];\n\nconst DYNAMIC_DATETIME_OPTIONS = [\n  {\n    name: \"Today\",\n    value: getDynamicDateRangeFromString(\"d_today\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_today\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateRangeFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_yesterday\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  ...DYNAMIC_DATE_OPTIONS,\n];\n\nfunction DateRangeParameter(props) {\n  const options = includes(props.type, \"datetime-range\") ? DYNAMIC_DATETIME_OPTIONS : DYNAMIC_DATE_OPTIONS;\n  return <DynamicDateRangePicker {...props} dynamicButtonOptions={{ options }} />;\n}\n\nDateRangeParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateRangeParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateRangeParameter;\n","import { find, isArray, get, first, map, intersection, isEqual, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\n\nexport default class QueryBasedParameterInput extends React.Component {\n  static propTypes = {\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    mode: PropTypes.oneOf([\"default\", \"multiple\"]),\n    queryId: PropTypes.number,\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: null,\n    mode: \"default\",\n    parameter: null,\n    queryId: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      value: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this._loadOptions(this.props.queryId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.queryId !== prevProps.queryId) {\n      this._loadOptions(this.props.queryId);\n    }\n    if (this.props.value !== prevProps.value) {\n      this.setValue(this.props.value);\n    }\n  }\n\n  setValue(value) {\n    const { options } = this.state;\n    if (this.props.mode === \"multiple\") {\n      value = isArray(value) ? value : [value];\n      const optionValues = map(options, option => option.value);\n      const validValues = intersection(value, optionValues);\n      this.setState({ value: validValues });\n      return validValues;\n    }\n    const found = find(options, option => option.value === this.props.value) !== undefined;\n    value = found ? value : get(first(options), \"value\");\n    this.setState({ value });\n    return value;\n  }\n\n  async _loadOptions(queryId) {\n    if (queryId && queryId !== this.state.queryId) {\n      this.setState({ loading: true });\n      const options = await this.props.parameter.loadDropdownValues();\n\n      // stale queryId check\n      if (this.props.queryId === queryId) {\n        this.setState({ options, loading: false }, () => {\n          const updatedValue = this.setValue(this.props.value);\n          if (!isEqual(updatedValue, this.props.value)) {\n            this.props.onSelect(updatedValue);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { className, mode, onSelect, queryId, value, ...otherProps } = this.props;\n    const { loading, options } = this.state;\n    return (\n      <span>\n        <SelectWithVirtualScroll\n          className={className}\n          disabled={loading}\n          loading={loading}\n          mode={mode}\n          value={this.state.value}\n          onChange={onSelect}\n          options={map(options, ({ value, name }) => ({ label: String(name), value }))}\n          showSearch\n          showArrow\n          notFoundContent={isEmpty(options) ? \"No options available\" : null}\n          {...otherProps}\n        />\n      </span>\n    );\n  }\n}\n","import { isEqual, isEmpty, map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\nimport Input from \"antd/lib/input\";\nimport InputNumber from \"antd/lib/input-number\";\nimport DateParameter from \"@/components/dynamic-parameters/DateParameter\";\nimport DateRangeParameter from \"@/components/dynamic-parameters/DateRangeParameter\";\nimport QueryBasedParameterInput from \"./QueryBasedParameterInput\";\n\nimport \"./ParameterValueInput.less\";\n\nconst multipleValuesProps = {\n  maxTagCount: 3,\n  maxTagTextLength: 10,\n  maxTagPlaceholder: num => `+${num.length} more`,\n};\n\nclass ParameterValueInput extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    enumOptions: PropTypes.string,\n    queryId: PropTypes.number,\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: \"text\",\n    value: null,\n    enumOptions: \"\",\n    queryId: null,\n    parameter: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.parameter.hasPendingValue ? props.parameter.pendingValue : props.value,\n      isDirty: props.parameter.hasPendingValue,\n    };\n  }\n\n  componentDidUpdate = prevProps => {\n    const { value, parameter } = this.props;\n    // if value prop updated, reset dirty state\n    if (prevProps.value !== value || prevProps.parameter !== parameter) {\n      this.setState({\n        value: parameter.hasPendingValue ? parameter.pendingValue : value,\n        isDirty: parameter.hasPendingValue,\n      });\n    }\n  };\n\n  onSelect = value => {\n    const isDirty = !isEqual(value, this.props.value);\n    this.setState({ value, isDirty });\n    this.props.onSelect(value, isDirty);\n  };\n\n  renderDateParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderDateRangeParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateRangeParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderEnumInput() {\n    const { enumOptions, parameter } = this.props;\n    const { value } = this.state;\n    const enumOptionsArray = enumOptions.split(\"\\n\").filter(v => v !== \"\");\n    // Antd Select doesn't handle null in multiple mode\n    const normalize = val => (parameter.multiValuesOptions && val === null ? [] : val);\n\n    return (\n      <SelectWithVirtualScroll\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        value={normalize(value)}\n        onChange={this.onSelect}\n        options={map(enumOptionsArray, opt => ({ label: String(opt), value: opt }))}\n        showSearch\n        showArrow\n        notFoundContent={isEmpty(enumOptionsArray) ? \"No options available\" : null}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderQueryBasedInput() {\n    const { queryId, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <QueryBasedParameterInput\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        parameter={parameter}\n        value={value}\n        queryId={queryId}\n        onSelect={this.onSelect}\n        style={{ minWidth: 60 }}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderNumberInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    const normalize = val => (isNaN(val) ? undefined : val);\n\n    return (\n      <InputNumber\n        className={className}\n        value={normalize(value)}\n        aria-label=\"Parameter number value\"\n        onChange={val => this.onSelect(normalize(val))}\n      />\n    );\n  }\n\n  renderTextInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Input\n        className={className}\n        value={value}\n        aria-label=\"Parameter text value\"\n        data-test=\"TextParamInput\"\n        onChange={e => this.onSelect(e.target.value)}\n      />\n    );\n  }\n\n  renderInput() {\n    const { type } = this.props;\n    switch (type) {\n      case \"datetime-with-seconds\":\n      case \"datetime-local\":\n      case \"date\":\n        return this.renderDateParameter();\n      case \"datetime-range-with-seconds\":\n      case \"datetime-range\":\n      case \"date-range\":\n        return this.renderDateRangeParameter();\n      case \"enum\":\n        return this.renderEnumInput();\n      case \"query\":\n        return this.renderQueryBasedInput();\n      case \"number\":\n        return this.renderNumberInput();\n      default:\n        return this.renderTextInput();\n    }\n  }\n\n  render() {\n    const { isDirty } = this.state;\n\n    return (\n      <div className=\"parameter-input\" data-dirty={isDirty || null} data-test=\"ParameterValueInput\">\n        {this.renderInput()}\n      </div>\n    );\n  }\n}\n\nexport default ParameterValueInput;\n","import { includes, words, capitalize, clone, isNull } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Divider from \"antd/lib/divider\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst { Option } = Select;\nconst formItemProps = { labelCol: { span: 6 }, wrapperCol: { span: 16 } };\n\nfunction getDefaultTitle(text) {\n  return capitalize(words(text).join(\" \")); // humanize\n}\n\nfunction isTypeDateRange(type) {\n  return /-range/.test(type);\n}\n\nfunction joinExampleList(multiValuesOptions) {\n  const { prefix, suffix } = multiValuesOptions;\n  return [\"value1\", \"value2\", \"value3\"].map(value => `${prefix}${value}${suffix}`).join(\",\");\n}\n\nfunction NameInput({ name, type, onChange, existingNames, setValidation }) {\n  let helpText = \"\";\n  let validateStatus = \"\";\n\n  if (!name) {\n    helpText = \"Choose a keyword for this parameter\";\n    setValidation(false);\n  } else if (includes(existingNames, name)) {\n    helpText = \"Parameter with this name already exists\";\n    setValidation(false);\n    validateStatus = \"error\";\n  } else {\n    if (isTypeDateRange(type)) {\n      helpText = (\n        <React.Fragment>\n          Appears in query as{\" \"}\n          <code style={{ display: \"inline-block\", color: \"inherit\" }}>{`{{${name}.start}} {{${name}.end}}`}</code>\n        </React.Fragment>\n      );\n    }\n    setValidation(true);\n  }\n\n  return (\n    <Form.Item required label=\"Keyword\" help={helpText} validateStatus={validateStatus} {...formItemProps}>\n      <Input onChange={e => onChange(e.target.value)} autoFocus />\n    </Form.Item>\n  );\n}\n\nNameInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  existingNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setValidation: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nfunction EditParameterSettingsDialog(props) {\n  const [param, setParam] = useState(clone(props.parameter));\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [initialQuery, setInitialQuery] = useState();\n\n  const isNew = !props.parameter.name;\n\n  // fetch query by id\n  useEffect(() => {\n    const queryId = props.parameter.queryId;\n    if (queryId) {\n      Query.get({ id: queryId }).then(setInitialQuery);\n    }\n  }, [props.parameter.queryId]);\n\n  function isFulfilled() {\n    // name\n    if (!isNameValid) {\n      return false;\n    }\n\n    // title\n    if (param.title === \"\") {\n      return false;\n    }\n\n    // query\n    if (param.type === \"query\" && !param.queryId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function onConfirm() {\n    // update title to default\n    if (!param.title) {\n      // forced to do this cause param won't update in time for save\n      param.title = getDefaultTitle(param.name);\n      setParam(param);\n    }\n\n    props.dialog.close(param);\n  }\n\n  const paramFormId = useUniqueId(\"paramForm\");\n\n  return (\n    <Modal\n      {...props.dialog.props}\n      title={isNew ? \"Add Parameter\" : param.name}\n      width={600}\n      footer={[\n        <Button key=\"cancel\" onClick={props.dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          htmlType=\"submit\"\n          disabled={!isFulfilled()}\n          type=\"primary\"\n          form={paramFormId}\n          data-test=\"SaveParameterSettings\">\n          {isNew ? \"Add Parameter\" : \"OK\"}\n        </Button>,\n      ]}>\n      <Form layout=\"horizontal\" onFinish={onConfirm} id={paramFormId}>\n        {isNew && (\n          <NameInput\n            name={param.name}\n            onChange={name => setParam({ ...param, name })}\n            setValidation={setIsNameValid}\n            existingNames={props.existingParams}\n            type={param.type}\n          />\n        )}\n        <Form.Item required label=\"Title\" {...formItemProps}>\n          <Input\n            value={isNull(param.title) ? getDefaultTitle(param.name) : param.title}\n            onChange={e => setParam({ ...param, title: e.target.value })}\n            data-test=\"ParameterTitleInput\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Type\" {...formItemProps}>\n          <Select value={param.type} onChange={type => setParam({ ...param, type })} data-test=\"ParameterTypeSelect\">\n            <Option value=\"text\" data-test=\"TextParameterTypeOption\">\n              Text\n            </Option>\n            <Option value=\"number\" data-test=\"NumberParameterTypeOption\">\n              Number\n            </Option>\n            <Option value=\"enum\">Dropdown List</Option>\n            <Option value=\"query\">Query Based Dropdown List</Option>\n            <Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date\" data-test=\"DateParameterTypeOption\">\n              Date\n            </Option>\n            <Option value=\"datetime-local\" data-test=\"DateTimeParameterTypeOption\">\n              Date and Time\n            </Option>\n            <Option value=\"datetime-with-seconds\">Date and Time (with seconds)</Option>\n            <Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date-range\" data-test=\"DateRangeParameterTypeOption\">\n              Date Range\n            </Option>\n            <Option value=\"datetime-range\">Date and Time Range</Option>\n            <Option value=\"datetime-range-with-seconds\">Date and Time Range (with seconds)</Option>\n          </Select>\n        </Form.Item>\n        {param.type === \"enum\" && (\n          <Form.Item label=\"Values\" help=\"Dropdown list values (newline delimited)\" {...formItemProps}>\n            <Input.TextArea\n              rows={3}\n              value={param.enumOptions}\n              onChange={e => setParam({ ...param, enumOptions: e.target.value })}\n            />\n          </Form.Item>\n        )}\n        {param.type === \"query\" && (\n          <Form.Item label=\"Query\" help=\"Select query to load dropdown values from\" {...formItemProps}>\n            <QuerySelector\n              selectedQuery={initialQuery}\n              onChange={q => setParam({ ...param, queryId: q && q.id })}\n              type=\"select\"\n            />\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && (\n          <Form.Item className=\"m-b-0\" label=\" \" colon={false} {...formItemProps}>\n            <Checkbox\n              defaultChecked={!!param.multiValuesOptions}\n              onChange={e =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: e.target.checked\n                    ? {\n                        prefix: \"\",\n                        suffix: \"\",\n                        separator: \",\",\n                      }\n                    : null,\n                })\n              }\n              data-test=\"AllowMultipleValuesCheckbox\">\n              Allow multiple values\n            </Checkbox>\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && param.multiValuesOptions && (\n          <Form.Item\n            label=\"Quotation\"\n            help={\n              <React.Fragment>\n                Placed in query as: <code>{joinExampleList(param.multiValuesOptions)}</code>\n              </React.Fragment>\n            }\n            {...formItemProps}>\n            <Select\n              value={param.multiValuesOptions.prefix}\n              onChange={quoteOption =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: {\n                    ...param.multiValuesOptions,\n                    prefix: quoteOption,\n                    suffix: quoteOption,\n                  },\n                })\n              }\n              data-test=\"QuotationSelect\">\n              <Option value=\"\">None (default)</Option>\n              <Option value=\"'\">Single Quotation Mark</Option>\n              <Option value={'\"'} data-test=\"DoubleQuotationMarkOption\">\n                Double Quotation Mark\n              </Option>\n            </Select>\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n}\n\nEditParameterSettingsDialog.propTypes = {\n  parameter: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  dialog: DialogPropType.isRequired,\n  existingParams: PropTypes.arrayOf(PropTypes.string),\n};\n\nEditParameterSettingsDialog.defaultProps = {\n  existingParams: [],\n};\n\nexport default wrapDialog(EditParameterSettingsDialog);\n","import { size, filter, forEach, extend } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SortableContainer, SortableElement, DragHandle } from \"@redash/viz/lib/components/sortable\";\nimport location from \"@/services/location\";\nimport { Parameter, createParameter } from \"@/services/parameters\";\nimport ParameterApplyButton from \"@/components/ParameterApplyButton\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EditParameterSettingsDialog from \"./EditParameterSettingsDialog\";\nimport { toHuman } from \"@/lib/utils\";\n\nimport \"./Parameters.less\";\n\nfunction updateUrl(parameters) {\n  const params = extend({}, location.search);\n  parameters.forEach(param => {\n    extend(params, param.toUrlParams());\n  });\n  location.setSearch(params, true);\n}\n\nexport default class Parameters extends React.Component {\n  static propTypes = {\n    parameters: PropTypes.arrayOf(PropTypes.instanceOf(Parameter)),\n    editable: PropTypes.bool,\n    sortable: PropTypes.bool,\n    disableUrlUpdate: PropTypes.bool,\n    onValuesChange: PropTypes.func,\n    onPendingValuesChange: PropTypes.func,\n    onParametersEdit: PropTypes.func,\n    appendSortableToParent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    parameters: [],\n    editable: false,\n    sortable: false,\n    disableUrlUpdate: false,\n    onValuesChange: () => {},\n    onPendingValuesChange: () => {},\n    onParametersEdit: () => {},\n    appendSortableToParent: true,\n  };\n\n  constructor(props) {\n    super(props);\n    const { parameters } = props;\n    this.state = { parameters };\n    if (!props.disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n  }\n\n  componentDidUpdate = prevProps => {\n    const { parameters, disableUrlUpdate } = this.props;\n    const parametersChanged = prevProps.parameters !== parameters;\n    const disableUrlUpdateChanged = prevProps.disableUrlUpdate !== disableUrlUpdate;\n    if (parametersChanged) {\n      this.setState({ parameters });\n    }\n    if ((parametersChanged || disableUrlUpdateChanged) && !disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n  };\n\n  handleKeyDown = e => {\n    // Cmd/Ctrl/Alt + Enter\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey || e.altKey)) {\n      e.stopPropagation();\n      this.applyChanges();\n    }\n  };\n\n  setPendingValue = (param, value, isDirty) => {\n    const { onPendingValuesChange } = this.props;\n    this.setState(({ parameters }) => {\n      if (isDirty) {\n        param.setPendingValue(value);\n      } else {\n        param.clearPendingValue();\n      }\n      onPendingValuesChange();\n      return { parameters };\n    });\n  };\n\n  moveParameter = ({ oldIndex, newIndex }) => {\n    const { onParametersEdit } = this.props;\n    if (oldIndex !== newIndex) {\n      this.setState(({ parameters }) => {\n        parameters.splice(newIndex, 0, parameters.splice(oldIndex, 1)[0]);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    }\n  };\n\n  applyChanges = () => {\n    const { onValuesChange, disableUrlUpdate } = this.props;\n    this.setState(({ parameters }) => {\n      const parametersWithPendingValues = parameters.filter(p => p.hasPendingValue);\n      forEach(parameters, p => p.applyPendingValue());\n      if (!disableUrlUpdate) {\n        updateUrl(parameters);\n      }\n      onValuesChange(parametersWithPendingValues);\n      return { parameters };\n    });\n  };\n\n  showParameterSettings = (parameter, index) => {\n    const { onParametersEdit } = this.props;\n    EditParameterSettingsDialog.showModal({ parameter }).onClose(updated => {\n      this.setState(({ parameters }) => {\n        const updatedParameter = extend(parameter, updated);\n        parameters[index] = createParameter(updatedParameter, updatedParameter.parentQueryId);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    });\n  };\n\n  renderParameter(param, index) {\n    const { editable } = this.props;\n    return (\n      <div key={param.name} className=\"di-block\" data-test={`ParameterName-${param.name}`}>\n        <div className=\"parameter-heading\">\n          <label>{param.title || toHuman(param.name)}</label>\n          {editable && (\n            <PlainButton\n              className=\"btn btn-default btn-xs m-l-5\"\n              aria-label=\"Edit\"\n              onClick={() => this.showParameterSettings(param, index)}\n              data-test={`ParameterSettings-${param.name}`}\n              type=\"button\">\n              <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n            </PlainButton>\n          )}\n        </div>\n        <ParameterValueInput\n          type={param.type}\n          value={param.normalizedValue}\n          parameter={param}\n          enumOptions={param.enumOptions}\n          queryId={param.queryId}\n          onSelect={(value, isDirty) => this.setPendingValue(param, value, isDirty)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { parameters } = this.state;\n    const { sortable, appendSortableToParent } = this.props;\n    const dirtyParamCount = size(filter(parameters, \"hasPendingValue\"));\n\n    return (\n      <SortableContainer\n        disabled={!sortable}\n        axis=\"xy\"\n        useDragHandle\n        lockToContainerEdges\n        helperClass=\"parameter-dragged\"\n        helperContainer={containerEl => (appendSortableToParent ? containerEl : document.body)}\n        updateBeforeSortStart={this.onBeforeSortStart}\n        onSortEnd={this.moveParameter}\n        containerProps={{\n          className: \"parameter-container\",\n          onKeyDown: dirtyParamCount ? this.handleKeyDown : null,\n        }}>\n        {parameters.map((param, index) => (\n          <SortableElement key={param.name} index={index}>\n            <div\n              className=\"parameter-block\"\n              data-editable={sortable || null}\n              data-test={`ParameterBlock-${param.name}`}>\n              {sortable && <DragHandle data-test={`DragHandle-${param.name}`} />}\n              {this.renderParameter(param, index)}\n            </div>\n          </SortableElement>\n        ))}\n        <ParameterApplyButton onClick={this.applyChanges} paramCount={dirtyParamCount} />\n      </SortableContainer>\n    );\n  }\n}\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\n\nexport default function Timer({ from }) {\n  const startTime = useMemo(() => moment(from).valueOf(), [from]);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    function update() {\n      const diff = moment.now() - startTime;\n      const format = diff > 1000 * 60 * 60 ? \"HH:mm:ss\" : \"mm:ss\"; // no HH under an hour\n      setValue(moment.utc(diff).format(format));\n    }\n    update();\n\n    const timer = setInterval(update, 1000);\n    return () => clearInterval(timer);\n  }, [startTime]);\n\n  return <span className=\"rd-timer\">{value}</span>;\n}\n\nTimer.propTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n};\n\nTimer.defaultProps = {\n  from: null,\n};\n","import React from \"react\";\nimport { VisualizationType, registeredVisualizations } from \"@redash/viz/lib\";\n\nimport \"./VisualizationName.less\";\n\nfunction VisualizationName({ visualization }) {\n  const config = registeredVisualizations[visualization.type];\n  return (\n    <span className=\"visualization-name\">\n      {config && visualization.name !== config.name ? visualization.name : null}\n    </span>\n  );\n}\n\nVisualizationName.propTypes = {\n  visualization: VisualizationType.isRequired,\n};\n\nexport default VisualizationName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport Link from \"@/components/Link\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nimport \"./QueryLink.less\";\n\nfunction QueryLink({ query, visualization, readOnly }) {\n  const getUrl = () => {\n    let hash = null;\n    if (visualization) {\n      if (visualization.type === \"TABLE\") {\n        // link to hard-coded table tab instead of the (hidden) visualization tab\n        hash = \"table\";\n      } else {\n        hash = visualization.id;\n      }\n    }\n\n    return query.getUrl(false, hash);\n  };\n\n  const QueryLinkWrapper = props => (readOnly ? <span {...props} /> : <Link href={getUrl()} {...props} />);\n\n  return (\n    <QueryLinkWrapper className=\"query-link\">\n      <VisualizationName visualization={visualization} /> <span>{query.name}</span>\n    </QueryLinkWrapper>\n  );\n}\n\nQueryLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  readOnly: PropTypes.bool,\n};\n\nQueryLink.defaultProps = {\n  visualization: null,\n  readOnly: false,\n};\n\nexport default QueryLink;\n","import { isArray, indexOf, get, map, includes, every, some, toNumber } from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport { formatColumnValue } from \"@/lib/utils\";\n\nconst ALL_VALUES = \"###Redash::Filters::SelectAll###\";\nconst NONE_VALUES = \"###Redash::Filters::Clear###\";\n\nexport const FilterType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  friendlyName: PropTypes.string.isRequired,\n  multiple: PropTypes.bool,\n  current: PropTypes.oneOfType([PropTypes.any, PropTypes.arrayOf(PropTypes.any)]),\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n});\n\nexport const FiltersType = PropTypes.arrayOf(FilterType);\n\nfunction createFilterChangeHandler(filters, onChange) {\n  return (filter, values) => {\n    if (isArray(values)) {\n      values = map(values, value => filter.values[toNumber(value.key)] || value.key);\n    } else {\n      const _values = filter.values[toNumber(values.key)];\n      values = _values !== undefined ? _values : values.key;\n    }\n\n    if (filter.multiple && includes(values, ALL_VALUES)) {\n      values = [...filter.values];\n    }\n    if (filter.multiple && includes(values, NONE_VALUES)) {\n      values = [];\n    }\n    filters = map(filters, f => (f.name === filter.name ? { ...filter, current: values } : f));\n    onChange(filters);\n  };\n}\n\nexport function filterData(rows, filters = []) {\n  if (!isArray(rows)) {\n    return [];\n  }\n\n  let result = rows;\n\n  if (isArray(filters) && filters.length > 0) {\n    // \"every\" field's value should match \"some\" of corresponding filter's values\n    result = result.filter(row =>\n      every(filters, filter => {\n        const rowValue = row[filter.name];\n        const filterValues = isArray(filter.current) ? filter.current : [filter.current];\n        return some(filterValues, filterValue => {\n          if (moment.isMoment(rowValue)) {\n            return rowValue.isSame(filterValue);\n          }\n          // We compare with either the value or the String representation of the value,\n          // because Select2 casts true/false to \"true\"/\"false\".\n          return filterValue === rowValue || String(rowValue) === filterValue;\n        });\n      })\n    );\n  }\n\n  return result;\n}\n\nfunction Filters({ filters, onChange }) {\n  if (filters.length === 0) {\n    return null;\n  }\n\n  onChange = createFilterChangeHandler(filters, onChange);\n\n  return (\n    <div className=\"filters-wrapper\" data-test=\"Filters\">\n      <div className=\"container bg-white\">\n        <div className=\"row\">\n          {map(filters, filter => {\n            const options = map(filter.values, (value, index) => (\n              <Select.Option key={index}>{formatColumnValue(value, get(filter, \"column.type\"))}</Select.Option>\n            ));\n\n            return (\n              <div\n                key={filter.name}\n                className=\"col-sm-6 p-l-0 filter-container\"\n                data-test={`FilterName-${filter.name}`}>\n                <label>{filter.friendlyName}</label>\n                {options.length === 0 && <Select className=\"w-100\" disabled value=\"No values\" />}\n                {options.length > 0 && (\n                  <Select\n                    labelInValue\n                    className=\"w-100\"\n                    mode={filter.multiple ? \"multiple\" : \"default\"}\n                    value={\n                      isArray(filter.current)\n                        ? map(filter.current, value => ({\n                            key: `${indexOf(filter.values, value)}`,\n                            label: formatColumnValue(value),\n                          }))\n                        : { key: `${indexOf(filter.values, filter.current)}`, label: formatColumnValue(filter.current) }\n                    }\n                    allowClear={filter.multiple}\n                    optionFilterProp=\"children\"\n                    showSearch\n                    maxTagCount={3}\n                    maxTagTextLength={10}\n                    maxTagPlaceholder={num => `+${num.length} more`}\n                    onChange={values => onChange(filter, values)}>\n                    {!filter.multiple && options}\n                    {filter.multiple && [\n                      <Select.Option key={NONE_VALUES} data-test=\"ClearOption\">\n                        <i className=\"fa fa-square-o m-r-5\" aria-hidden=\"true\" />\n                        Clear\n                      </Select.Option>,\n                      <Select.Option key={ALL_VALUES} data-test=\"SelectAllOption\">\n                        <i className=\"fa fa-check-square-o m-r-5\" aria-hidden=\"true\" />\n                        Select All\n                      </Select.Option>,\n                      <Select.OptGroup key=\"Values\" title=\"Values\">\n                        {options}\n                      </Select.OptGroup>,\n                    ]}\n                  </Select>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  filters: FiltersType.isRequired,\n  onChange: PropTypes.func, // (name, value) => void\n};\n\nFilters.defaultProps = {\n  onChange: () => {},\n};\n\nexport default Filters;\n","import { useMemo } from \"react\";\nimport { get, invoke } from \"lodash\";\n\nfunction getQueryResultData(queryResult, queryResultStatus = null) {\n  return {\n    status: queryResultStatus || invoke(queryResult, \"getStatus\") || null,\n    columns: invoke(queryResult, \"getColumns\") || [],\n    rows: invoke(queryResult, \"getData\") || [],\n    filters: invoke(queryResult, \"getFilters\") || [],\n    updatedAt: invoke(queryResult, \"getUpdatedAt\") || null,\n    retrievedAt: get(queryResult, \"query_result.retrieved_at\", null),\n    truncated: invoke(queryResult, \"getTruncated\") || null,\n    log: invoke(queryResult, \"getLog\") || [],\n    error: invoke(queryResult, \"getError\") || null,\n    runtime: invoke(queryResult, \"getRuntime\") || null,\n    metadata: get(queryResult, \"query_result.data.metadata\", {}),\n  };\n}\n\nexport default function useQueryResultData(queryResult) {\n  // make sure it re-executes when queryResult status changes\n  const queryResultStatus = invoke(queryResult, \"getStatus\");\n  return useMemo(() => getQueryResultData(queryResult, queryResultStatus), [queryResult, queryResultStatus]);\n}\n","import { isFunction, noop } from \"lodash\";\nimport { useRef, useCallback } from \"react\";\n\n// This hook wraps a potentially changeable function object and always returns the same\n// function so it's safe to use it with other hooks: wrapper function stays the same,\n// but will always call a latest wrapped function.\n// A quick note regarding `react-hooks/exhaustive-deps`: since wrapper function doesn't\n// change, it's safe to use it as a dependency, it will never trigger other hooks.\nexport default function useImmutableCallback(callback) {\n  const callbackRef = useRef();\n  callbackRef.current = isFunction(callback) ? callback : noop;\n\n  return useCallback((...args) => callbackRef.current(...args), []);\n}\n","import React from \"react\";\nimport { pick } from \"lodash\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport Link from \"@/components/Link\";\nimport { Renderer as VisRenderer, Editor as VisEditor, updateVisualizationsSettings } from \"@redash/viz/lib\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport countriesDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/countries.geo.json\";\nimport usaDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/usa-albers.geo.json\";\nimport subdivJapanDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/japan.prefectures.geo.json\";\n\nfunction wrapComponentWithSettings(WrappedComponent) {\n  return function VisualizationComponent(props) {\n    updateVisualizationsSettings({\n      HelpTriggerComponent: HelpTrigger,\n      LinkComponent: Link,\n      choroplethAvailableMaps: {\n        countries: {\n          name: \"Countries\",\n          url: countriesDataUrl,\n          fieldNames: {\n            name: \"Short name\",\n            name_long: \"Full name\",\n            abbrev: \"Abbreviated name\",\n            iso_a2: \"ISO code (2 letters)\",\n            iso_a3: \"ISO code (3 letters)\",\n            iso_n3: \"ISO code (3 digits)\",\n          },\n        },\n        usa: {\n          name: \"USA\",\n          url: usaDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            ns_code: \"National Standard ANSI Code (8-character)\",\n            geoid: \"Geographic ID\",\n            usps_abbrev: \"USPS Abbreviation\",\n            fips_code: \"FIPS Code (2-character)\",\n          },\n        },\n        subdiv_japan: {\n          name: \"Japan/Prefectures\",\n          url: subdivJapanDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            name_alt: \"Name (alternative)\",\n            name_local: \"Name (local)\",\n            iso_3166_2: \"ISO-3166-2\",\n            postal: \"Postal Code\",\n            type: \"Type\",\n            type_en: \"Type (EN)\",\n            region: \"Region\",\n            region_code: \"Region Code\",\n          },\n        },\n      },\n      ...pick(clientConfig, [\n        \"dateFormat\",\n        \"dateTimeFormat\",\n        \"integerFormat\",\n        \"floatFormat\",\n        \"booleanValues\",\n        \"tableCellMaxJSONSize\",\n        \"allowCustomJSVisualizations\",\n        \"hidePlotlyModeBar\",\n      ]),\n    });\n\n    return <WrappedComponent {...props} />;\n  };\n}\n\nexport const Renderer = wrapComponentWithSettings(VisRenderer);\nexport const Editor = wrapComponentWithSettings(VisEditor);\n","import { isEqual, map, find, fromPairs } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport Filters, { FiltersType, filterData } from \"@/components/Filters\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport { Renderer } from \"@/components/visualizations/visualizationComponents\";\n\nfunction combineFilters(localFilters, globalFilters) {\n  // tiny optimization - to avoid unnecessary updates\n  if (localFilters.length === 0 || globalFilters.length === 0) {\n    return localFilters;\n  }\n\n  return map(localFilters, localFilter => {\n    const globalFilter = find(globalFilters, f => f.name === localFilter.name);\n    if (globalFilter) {\n      return {\n        ...localFilter,\n        current: globalFilter.current,\n      };\n    }\n    return localFilter;\n  });\n}\n\nfunction areFiltersEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  a = fromPairs(map(a, item => [item.name, item]));\n  b = fromPairs(map(b, item => [item.name, item]));\n\n  return isEqual(a, b);\n}\n\nexport default function VisualizationRenderer(props) {\n  const data = useQueryResultData(props.queryResult);\n  const [filters, setFilters] = useState(() => combineFilters(data.filters, props.filters)); // lazy initialization\n  const filtersRef = useRef();\n  filtersRef.current = filters;\n\n  const handleFiltersChange = useImmutableCallback(newFilters => {\n    if (!areFiltersEqual(newFilters, filters)) {\n      setFilters(newFilters);\n      props.onFiltersChange(newFilters);\n    }\n  });\n\n  // Reset local filters when query results updated\n  useEffect(() => {\n    handleFiltersChange(combineFilters(data.filters, props.filters));\n  }, [data.filters, props.filters, handleFiltersChange]);\n\n  // Update local filters when global filters changed.\n  // For correct behavior need to watch only `props.filters` here,\n  // therefore using ref to access current local filters\n  useEffect(() => {\n    handleFiltersChange(combineFilters(filtersRef.current, props.filters));\n  }, [props.filters, handleFiltersChange]);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const { showFilters, visualization } = props;\n\n  let options = { ...visualization.options };\n\n  // define pagination size based on context for Table visualization\n  if (visualization.type === \"TABLE\") {\n    options.paginationSize = props.context === \"widget\" ? \"small\" : \"default\";\n  }\n\n  return (\n    <Renderer\n      key={`visualization${visualization.id}`}\n      type={visualization.type}\n      options={options}\n      data={filteredData}\n      visualizationName={visualization.name}\n      addonBefore={showFilters && <Filters filters={filters} onChange={handleFiltersChange} />}\n    />\n  );\n}\n\nVisualizationRenderer.propTypes = {\n  visualization: VisualizationType.isRequired,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  showFilters: PropTypes.bool,\n  filters: FiltersType,\n  onFiltersChange: PropTypes.func,\n  context: PropTypes.oneOf([\"query\", \"widget\"]).isRequired,\n};\n\nVisualizationRenderer.defaultProps = {\n  showFilters: true,\n  filters: [],\n  onFiltersChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { FiltersType } from \"@/components/Filters\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nfunction ExpandedWidgetDialog({ dialog, widget, filters }) {\n  return (\n    <Modal\n      {...dialog.props}\n      title={\n        <>\n          <VisualizationName visualization={widget.visualization} /> <span>{widget.getQuery().name}</span>\n        </>\n      }\n      width=\"95%\"\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <VisualizationRenderer\n        visualization={widget.visualization}\n        queryResult={widget.getQueryResult()}\n        filters={filters}\n        context=\"widget\"\n      />\n    </Modal>\n  );\n}\n\nExpandedWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  filters: FiltersType,\n};\n\nExpandedWidgetDialog.defaultProps = {\n  filters: [],\n};\n\nexport default wrapDialog(ExpandedWidgetDialog);\n","/* eslint-disable react/no-multi-comp */\n\nimport { isString, extend, each, has, map, includes, findIndex, find, fromPairs, clone, isEmpty } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Select from \"antd/lib/select\";\nimport Table from \"antd/lib/table\";\nimport Popover from \"antd/lib/popover\";\nimport Button from \"antd/lib/button\";\nimport Tag from \"antd/lib/tag\";\nimport Input from \"antd/lib/input\";\nimport Radio from \"antd/lib/radio\";\nimport Form from \"antd/lib/form\";\nimport Tooltip from \"@/components/Tooltip\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport { ParameterMappingType } from \"@/services/widget\";\nimport { Parameter, cloneParameter } from \"@/services/parameters\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nimport QuestionCircleFilledIcon from \"@ant-design/icons/QuestionCircleFilled\";\nimport EditOutlinedIcon from \"@ant-design/icons/EditOutlined\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport CheckOutlinedIcon from \"@ant-design/icons/CheckOutlined\";\n\nimport \"./ParameterMappingInput.less\";\n\nexport const MappingType = {\n  DashboardAddNew: \"dashboard-add-new\",\n  DashboardMapToExisting: \"dashboard-map-to-existing\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nexport function parameterMappingsToEditableMappings(mappings, parameters, existingParameterNames = []) {\n  return map(mappings, mapping => {\n    const result = extend({}, mapping);\n    const alreadyExists = includes(existingParameterNames, mapping.mapTo);\n    result.param = find(parameters, p => p.name === mapping.name);\n    switch (mapping.type) {\n      case ParameterMappingType.DashboardLevel:\n        result.type = alreadyExists ? MappingType.DashboardMapToExisting : MappingType.DashboardAddNew;\n        result.value = null;\n        break;\n      case ParameterMappingType.StaticValue:\n        result.type = MappingType.StaticValue;\n        result.param = cloneParameter(result.param);\n        result.param.setValue(result.value);\n        break;\n      case ParameterMappingType.WidgetLevel:\n        result.type = MappingType.WidgetLevel;\n        result.value = null;\n        break;\n      // no default\n    }\n    return result;\n  });\n}\n\nexport function editableMappingsToParameterMappings(mappings) {\n  return fromPairs(\n    map(\n      // convert to map\n      mappings,\n      mapping => {\n        const result = extend({}, mapping);\n        switch (mapping.type) {\n          case MappingType.DashboardAddNew:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.DashboardMapToExisting:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.StaticValue:\n            result.type = ParameterMappingType.StaticValue;\n            result.param = cloneParameter(mapping.param);\n            result.param.setValue(result.value);\n            result.value = result.param.value;\n            break;\n          case MappingType.WidgetLevel:\n            result.type = ParameterMappingType.WidgetLevel;\n            result.value = null;\n            break;\n          // no default\n        }\n        delete result.param;\n        return [result.name, result];\n      }\n    )\n  );\n}\n\nexport function synchronizeWidgetTitles(sourceMappings, widgets) {\n  const affectedWidgets = [];\n\n  each(sourceMappings, sourceMapping => {\n    if (sourceMapping.type === ParameterMappingType.DashboardLevel) {\n      each(widgets, widget => {\n        const widgetMappings = widget.options.parameterMappings;\n        each(widgetMappings, widgetMapping => {\n          // check if mapped to the same dashboard-level parameter\n          if (\n            widgetMapping.type === ParameterMappingType.DashboardLevel &&\n            widgetMapping.mapTo === sourceMapping.mapTo\n          ) {\n            // dirty check - update only when needed\n            if (widgetMapping.title !== sourceMapping.title) {\n              widgetMapping.title = sourceMapping.title;\n              affectedWidgets.push(widget);\n            }\n          }\n        });\n      });\n    }\n  });\n\n  return affectedWidgets;\n}\n\nexport class ParameterMappingInput extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func,\n    inputError: PropTypes.string,\n  };\n\n  static defaultProps = {\n    mapping: {},\n    existingParamNames: [],\n    onChange: () => {},\n    inputError: null,\n  };\n\n  formItemProps = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n    className: \"form-item\",\n  };\n\n  updateSourceType = type => {\n    let {\n      mapping: { mapTo },\n    } = this.props;\n    const { existingParamNames } = this.props;\n\n    // if mapped name doesn't already exists\n    // default to first select option\n    if (type === MappingType.DashboardMapToExisting && !includes(existingParamNames, mapTo)) {\n      mapTo = existingParamNames[0];\n    }\n\n    this.updateParamMapping({ type, mapTo });\n  };\n\n  updateParamMapping = update => {\n    const { onChange, mapping } = this.props;\n    const newMapping = extend({}, mapping, update);\n    if (newMapping.value !== mapping.value) {\n      newMapping.param = cloneParameter(newMapping.param);\n      newMapping.param.setValue(newMapping.value);\n    }\n    if (has(update, \"type\")) {\n      if (update.type === MappingType.StaticValue) {\n        newMapping.value = newMapping.param.value;\n      } else {\n        newMapping.value = null;\n      }\n    }\n    onChange(newMapping);\n  };\n\n  renderMappingTypeSelector() {\n    const noExisting = isEmpty(this.props.existingParamNames);\n    return (\n      <Radio.Group value={this.props.mapping.type} onChange={e => this.updateSourceType(e.target.value)}>\n        <Radio className=\"radio\" value={MappingType.DashboardAddNew} data-test=\"NewDashboardParameterOption\">\n          New dashboard parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.DashboardMapToExisting} disabled={noExisting}>\n          Existing dashboard parameter{\" \"}\n          {noExisting ? (\n            <Tooltip title=\"There are no dashboard parameters corresponding to this data type\">\n              <QuestionCircleFilledIcon />\n            </Tooltip>\n          ) : null}\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.WidgetLevel} data-test=\"WidgetParameterOption\">\n          Widget parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.StaticValue} data-test=\"StaticValueOption\">\n          Static value\n        </Radio>\n      </Radio.Group>\n    );\n  }\n\n  renderDashboardAddNew() {\n    const {\n      mapping: { mapTo },\n    } = this.props;\n    return (\n      <Input\n        value={mapTo}\n        aria-label=\"Parameter name (key)\"\n        onChange={e => this.updateParamMapping({ mapTo: e.target.value })}\n      />\n    );\n  }\n\n  renderDashboardMapToExisting() {\n    const { mapping, existingParamNames } = this.props;\n    const options = map(existingParamNames, paramName => ({ label: paramName, value: paramName }));\n\n    return <Select value={mapping.mapTo} onChange={mapTo => this.updateParamMapping({ mapTo })} options={options} />;\n  }\n\n  renderStaticValue() {\n    const { mapping } = this.props;\n    return (\n      <ParameterValueInput\n        type={mapping.param.type}\n        value={mapping.param.normalizedValue}\n        enumOptions={mapping.param.enumOptions}\n        queryId={mapping.param.queryId}\n        parameter={mapping.param}\n        onSelect={value => this.updateParamMapping({ value })}\n      />\n    );\n  }\n\n  renderInputBlock() {\n    const { mapping } = this.props;\n    switch (mapping.type) {\n      case MappingType.DashboardAddNew:\n        return [\"Key\", \"Enter a new parameter keyword\", this.renderDashboardAddNew()];\n      case MappingType.DashboardMapToExisting:\n        return [\"Key\", \"Select from a list of existing parameters\", this.renderDashboardMapToExisting()];\n      case MappingType.StaticValue:\n        return [\"Value\", null, this.renderStaticValue()];\n      default:\n        return [];\n    }\n  }\n\n  render() {\n    const { inputError } = this.props;\n    const [label, help, input] = this.renderInputBlock();\n\n    return (\n      <Form layout=\"horizontal\">\n        <Form.Item label=\"Source\" {...this.formItemProps}>\n          {this.renderMappingTypeSelector()}\n        </Form.Item>\n        <Form.Item\n          style={{ height: 60, visibility: input ? \"visible\" : \"hidden\" }}\n          label={label}\n          {...this.formItemProps}\n          validateStatus={inputError ? \"error\" : \"\"}\n          help={inputError || help} // empty space so line doesn't collapse\n        >\n          {input}\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass MappingEditor extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      mapping: clone(this.props.mapping),\n      inputError: null,\n    };\n  }\n\n  onVisibleChange = visible => {\n    if (visible) this.show();\n    else this.hide();\n  };\n\n  onChange = mapping => {\n    let inputError = null;\n\n    if (mapping.type === MappingType.DashboardAddNew) {\n      if (isEmpty(mapping.mapTo)) {\n        inputError = \"Keyword must have a value\";\n      } else if (includes(this.props.existingParamNames, mapping.mapTo)) {\n        inputError = \"A parameter with this name already exists\";\n      }\n    }\n\n    this.setState({ mapping, inputError });\n  };\n\n  save = () => {\n    this.props.onChange(this.props.mapping, this.state.mapping);\n    this.hide();\n  };\n\n  show = () => {\n    this.setState({\n      visible: true,\n      mapping: clone(this.props.mapping), // restore original state\n    });\n  };\n\n  hide = () => {\n    this.setState({ visible: false });\n  };\n\n  renderContent() {\n    const { mapping, inputError } = this.state;\n\n    return (\n      <div className=\"parameter-mapping-editor\" data-test=\"EditParamMappingPopover\">\n        <header>\n          Edit Source and Value <HelpTrigger type=\"VALUE_SOURCE_OPTIONS\" />\n        </header>\n        <ParameterMappingInput\n          mapping={mapping}\n          existingParamNames={this.props.existingParamNames}\n          onChange={this.onChange}\n          inputError={inputError}\n        />\n        <footer>\n          <Button onClick={this.hide}>Cancel</Button>\n          <Button onClick={this.save} disabled={!!inputError} type=\"primary\">\n            OK\n          </Button>\n        </footer>\n      </div>\n    );\n  }\n\n  render() {\n    const { visible, mapping } = this.state;\n    return (\n      <Popover\n        placement=\"left\"\n        trigger=\"click\"\n        content={this.renderContent()}\n        visible={visible}\n        onVisibleChange={this.onVisibleChange}>\n        <Button size=\"small\" type=\"dashed\" data-test={`EditParamMappingButton-${mapping.param.name}`}>\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nclass TitleEditor extends React.Component {\n  static propTypes = {\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    onChange: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    existingParams: [],\n  };\n\n  state = {\n    showPopup: false,\n    title: \"\", // will be set on editing\n  };\n\n  onPopupVisibleChange = showPopup => {\n    this.setState({\n      showPopup,\n      title: showPopup ? this.getMappingTitle() : \"\",\n    });\n  };\n\n  onEditingTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  getMappingTitle() {\n    let { mapping } = this.props;\n\n    if (isString(mapping.title) && mapping.title !== \"\") {\n      return mapping.title;\n    }\n\n    // if mapped to dashboard, find source param and return it's title\n    if (mapping.type === MappingType.DashboardMapToExisting) {\n      const source = find(this.props.existingParams, { name: mapping.mapTo });\n      if (source) {\n        mapping = source;\n      }\n    }\n\n    return mapping.title || mapping.param.title;\n  }\n\n  save = () => {\n    const newMapping = extend({}, this.props.mapping, { title: this.state.title });\n    this.props.onChange(newMapping);\n    this.hide();\n  };\n\n  hide = () => {\n    this.setState({ showPopup: false });\n  };\n\n  renderPopover() {\n    const {\n      param: { title: paramTitle },\n    } = this.props.mapping;\n\n    return (\n      <div className=\"parameter-mapping-title-editor\">\n        <Input\n          size=\"small\"\n          value={this.state.title}\n          placeholder={paramTitle}\n          aria-label=\"Edit parameter title\"\n          onChange={this.onEditingTitleChange}\n          onPressEnter={this.save}\n          maxLength={100}\n          autoFocus\n        />\n        <Button size=\"small\" type=\"dashed\" onClick={this.hide}>\n          <CloseOutlinedIcon />\n        </Button>\n        <Button size=\"small\" type=\"dashed\" onClick={this.save}>\n          <CheckOutlinedIcon />\n        </Button>\n      </div>\n    );\n  }\n\n  renderEditButton() {\n    const { mapping } = this.props;\n    if (mapping.type === MappingType.StaticValue) {\n      return (\n        <Tooltip placement=\"right\" title=\"Titles for static values don't appear in widgets\">\n          {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n          <span tabIndex={0}>\n            <i className=\"fa fa-eye-slash\" aria-hidden=\"true\" />\n          </span>\n        </Tooltip>\n      );\n    }\n    return (\n      <Popover\n        placement=\"right\"\n        trigger=\"click\"\n        content={this.renderPopover()}\n        visible={this.state.showPopup}\n        onVisibleChange={this.onPopupVisibleChange}>\n        <Button size=\"small\" type=\"dashed\">\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n\n  render() {\n    const { mapping } = this.props;\n    // static value are non-editable hence disabled\n    const disabled = mapping.type === MappingType.StaticValue;\n\n    return (\n      <div className={classNames(\"parameter-mapping-title\", { disabled })}>\n        <span className=\"text\">{this.getMappingTitle()}</span>\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n}\n\nexport class ParameterMappingListInput extends React.Component {\n  static propTypes = {\n    mappings: PropTypes.arrayOf(PropTypes.object),\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mappings: [],\n    existingParams: [],\n    onChange: () => {},\n  };\n\n  static getStringValue(value) {\n    // null\n    if (!value) {\n      return \"\";\n    }\n\n    // range\n    if (value instanceof Object && \"start\" in value && \"end\" in value) {\n      return `${value.start} ~ ${value.end}`;\n    }\n\n    // just to be safe, array or object\n    if (typeof value === \"object\") {\n      return map(value, v => this.getStringValue(v)).join(\", \");\n    }\n\n    // rest\n    return value.toString();\n  }\n\n  static getDefaultValue(mapping, existingParams) {\n    const { type, mapTo, name } = mapping;\n    let { param } = mapping;\n\n    // if mapped to another param, swap 'em\n    if (type === MappingType.DashboardMapToExisting && mapTo !== name) {\n      const mappedTo = find(existingParams, { name: mapTo });\n      if (mappedTo) {\n        // just being safe\n        param = mappedTo;\n      }\n\n      // static type is different since it's fed param.normalizedValue\n    } else if (type === MappingType.StaticValue) {\n      param = cloneParameter(param).setValue(mapping.value);\n    }\n\n    let value = Parameter.getExecutionValue(param);\n\n    // in case of dynamic value display the name instead of value\n    if (param.hasDynamicValue) {\n      value = param.normalizedValue.name;\n    }\n\n    return this.getStringValue(value);\n  }\n\n  static getSourceTypeLabel({ type, mapTo }) {\n    switch (type) {\n      case MappingType.DashboardAddNew:\n      case MappingType.DashboardMapToExisting:\n        return (\n          <Fragment>\n            Dashboard <Tag className=\"tag\">{mapTo}</Tag>\n          </Fragment>\n        );\n      case MappingType.WidgetLevel:\n        return \"Widget parameter\";\n      case MappingType.StaticValue:\n        return \"Static value\";\n      default:\n        return \"\"; // won't happen (typescript-ftw)\n    }\n  }\n\n  updateParamMapping(oldMapping, newMapping) {\n    const mappings = [...this.props.mappings];\n    const index = findIndex(mappings, oldMapping);\n    if (index >= 0) {\n      // This should be the only possible case, but need to handle `else` too\n      mappings[index] = newMapping;\n    } else {\n      mappings.push(newMapping);\n    }\n    this.props.onChange(mappings);\n  }\n\n  render() {\n    const { existingParams } = this.props; // eslint-disable-line react/prop-types\n    const dataSource = this.props.mappings.map(mapping => ({ mapping }));\n\n    return (\n      <div className=\"parameters-mapping-list\">\n        <Table dataSource={dataSource} size=\"middle\" pagination={false} rowKey={(record, idx) => `row${idx}`}>\n          <Table.Column\n            title=\"Title\"\n            dataIndex=\"mapping\"\n            key=\"title\"\n            render={mapping => (\n              <TitleEditor\n                existingParams={existingParams}\n                mapping={mapping}\n                onChange={newMapping => this.updateParamMapping(mapping, newMapping)}\n              />\n            )}\n          />\n          <Table.Column\n            title=\"Keyword\"\n            dataIndex=\"mapping\"\n            key=\"keyword\"\n            className=\"keyword\"\n            render={mapping => <code>{`{{ ${mapping.name} }}`}</code>}\n          />\n          <Table.Column\n            title=\"Default Value\"\n            dataIndex=\"mapping\"\n            key=\"value\"\n            render={mapping => this.constructor.getDefaultValue(mapping, this.props.existingParams)}\n          />\n          <Table.Column\n            title=\"Value Source\"\n            dataIndex=\"mapping\"\n            key=\"source\"\n            render={mapping => {\n              const existingParamsNames = existingParams\n                .filter(({ type }) => type === mapping.param.type) // exclude mismatching param types\n                .map(({ name }) => name); // keep names only\n\n              return (\n                <Fragment>\n                  {this.constructor.getSourceTypeLabel(mapping)}{\" \"}\n                  <MappingEditor\n                    mapping={mapping}\n                    existingParamNames={existingParamsNames}\n                    onChange={(oldMapping, newMapping) => this.updateParamMapping(oldMapping, newMapping)}\n                  />\n                </Fragment>\n              );\n            }}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n","import { isMatch, map, find, sortBy } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport {\n  MappingType,\n  ParameterMappingListInput,\n  parameterMappingsToEditableMappings,\n  editableMappingsToParameterMappings,\n  synchronizeWidgetTitles,\n} from \"@/components/ParameterMappingInput\";\nimport notification from \"@/services/notification\";\n\nexport function getParamValuesSnapshot(mappings, dashboardParameters) {\n  return map(\n    sortBy(mappings, m => m.name),\n    m => {\n      let param;\n      switch (m.type) {\n        case MappingType.StaticValue:\n          return [m.name, m.value];\n        case MappingType.WidgetLevel:\n          return [m.name, m.param.value];\n        case MappingType.DashboardAddNew:\n        case MappingType.DashboardMapToExisting:\n          param = find(dashboardParameters, p => p.name === m.mapTo);\n          return [m.name, param ? param.value : null];\n        // no default\n      }\n    }\n  );\n}\n\nclass EditParameterMappingsDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dialog: DialogPropType.isRequired,\n  };\n\n  originalParamValuesSnapshot = null;\n\n  constructor(props) {\n    super(props);\n\n    const parameterMappings = parameterMappingsToEditableMappings(\n      props.widget.options.parameterMappings,\n      props.widget.query.getParametersDefs(),\n      map(this.props.dashboard.getParametersDefs(), p => p.name)\n    );\n\n    this.originalParamValuesSnapshot = getParamValuesSnapshot(\n      parameterMappings,\n      this.props.dashboard.getParametersDefs()\n    );\n\n    this.state = {\n      saveInProgress: false,\n      parameterMappings,\n    };\n  }\n\n  saveWidget() {\n    const widget = this.props.widget;\n\n    this.setState({ saveInProgress: true });\n\n    const newMappings = editableMappingsToParameterMappings(this.state.parameterMappings);\n    widget.options.parameterMappings = newMappings;\n\n    const valuesChanged = !isMatch(\n      this.originalParamValuesSnapshot,\n      getParamValuesSnapshot(this.state.parameterMappings, this.props.dashboard.getParametersDefs())\n    );\n\n    const widgetsToSave = [\n      widget,\n      ...synchronizeWidgetTitles(widget.options.parameterMappings, this.props.dashboard.widgets),\n    ];\n\n    Promise.all(map(widgetsToSave, w => w.save()))\n      .then(() => {\n        this.props.dialog.close(valuesChanged);\n      })\n      .catch(() => {\n        notification.error(\"Widget cannot be updated\");\n      })\n      .finally(() => {\n        this.setState({ saveInProgress: false });\n      });\n  }\n\n  updateParamMappings(parameterMappings) {\n    this.setState({ parameterMappings });\n  }\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title=\"Parameters\"\n        onOk={() => this.saveWidget()}\n        okButtonProps={{ loading: this.state.saveInProgress }}\n        width={700}>\n        {this.state.parameterMappings.length > 0 && (\n          <ParameterMappingListInput\n            mappings={this.state.parameterMappings}\n            existingParams={this.props.dashboard.getParametersDefs()}\n            onChange={mappings => this.updateParamMappings(mappings)}\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EditParameterMappingsDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { isEmpty } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Modal from \"antd/lib/modal\";\nimport Menu from \"antd/lib/menu\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { Moment } from \"@/components/proptypes\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./Widget.less\";\n\nfunction WidgetDropdownButton({ extraOptions, showDeleteOption, onDelete }) {\n  const WidgetMenu = (\n    <Menu data-test=\"WidgetDropdownButtonMenu\">\n      {extraOptions}\n      {showDeleteOption && extraOptions && <Menu.Divider />}\n      {showDeleteOption && <Menu.Item onClick={onDelete}>Remove from Dashboard</Menu.Item>}\n    </Menu>\n  );\n\n  return (\n    <div className=\"widget-menu-regular\">\n      <Dropdown overlay={WidgetMenu} placement=\"bottomRight\" trigger={[\"click\"]}>\n        <PlainButton className=\"action p-l-15 p-r-15\" data-test=\"WidgetDropdownButton\" aria-label=\"More options\">\n          <i className=\"zmdi zmdi-more-vert\" aria-hidden=\"true\" />\n        </PlainButton>\n      </Dropdown>\n    </div>\n  );\n}\n\nWidgetDropdownButton.propTypes = {\n  extraOptions: PropTypes.node,\n  showDeleteOption: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\n\nWidgetDropdownButton.defaultProps = {\n  extraOptions: null,\n  showDeleteOption: false,\n  onDelete: () => {},\n};\n\nfunction WidgetDeleteButton({ onClick }) {\n  return (\n    <div className=\"widget-menu-remove\">\n      <PlainButton\n        className=\"action\"\n        title=\"Remove From Dashboard\"\n        onClick={onClick}\n        data-test=\"WidgetDeleteButton\"\n        aria-label=\"Close\">\n        <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n      </PlainButton>\n    </div>\n  );\n}\n\nWidgetDeleteButton.propTypes = { onClick: PropTypes.func };\nWidgetDeleteButton.defaultProps = { onClick: () => {} };\n\nclass Widget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    children: PropTypes.node,\n    header: PropTypes.node,\n    footer: PropTypes.node,\n    canEdit: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    refreshStartedAt: Moment,\n    menuOptions: PropTypes.node,\n    tileProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    onDelete: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: \"\",\n    children: null,\n    header: null,\n    footer: null,\n    canEdit: false,\n    isPublic: false,\n    refreshStartedAt: null,\n    menuOptions: null,\n    tileProps: {},\n    onDelete: () => {},\n  };\n\n  componentDidMount() {\n    const { widget } = this.props;\n    recordEvent(\"view\", \"widget\", widget.id);\n  }\n\n  deleteWidget = () => {\n    const { widget, onDelete } = this.props;\n\n    Modal.confirm({\n      title: \"Delete Widget\",\n      content: \"Are you sure you want to remove this widget from the dashboard?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => widget.delete().then(onDelete),\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  render() {\n    const { className, children, header, footer, canEdit, isPublic, menuOptions, tileProps } = this.props;\n    const showDropdownButton = !isPublic && (canEdit || !isEmpty(menuOptions));\n    return (\n      <div className=\"widget-wrapper\">\n        <div className={cx(\"tile body-container\", className)} {...tileProps}>\n          <div className=\"widget-actions\">\n            {showDropdownButton && (\n              <WidgetDropdownButton\n                extraOptions={menuOptions}\n                showDeleteOption={canEdit}\n                onDelete={this.deleteWidget}\n              />\n            )}\n            {canEdit && <WidgetDeleteButton onClick={this.deleteWidget} />}\n          </div>\n          <div className=\"body-row widget-header\">{header}</div>\n          {children}\n          {footer && <div className=\"body-row tile__bottom-control\">{footer}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compact, isEmpty, invoke, map } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport cx from \"classnames\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { formatDateTime } from \"@/lib/utils\";\nimport Link from \"@/components/Link\";\nimport Parameters from \"@/components/Parameters\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport { Moment } from \"@/components/proptypes\";\nimport QueryLink from \"@/components/QueryLink\";\nimport { FiltersType } from \"@/components/Filters\";\nimport PlainButton from \"@/components/PlainButton\";\nimport ExpandedWidgetDialog from \"@/components/dashboards/ExpandedWidgetDialog\";\nimport EditParameterMappingsDialog from \"@/components/dashboards/EditParameterMappingsDialog\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport Widget from \"./Widget\";\n\nfunction visualizationWidgetMenuOptions({ widget, canEditDashboard, onParametersEdit }) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n  const canEditParameters = canEditDashboard && !isEmpty(invoke(widget, \"query.getParametersDefs\"));\n  const widgetQueryResult = widget.getQueryResult();\n  const isQueryResultEmpty = !widgetQueryResult || !widgetQueryResult.isEmpty || widgetQueryResult.isEmpty();\n\n  const downloadLink = fileType => widgetQueryResult.getLink(widget.getQuery().id, fileType);\n  const downloadName = fileType => widgetQueryResult.getName(widget.getQuery().name, fileType);\n  return compact([\n    <Menu.Item key=\"download_csv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"csv\")} download={downloadName(\"csv\")} target=\"_self\">\n          Download as CSV File\n        </Link>\n      ) : (\n        \"Download as CSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_tsv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"tsv\")} download={downloadName(\"tsv\")} target=\"_self\">\n          Download as TSV File\n        </Link>\n      ) : (\n        \"Download as TSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_excel\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"xlsx\")} download={downloadName(\"xlsx\")} target=\"_self\">\n          Download as Excel File\n        </Link>\n      ) : (\n        \"Download as Excel File\"\n      )}\n    </Menu.Item>,\n    (canViewQuery || canEditParameters) && <Menu.Divider key=\"divider\" />,\n    canViewQuery && (\n      <Menu.Item key=\"view_query\">\n        <Link href={widget.getQuery().getUrl(true, widget.visualization.id)}>View Query</Link>\n      </Menu.Item>\n    ),\n    canEditParameters && (\n      <Menu.Item key=\"edit_parameters\" onClick={onParametersEdit}>\n        Edit Parameters\n      </Menu.Item>\n    ),\n  ]);\n}\n\nfunction RefreshIndicator({ refreshStartedAt }) {\n  return (\n    <div className=\"refresh-indicator\">\n      <div className=\"refresh-icon\">\n        <i className=\"zmdi zmdi-refresh zmdi-hc-spin\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Refreshing...</span>\n      </div>\n      <Timer from={refreshStartedAt} />\n    </div>\n  );\n}\n\nRefreshIndicator.propTypes = { refreshStartedAt: Moment };\nRefreshIndicator.defaultProps = { refreshStartedAt: null };\n\nfunction VisualizationWidgetHeader({\n  widget,\n  refreshStartedAt,\n  parameters,\n  isEditing,\n  onParametersUpdate,\n  onParametersEdit,\n}) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n\n  return (\n    <>\n      <RefreshIndicator refreshStartedAt={refreshStartedAt} />\n      <div className=\"t-header widget clearfix\">\n        <div className=\"th-title\">\n          <p>\n            <QueryLink query={widget.getQuery()} visualization={widget.visualization} readOnly={!canViewQuery} />\n          </p>\n          {!isEmpty(widget.getQuery().description) && (\n            <HtmlContent className=\"text-muted markdown query--description\">\n              {markdown.toHTML(widget.getQuery().description || \"\")}\n            </HtmlContent>\n          )}\n        </div>\n      </div>\n      {!isEmpty(parameters) && (\n        <div className=\"m-b-10\">\n          <Parameters\n            parameters={parameters}\n            sortable={isEditing}\n            appendSortableToParent={false}\n            onValuesChange={onParametersUpdate}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nVisualizationWidgetHeader.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  refreshStartedAt: Moment,\n  parameters: PropTypes.arrayOf(PropTypes.object),\n  isEditing: PropTypes.bool,\n  onParametersUpdate: PropTypes.func,\n  onParametersEdit: PropTypes.func,\n};\n\nVisualizationWidgetHeader.defaultProps = {\n  refreshStartedAt: null,\n  onParametersUpdate: () => {},\n  onParametersEdit: () => {},\n  isEditing: false,\n  parameters: [],\n};\n\nfunction VisualizationWidgetFooter({ widget, isPublic, onRefresh, onExpand }) {\n  const widgetQueryResult = widget.getQueryResult();\n  const updatedAt = invoke(widgetQueryResult, \"getUpdatedAt\");\n  const [refreshClickButtonId, setRefreshClickButtonId] = useState();\n\n  const refreshWidget = buttonId => {\n    if (!refreshClickButtonId) {\n      setRefreshClickButtonId(buttonId);\n      onRefresh().finally(() => setRefreshClickButtonId(null));\n    }\n  };\n\n  return widgetQueryResult ? (\n    <>\n      <span>\n        {!isPublic && !!widgetQueryResult && (\n          <PlainButton\n            className=\"refresh-button hidden-print btn btn-sm btn-default btn-transparent\"\n            onClick={() => refreshWidget(1)}\n            data-test=\"RefreshButton\">\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 1 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 1 ? \"Refreshing, please wait. \" : \"Press to refresh. \"}\n            </span>{\" \"}\n            <TimeAgo date={updatedAt} />\n          </PlainButton>\n        )}\n        <span className=\"visible-print\">\n          <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n        </span>\n        {isPublic && (\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> <TimeAgo date={updatedAt} />\n          </span>\n        )}\n      </span>\n      <span>\n        {!isPublic && (\n          <PlainButton\n            className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\"\n            onClick={() => refreshWidget(2)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 2 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 2 ? \"Refreshing, please wait.\" : \"Press to refresh.\"}\n            </span>\n          </PlainButton>\n        )}\n        <PlainButton className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\" onClick={onExpand}>\n          <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n        </PlainButton>\n      </span>\n    </>\n  ) : null;\n}\n\nVisualizationWidgetFooter.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isPublic: PropTypes.bool,\n  onRefresh: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n};\n\nVisualizationWidgetFooter.defaultProps = { isPublic: false };\n\nclass VisualizationWidget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    filters: FiltersType,\n    isPublic: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    canEdit: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    onLoad: PropTypes.func,\n    onRefresh: PropTypes.func,\n    onDelete: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    filters: [],\n    isPublic: false,\n    isLoading: false,\n    canEdit: false,\n    isEditing: false,\n    onLoad: () => {},\n    onRefresh: () => {},\n    onDelete: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      localParameters: props.widget.getLocalParameters(),\n      localFilters: props.filters,\n    };\n  }\n\n  componentDidMount() {\n    const { widget, onLoad } = this.props;\n    recordEvent(\"view\", \"query\", widget.visualization.query.id, { dashboard: true });\n    recordEvent(\"view\", \"visualization\", widget.visualization.id, { dashboard: true });\n    onLoad();\n  }\n\n  onLocalFiltersChange = localFilters => {\n    this.setState({ localFilters });\n  };\n\n  expandWidget = () => {\n    ExpandedWidgetDialog.showModal({ widget: this.props.widget, filters: this.state.localFilters });\n  };\n\n  editParameterMappings = () => {\n    const { widget, dashboard, onRefresh, onParameterMappingsChange } = this.props;\n    EditParameterMappingsDialog.showModal({\n      dashboard,\n      widget,\n    }).onClose(valuesChanged => {\n      // refresh widget if any parameter value has been updated\n      if (valuesChanged) {\n        onRefresh();\n      }\n      onParameterMappingsChange();\n      this.setState({ localParameters: widget.getLocalParameters() });\n    });\n  };\n\n  renderVisualization() {\n    const { widget, filters } = this.props;\n    const widgetQueryResult = widget.getQueryResult();\n    const widgetStatus = widgetQueryResult && widgetQueryResult.getStatus();\n    switch (widgetStatus) {\n      case \"failed\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            {widgetQueryResult.getError() && (\n              <div className=\"alert alert-danger m-5\">\n                Error running query: <strong>{widgetQueryResult.getError()}</strong>\n              </div>\n            )}\n          </div>\n        );\n      case \"done\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            <VisualizationRenderer\n              visualization={widget.visualization}\n              queryResult={widgetQueryResult}\n              filters={filters}\n              onFiltersChange={this.onLocalFiltersChange}\n              context=\"widget\"\n            />\n          </div>\n        );\n      default:\n        return (\n          <div\n            className=\"body-row-auto spinner-container\"\n            role=\"status\"\n            aria-live=\"polite\"\n            aria-relevant=\"additions removals\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        );\n    }\n  }\n\n  render() {\n    const { widget, isLoading, isPublic, canEdit, isEditing, onRefresh } = this.props;\n    const { localParameters } = this.state;\n    const widgetQueryResult = widget.getQueryResult();\n    const isRefreshing = isLoading && !!(widgetQueryResult && widgetQueryResult.getStatus());\n    const onParametersEdit = parameters => {\n      const paramOrder = map(parameters, \"name\");\n      widget.options.paramOrder = paramOrder;\n      widget.save(\"options\", { paramOrder });\n    };\n\n    return (\n      <Widget\n        {...this.props}\n        className=\"widget-visualization\"\n        menuOptions={visualizationWidgetMenuOptions({\n          widget,\n          canEditDashboard: canEdit,\n          onParametersEdit: this.editParameterMappings,\n        })}\n        header={\n          <VisualizationWidgetHeader\n            widget={widget}\n            refreshStartedAt={isRefreshing ? widget.refreshStartedAt : null}\n            parameters={localParameters}\n            isEditing={isEditing}\n            onParametersUpdate={onRefresh}\n            onParametersEdit={onParametersEdit}\n          />\n        }\n        footer={\n          <VisualizationWidgetFooter\n            widget={widget}\n            isPublic={isPublic}\n            onRefresh={onRefresh}\n            onExpand={this.expandWidget}\n          />\n        }\n        tileProps={{ \"data-refreshing\": isRefreshing }}>\n        {this.renderVisualization()}\n      </Widget>\n    );\n  }\n}\n\nexport default VisualizationWidget;\n","import { toString } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Divider from \"antd/lib/divider\";\nimport Link from \"@/components/Link\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport notification from \"@/services/notification\";\n\nimport \"./TextboxDialog.less\";\n\nfunction TextboxDialog({ dialog, isNew, ...props }) {\n  const [text, setText] = useState(toString(props.text));\n  const [preview, setPreview] = useState(null);\n\n  useEffect(() => {\n    setText(props.text);\n    setPreview(markdown.toHTML(props.text));\n  }, [props.text]);\n\n  const [updatePreview] = useDebouncedCallback(() => {\n    setPreview(markdown.toHTML(text));\n  }, 200);\n\n  const handleInputChange = useCallback(\n    event => {\n      setText(event.target.value);\n      updatePreview();\n    },\n    [updatePreview]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close(text).catch(() => {\n      notification.error(isNew ? \"Widget could not be added\" : \"Widget could not be saved\");\n    });\n  }, [dialog, isNew, text]);\n\n  const confirmDialogDismiss = useCallback(() => {\n    const originalText = props.text;\n    if (text !== originalText) {\n      Modal.confirm({\n        title: \"Quit editing?\",\n        content: \"Changes you made so far will not be saved. Are you sure?\",\n        okText: \"Yes, quit\",\n        okType: \"danger\",\n        onOk: () => dialog.dismiss(),\n        maskClosable: true,\n        autoFocusButton: null,\n        style: { top: 170 },\n      });\n    } else {\n      dialog.dismiss();\n    }\n  }, [dialog, text, props.text]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isNew ? \"Add Textbox\" : \"Edit Textbox\"}\n      onOk={saveWidget}\n      onCancel={confirmDialogDismiss}\n      okText={isNew ? \"Add to Dashboard\" : \"Save\"}\n      width={500}\n      wrapProps={{ \"data-test\": \"TextboxDialog\" }}>\n      <div className=\"textbox-dialog\">\n        <Input.TextArea\n          className=\"resize-vertical\"\n          rows=\"5\"\n          value={text}\n          aria-label=\"Textbox widget content\"\n          onChange={handleInputChange}\n          autoFocus\n          placeholder=\"This is where you write some text\"\n        />\n        <small>\n          Supports basic{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.markdownguide.org/cheat-sheet/#basic-syntax\">\n            <Tooltip title=\"Markdown guide opens in new window\">Markdown</Tooltip>\n          </Link>\n          .\n        </small>\n        {text && (\n          <React.Fragment>\n            <Divider dashed />\n            <strong className=\"preview-title\">Preview:</strong>\n            <HtmlContent className=\"preview markdown\">{preview}</HtmlContent>\n          </React.Fragment>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nTextboxDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  isNew: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nTextboxDialog.defaultProps = {\n  isNew: false,\n  text: \"\",\n};\n\nexport default wrapDialog(TextboxDialog);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { markdown } from \"markdown\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport Widget from \"./Widget\";\n\nfunction TextboxWidget(props) {\n  const { widget, canEdit } = props;\n  const [text, setText] = useState(widget.text);\n\n  const editTextBox = () => {\n    TextboxDialog.showModal({\n      text: widget.text,\n    }).onClose(newText => {\n      widget.text = newText;\n      setText(newText);\n      return widget.save();\n    });\n  };\n\n  const TextboxMenuOptions = [\n    <Menu.Item key=\"edit\" onClick={editTextBox}>\n      Edit\n    </Menu.Item>,\n  ];\n\n  if (!widget.width) {\n    return null;\n  }\n\n  return (\n    <Widget {...props} menuOptions={canEdit ? TextboxMenuOptions : null} className=\"widget-text\">\n      <HtmlContent className=\"body-row-auto scrollbox t-body p-15 markdown\">{markdown.toHTML(text || \"\")}</HtmlContent>\n    </Widget>\n  );\n}\n\nTextboxWidget.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  canEdit: PropTypes.bool,\n};\n\nTextboxWidget.defaultProps = {\n  canEdit: false,\n};\n\nexport default TextboxWidget;\n","import React from \"react\";\nimport Widget from \"./Widget\";\n\nfunction RestrictedWidget(props) {\n  return (\n    <Widget {...props} className=\"d-flex justify-content-center align-items-center widget-restricted\">\n      <div className=\"t-body scrollbox\">\n        <div className=\"text-center\">\n          <h1>\n            <span className=\"zmdi zmdi-lock\" />\n          </h1>\n          <p className=\"text-muted\">This widget requires access to a data source you don&apos;t have access to.</p>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\nexport default RestrictedWidget;\n","import { includes, reduce, some } from \"lodash\";\n\n// TODO: Revisit this implementation when migrating widget component to React\n\nconst WIDGET_SELECTOR = '[data-widgetid=\"{0}\"]';\nconst WIDGET_CONTENT_SELECTOR = [\n  \".widget-header\", // header\n  \".visualization-renderer\", // visualization\n  \".scrollbox .alert\", // error state\n  \".spinner-container\", // loading state\n  \".tile__bottom-control\", // footer\n].join(\",\");\nconst INTERVAL = 200;\n\nexport default class AutoHeightController {\n  widgets = {};\n\n  interval = null;\n\n  onHeightChange = null;\n\n  constructor(handler) {\n    this.onHeightChange = handler;\n  }\n\n  update(widgets) {\n    const newWidgetIds = widgets\n      .filter(widget => widget.options.position.autoHeight)\n      .map(widget => widget.id.toString());\n\n    // added\n    newWidgetIds.filter(id => !includes(Object.keys(this.widgets), id)).forEach(this.add);\n\n    // removed\n    Object.keys(this.widgets)\n      .filter(id => !includes(newWidgetIds, id))\n      .forEach(this.remove);\n  }\n\n  add = id => {\n    if (this.isEmpty()) {\n      this.start();\n    }\n\n    const selector = WIDGET_SELECTOR.replace(\"{0}\", id);\n    this.widgets[id] = [\n      function getHeight() {\n        const widgetEl = document.querySelector(selector);\n        if (!widgetEl) {\n          return undefined; // safety\n        }\n\n        // get all content elements\n        const els = widgetEl.querySelectorAll(WIDGET_CONTENT_SELECTOR);\n\n        // calculate accumulated height\n        return reduce(\n          els,\n          (acc, el) => {\n            const height = el ? el.getBoundingClientRect().height : 0;\n            return acc + height;\n          },\n          0\n        );\n      },\n    ];\n  };\n\n  remove = id => {\n    // ignore if not an active autoHeight widget\n    if (!this.exists(id)) {\n      return;\n    }\n\n    // not actually deleting from this.widgets to prevent case of unwanted re-adding\n    this.widgets[id.toString()] = false;\n\n    if (this.isEmpty()) {\n      this.stop();\n    }\n  };\n\n  exists = id => !!this.widgets[id.toString()];\n\n  isEmpty = () => !some(this.widgets);\n\n  checkHeightChanges = () => {\n    Object.keys(this.widgets)\n      .filter(this.exists) // reject already removed items\n      .forEach(id => {\n        const [getHeight, prevHeight] = this.widgets[id];\n        const height = getHeight();\n        if (height && height !== prevHeight) {\n          this.widgets[id][1] = height; // save\n          this.onHeightChange(id, height); // dispatch\n        }\n      });\n  };\n\n  start = () => {\n    this.stop();\n    this.interval = setInterval(this.checkHeightChanges, INTERVAL);\n  };\n\n  stop = () => {\n    clearInterval(this.interval);\n  };\n\n  resume = () => {\n    if (!this.isEmpty()) {\n      this.start();\n    }\n  };\n\n  destroy = () => {\n    this.stop();\n    this.widgets = null;\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { chain, cloneDeep, find } from \"lodash\";\nimport cx from \"classnames\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport { VisualizationWidget, TextboxWidget, RestrictedWidget } from \"@/components/dashboards/dashboard-widget\";\nimport { FiltersType } from \"@/components/Filters\";\nimport cfg from \"@/config/dashboard-grid-options\";\nimport AutoHeightController from \"./AutoHeightController\";\nimport { WidgetTypeEnum } from \"@/services/widget\";\n\nimport \"react-grid-layout/css/styles.css\";\nimport \"./dashboard-grid.less\";\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WidgetType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  options: PropTypes.shape({\n    position: PropTypes.shape({\n      col: PropTypes.number.isRequired,\n      row: PropTypes.number.isRequired,\n      sizeY: PropTypes.number.isRequired,\n      minSizeY: PropTypes.number.isRequired,\n      maxSizeY: PropTypes.number.isRequired,\n      sizeX: PropTypes.number.isRequired,\n      minSizeX: PropTypes.number.isRequired,\n      maxSizeX: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n});\n\nconst SINGLE = \"single-column\";\nconst MULTI = \"multi-column\";\n\nconst DashboardWidget = React.memo(\n  function DashboardWidget({\n    widget,\n    dashboard,\n    onLoadWidget,\n    onRefreshWidget,\n    onRemoveWidget,\n    onParameterMappingsChange,\n    isEditing,\n    canEdit,\n    isPublic,\n    isLoading,\n    filters,\n  }) {\n    const { type } = widget;\n    const onLoad = () => onLoadWidget(widget);\n    const onRefresh = () => onRefreshWidget(widget);\n    const onDelete = () => onRemoveWidget(widget.id);\n\n    if (type === WidgetTypeEnum.VISUALIZATION) {\n      return (\n        <VisualizationWidget\n          widget={widget}\n          dashboard={dashboard}\n          filters={filters}\n          isEditing={isEditing}\n          canEdit={canEdit}\n          isPublic={isPublic}\n          isLoading={isLoading}\n          onLoad={onLoad}\n          onRefresh={onRefresh}\n          onDelete={onDelete}\n          onParameterMappingsChange={onParameterMappingsChange}\n        />\n      );\n    }\n    if (type === WidgetTypeEnum.TEXTBOX) {\n      return <TextboxWidget widget={widget} canEdit={canEdit} isPublic={isPublic} onDelete={onDelete} />;\n    }\n    return <RestrictedWidget widget={widget} />;\n  },\n  (prevProps, nextProps) =>\n    prevProps.widget === nextProps.widget &&\n    prevProps.canEdit === nextProps.canEdit &&\n    prevProps.isPublic === nextProps.isPublic &&\n    prevProps.isLoading === nextProps.isLoading &&\n    prevProps.filters === nextProps.filters &&\n    prevProps.isEditing === nextProps.isEditing\n);\n\nclass DashboardGrid extends React.Component {\n  static propTypes = {\n    isEditing: PropTypes.bool.isRequired,\n    isPublic: PropTypes.bool,\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widgets: PropTypes.arrayOf(WidgetType).isRequired,\n    filters: FiltersType,\n    onBreakpointChange: PropTypes.func,\n    onLoadWidget: PropTypes.func,\n    onRefreshWidget: PropTypes.func,\n    onRemoveWidget: PropTypes.func,\n    onLayoutChange: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isPublic: false,\n    filters: [],\n    onLoadWidget: () => {},\n    onRefreshWidget: () => {},\n    onRemoveWidget: () => {},\n    onLayoutChange: () => {},\n    onBreakpointChange: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  static normalizeFrom(widget) {\n    const {\n      id,\n      options: { position: pos },\n    } = widget;\n\n    return {\n      i: id.toString(),\n      x: pos.col,\n      y: pos.row,\n      w: pos.sizeX,\n      h: pos.sizeY,\n      minW: pos.minSizeX,\n      maxW: pos.maxSizeX,\n      minH: pos.minSizeY,\n      maxH: pos.maxSizeY,\n    };\n  }\n\n  mode = null;\n\n  autoHeightCtrl = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layouts: {},\n      disableAnimations: true,\n    };\n\n    // init AutoHeightController\n    this.autoHeightCtrl = new AutoHeightController(this.onWidgetHeightUpdated);\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentDidMount() {\n    this.onBreakpointChange(document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI);\n    // Work-around to disable initial animation on widgets; `measureBeforeMount` doesn't work properly:\n    // it disables animation, but it cannot detect scrollbars.\n    setTimeout(() => {\n      this.setState({ disableAnimations: false });\n    }, 50);\n  }\n\n  componentDidUpdate() {\n    // update, in case widgets added or removed\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentWillUnmount() {\n    this.autoHeightCtrl.destroy();\n  }\n\n  onLayoutChange = (_, layouts) => {\n    // workaround for when dashboard starts at single mode and then multi is empty or carries single col data\n    // fixes test dashboard_spec['shows widgets with full width']\n    // TODO: open react-grid-layout issue\n    if (layouts[MULTI]) {\n      this.setState({ layouts });\n    }\n\n    // workaround for https://github.com/STRML/react-grid-layout/issues/889\n    // remove next line when fix lands\n    this.mode = document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI;\n    // end workaround\n\n    // don't save single column mode layout\n    if (this.mode === SINGLE) {\n      return;\n    }\n\n    const normalized = chain(layouts[MULTI])\n      .keyBy(\"i\")\n      .mapValues(this.normalizeTo)\n      .value();\n\n    this.props.onLayoutChange(normalized);\n  };\n\n  onBreakpointChange = mode => {\n    this.mode = mode;\n    this.props.onBreakpointChange(mode === SINGLE);\n  };\n\n  // height updated by auto-height\n  onWidgetHeightUpdated = (widgetId, newHeight) => {\n    this.setState(({ layouts }) => {\n      const layout = cloneDeep(layouts[MULTI]); // must clone to allow react-grid-layout to compare prev/next state\n      const item = find(layout, { i: widgetId.toString() });\n      if (item) {\n        // update widget height\n        item.h = Math.ceil((newHeight + cfg.margins) / cfg.rowHeight);\n      }\n\n      return { layouts: { [MULTI]: layout } };\n    });\n  };\n\n  // height updated by manual resize\n  onWidgetResize = (layout, oldItem, newItem) => {\n    if (oldItem.h !== newItem.h) {\n      this.autoHeightCtrl.remove(Number(newItem.i));\n    }\n\n    this.autoHeightCtrl.resume();\n  };\n\n  normalizeTo = layout => ({\n    col: layout.x,\n    row: layout.y,\n    sizeX: layout.w,\n    sizeY: layout.h,\n    autoHeight: this.autoHeightCtrl.exists(layout.i),\n  });\n\n  render() {\n    const {\n      onLoadWidget,\n      onRefreshWidget,\n      onRemoveWidget,\n      onParameterMappingsChange,\n      filters,\n      dashboard,\n      isPublic,\n      isEditing,\n      widgets,\n    } = this.props;\n    const className = cx(\"dashboard-wrapper\", isEditing ? \"editing-mode\" : \"preview-mode\");\n\n    return (\n      <div className={className}>\n        <ResponsiveGridLayout\n          draggableCancel=\"input,.sortable-container\"\n          className={cx(\"layout\", { \"disable-animations\": this.state.disableAnimations })}\n          cols={{ [MULTI]: cfg.columns, [SINGLE]: 1 }}\n          rowHeight={cfg.rowHeight - cfg.margins}\n          margin={[cfg.margins, cfg.margins]}\n          isDraggable={isEditing}\n          isResizable={isEditing}\n          onResizeStart={this.autoHeightCtrl.stop}\n          onResizeStop={this.onWidgetResize}\n          layouts={this.state.layouts}\n          onLayoutChange={this.onLayoutChange}\n          onBreakpointChange={this.onBreakpointChange}\n          breakpoints={{ [MULTI]: cfg.mobileBreakPoint, [SINGLE]: 0 }}>\n          {widgets.map(widget => (\n            <div\n              key={widget.id}\n              data-grid={DashboardGrid.normalizeFrom(widget)}\n              data-widgetid={widget.id}\n              data-test={`WidgetId${widget.id}`}\n              className={cx(\"dashboard-widget-wrapper\", {\n                \"widget-auto-height-enabled\": this.autoHeightCtrl.exists(widget.id),\n              })}>\n              <DashboardWidget\n                dashboard={dashboard}\n                widget={widget}\n                filters={filters}\n                isPublic={isPublic}\n                isLoading={widget.loading}\n                isEditing={isEditing}\n                canEdit={dashboard.canEdit()}\n                onLoadWidget={onLoadWidget}\n                onRefreshWidget={onRefreshWidget}\n                onRemoveWidget={onRemoveWidget}\n                onParameterMappingsChange={onParameterMappingsChange}\n              />\n            </div>\n          ))}\n        </ResponsiveGridLayout>\n      </div>\n    );\n  }\n}\n\nexport default DashboardGrid;\n","const items = new Map();\n\nfunction checkItems() {\n  if (items.size > 0) {\n    items.forEach((item, node) => {\n      const bounds = node.getBoundingClientRect();\n      // convert to int (because these numbers needed for comparisons), but preserve 1 decimal point\n      const width = Math.round(bounds.width * 10);\n      const height = Math.round(bounds.height * 10);\n\n      if (item.width !== width || item.height !== height) {\n        item.width = width;\n        item.height = height;\n        item.callback(node);\n      }\n    });\n\n    setTimeout(checkItems, 100);\n  }\n}\n\nexport default function observe(node, callback) {\n  if (node && !items.has(node)) {\n    const shouldTrigger = items.size === 0;\n    items.set(node, { callback });\n    if (shouldTrigger) {\n      checkItems();\n    }\n    return () => items.delete(node);\n  }\n  return () => {};\n}\n","import { map, includes, groupBy, first, find } from \"lodash\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { MappingType, ParameterMappingListInput } from \"@/components/ParameterMappingInput\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport notification from \"@/services/notification\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction VisualizationSelect({ query, visualization, onChange }) {\n  const visualizationGroups = useMemo(() => {\n    return query ? groupBy(query.visualizations, \"type\") : {};\n  }, [query]);\n\n  const vizSelectId = useUniqueId(\"visualization-select\");\n\n  const handleChange = useCallback(\n    visualizationId => {\n      const selectedVisualization = query ? find(query.visualizations, { id: visualizationId }) : null;\n      onChange(selectedVisualization || null);\n    },\n    [query, onChange]\n  );\n\n  if (!query) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={vizSelectId}>Choose Visualization</label>\n        <Select\n          id={vizSelectId}\n          className=\"w-100\"\n          value={visualization ? visualization.id : undefined}\n          onChange={handleChange}>\n          {map(visualizationGroups, (visualizations, groupKey) => (\n            <Select.OptGroup key={groupKey} label={groupKey}>\n              {map(visualizations, visualization => (\n                <Select.Option key={`${visualization.id}`} value={visualization.id}>\n                  {visualization.name}\n                </Select.Option>\n              ))}\n            </Select.OptGroup>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n}\n\nVisualizationSelect.propTypes = {\n  query: PropTypes.object,\n  visualization: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nVisualizationSelect.defaultProps = {\n  query: null,\n  visualization: null,\n  onChange: () => {},\n};\n\nfunction AddWidgetDialog({ dialog, dashboard }) {\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [selectedVisualization, setSelectedVisualization] = useState(null);\n  const [parameterMappings, setParameterMappings] = useState([]);\n\n  const selectQuery = useCallback(\n    queryId => {\n      // Clear previously selected query (if any)\n      setSelectedQuery(null);\n      setSelectedVisualization(null);\n      setParameterMappings([]);\n\n      if (queryId) {\n        Query.get({ id: queryId }).then(query => {\n          if (query) {\n            const existingParamNames = map(dashboard.getParametersDefs(), param => param.name);\n            setSelectedQuery(query);\n            setParameterMappings(\n              map(query.getParametersDefs(), param => ({\n                name: param.name,\n                type: includes(existingParamNames, param.name)\n                  ? MappingType.DashboardMapToExisting\n                  : MappingType.DashboardAddNew,\n                mapTo: param.name,\n                value: param.normalizedValue,\n                title: \"\",\n                param,\n              }))\n            );\n            if (query.visualizations.length > 0) {\n              setSelectedVisualization(first(query.visualizations));\n            }\n          }\n        });\n      }\n    },\n    [dashboard]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close({ visualization: selectedVisualization, parameterMappings }).catch(() => {\n      notification.error(\"Widget could not be added\");\n    });\n  }, [dialog, selectedVisualization, parameterMappings]);\n\n  const existingParams = dashboard.getParametersDefs();\n  const parameterMappingsId = useUniqueId(\"parameter-mappings\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add Widget\"\n      onOk={saveWidget}\n      okButtonProps={{\n        ...dialog.props.okButtonProps,\n        disabled: !selectedQuery || dialog.props.okButtonProps.disabled,\n      }}\n      okText=\"Add to Dashboard\"\n      width={700}>\n      <div data-test=\"AddWidgetDialog\">\n        <QuerySelector onChange={query => selectQuery(query ? query.id : null)} />\n\n        {selectedQuery && (\n          <VisualizationSelect\n            query={selectedQuery}\n            visualization={selectedVisualization}\n            onChange={setSelectedVisualization}\n          />\n        )}\n\n        {parameterMappings.length > 0 && [\n          <label key=\"parameters-title\" htmlFor={parameterMappingsId}>\n            Parameters\n          </label>,\n          <ParameterMappingListInput\n            key=\"parameters-list\"\n            id={parameterMappingsId}\n            mappings={parameterMappings}\n            existingParams={existingParams}\n            onChange={setParameterMappings}\n          />,\n        ]}\n      </div>\n    </Modal>\n  );\n}\n\nAddWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dashboard: PropTypes.object.isRequired,\n};\n\nexport default wrapDialog(AddWidgetDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Link from \"@/components/Link\";\n\n// PreviewCard\n\nexport function PreviewCard({ imageUrl, roundedImage, title, body, children, className, ...props }) {\n  return (\n    <div {...props} className={className + \" w-100 d-flex align-items-center\"}>\n      <img\n        src={imageUrl}\n        width=\"32\"\n        height=\"32\"\n        className={classNames({ \"profile__image--settings\": roundedImage }, \"m-r-5\")}\n        alt=\"Logo/Avatar\"\n      />\n      <div className=\"flex-fill\">\n        <div>{title}</div>\n        {body && <div className=\"text-muted\">{body}</div>}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nPreviewCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  body: PropTypes.node,\n  roundedImage: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nPreviewCard.defaultProps = {\n  body: null,\n  roundedImage: true,\n  className: \"\",\n  children: null,\n};\n\n// UserPreviewCard\n\nexport function UserPreviewCard({ user, withLink, children, ...props }) {\n  const title = withLink ? <Link href={\"users/\" + user.id}>{user.name}</Link> : user.name;\n  return (\n    <PreviewCard {...props} imageUrl={user.profile_image_url} title={title} body={user.email}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nUserPreviewCard.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nUserPreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n\n// DataSourcePreviewCard\n\nexport function DataSourcePreviewCard({ dataSource, withLink, children, ...props }) {\n  const imageUrl = `static/images/db-logos/${dataSource.type}.png`;\n  const title = withLink ? <Link href={\"data_sources/\" + dataSource.id}>{dataSource.name}</Link> : dataSource.name;\n  return (\n    <PreviewCard {...props} imageUrl={imageUrl} title={title}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nDataSourcePreviewCard.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDataSourcePreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n","import { isString } from \"lodash\";\nimport DOMPurify from \"dompurify\";\n\nDOMPurify.setConfig({\n  ADD_ATTR: [\"target\"],\n});\n\nDOMPurify.addHook(\"afterSanitizeAttributes\", function(node) {\n  // Fix elements with `target` attribute:\n  // - allow only `target=\"_blank\"\n  // - add `rel=\"noopener noreferrer\"` to prevent https://www.owasp.org/index.php/Reverse_Tabnabbing\n\n  const target = node.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    node.setAttribute(\"rel\", \"noopener noreferrer\");\n  } else {\n    node.removeAttribute(\"target\");\n  }\n});\n\nexport { DOMPurify };\n\nexport default DOMPurify.sanitize;\n","import { isString, get, find } from \"lodash\";\nimport sanitize from \"@/services/sanitize\";\nimport { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\nimport { clientConfig } from \"@/services/auth\";\n\nfunction getErrorMessage(error) {\n  return find([get(error, \"response.data.message\"), get(error, \"response.statusText\"), \"Unknown error\"], isString);\n}\n\nfunction disableResource(user) {\n  return `api/users/${user.id}/disable`;\n}\n\nfunction enableUser(user) {\n  const userName = sanitize(user.name);\n\n  return axios\n    .delete(disableResource(user))\n    .then(data => {\n      notification.success(`User ${userName} is now enabled.`);\n      user.is_disabled = false;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot enable user\", getErrorMessage(error));\n    });\n}\n\nfunction disableUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .post(disableResource(user))\n    .then(data => {\n      notification.warning(`User ${userName} is now disabled.`);\n      user.is_disabled = true;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot disable user\", getErrorMessage(error));\n    });\n}\n\nfunction deleteUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .delete(`api/users/${user.id}`)\n    .then(data => {\n      notification.warning(`User ${userName} has been deleted.`);\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot delete user\", getErrorMessage(error));\n    });\n}\n\nfunction convertUserInfo(user) {\n  return {\n    id: user.id,\n    name: user.name,\n    email: user.email,\n    profileImageUrl: user.profile_image_url,\n    apiKey: user.api_key,\n    groupIds: user.groups,\n    isDisabled: user.is_disabled,\n    isInvitationPending: user.is_invitation_pending,\n  };\n}\n\nfunction regenerateApiKey(user) {\n  return axios\n    .post(`api/users/${user.id}/regenerate_api_key`)\n    .then(data => {\n      notification.success(\"The API Key has been updated.\");\n      return data.api_key;\n    })\n    .catch(error => {\n      notification.error(\"Failed regenerating API Key\", getErrorMessage(error));\n    });\n}\n\nfunction sendPasswordReset(user) {\n  return axios\n    .post(`api/users/${user.id}/reset_password`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.reset_link;\n      }\n      notification.success(\"Password reset email sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to send password reset email\", getErrorMessage(error));\n    });\n}\n\nfunction resendInvitation(user) {\n  return axios\n    .post(`api/users/${user.id}/invite`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.invite_link;\n      }\n      notification.success(\"Invitation sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to resend invitation\", getErrorMessage(error));\n    });\n}\n\nconst User = {\n  query: params => axios.get(\"api/users\", { params }),\n  get: ({ id }) => axios.get(`api/users/${id}`),\n  create: data => axios.post(`api/users`, data),\n  save: data => axios.post(`api/users/${data.id}`, data),\n  enableUser,\n  disableUser,\n  deleteUser,\n  convertUserInfo,\n  regenerateApiKey,\n  sendPasswordReset,\n  resendInvitation,\n};\n\nexport default User;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport { each, debounce, get, find } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Tag from \"antd/lib/tag\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { toHuman } from \"@/lib/utils\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport User from \"@/services/user\";\n\nimport \"./index.less\";\n\nconst { Option } = Select;\nconst DEBOUNCE_SEARCH_DURATION = 200;\n\nfunction useGrantees(url) {\n  const loadGrantees = useCallback(\n    () =>\n      axios.get(url).then(data => {\n        const resultGrantees = [];\n        each(data, (grantees, accessType) => {\n          grantees.forEach(grantee => {\n            grantee.accessType = toHuman(accessType);\n            resultGrantees.push(grantee);\n          });\n        });\n        return resultGrantees;\n      }),\n    [url]\n  );\n\n  const addPermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .post(url, { access_type: accessType, user_id: userId })\n        .catch(() => notification.error(\"Could not grant permission to the user\")),\n    [url]\n  );\n\n  const removePermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .delete(url, { data: { access_type: accessType, user_id: userId } })\n        .catch(() => notification.error(\"Could not remove permission from the user\")),\n    [url]\n  );\n\n  return { loadGrantees, addPermission, removePermission };\n}\n\nconst searchUsers = searchTerm =>\n  User.query({ q: searchTerm })\n    .then(({ results }) => results)\n    .catch(() => []);\n\nfunction PermissionsEditorDialogHeader({ context }) {\n  return (\n    <>\n      Manage Permissions\n      <div className=\"modal-header-desc\">\n        {`Editing this ${context} is enabled for the users in this list and for admins. `}\n        <HelpTrigger type=\"MANAGE_PERMISSIONS\" />\n      </div>\n    </>\n  );\n}\n\nPermissionsEditorDialogHeader.propTypes = { context: PropTypes.oneOf([\"query\", \"dashboard\"]) };\nPermissionsEditorDialogHeader.defaultProps = { context: \"query\" };\n\nfunction UserSelect({ onSelect, shouldShowUser }) {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchUsers = useCallback(\n    debounce(\n      search =>\n        searchUsers(search)\n          .then(setUsers)\n          .finally(() => setLoadingUsers(false)),\n      DEBOUNCE_SEARCH_DURATION\n    ),\n    []\n  );\n\n  useEffect(() => {\n    setLoadingUsers(true);\n    debouncedSearchUsers(searchTerm);\n  }, [debouncedSearchUsers, searchTerm]);\n\n  return (\n    <Select\n      className=\"w-100 m-b-10\"\n      placeholder=\"Add users...\"\n      showSearch\n      onSearch={setSearchTerm}\n      suffixIcon={\n        loadingUsers ? (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        ) : (\n          <i className=\"fa fa-search\" aria-hidden=\"true\" />\n        )\n      }\n      filterOption={false}\n      notFoundContent={null}\n      value={undefined}\n      getPopupContainer={trigger => trigger.parentNode}\n      onSelect={onSelect}>\n      {users.filter(shouldShowUser).map(user => (\n        <Option key={user.id} value={user.id}>\n          <UserPreviewCard user={user} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nUserSelect.propTypes = {\n  onSelect: PropTypes.func,\n  shouldShowUser: PropTypes.func,\n};\nUserSelect.defaultProps = { onSelect: () => {}, shouldShowUser: () => true };\n\nfunction PermissionsEditorDialog({ dialog, author, context, aclUrl }) {\n  const [loadingGrantees, setLoadingGrantees] = useState(true);\n  const [grantees, setGrantees] = useState([]);\n  const { loadGrantees, addPermission, removePermission } = useGrantees(aclUrl);\n  const loadUsersWithPermissions = useCallback(() => {\n    setLoadingGrantees(true);\n    loadGrantees()\n      .then(setGrantees)\n      .catch(() => notification.error(\"Failed to load grantees list\"))\n      .finally(() => setLoadingGrantees(false));\n  }, [loadGrantees]);\n\n  const userHasPermission = useCallback(\n    user => user.id === author.id || !!get(find(grantees, { id: user.id }), \"accessType\"),\n    [author.id, grantees]\n  );\n\n  useEffect(() => {\n    loadUsersWithPermissions();\n  }, [aclUrl, loadUsersWithPermissions]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"permissions-editor-dialog\"\n      title={<PermissionsEditorDialogHeader context={context} />}\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <UserSelect\n        onSelect={userId => addPermission(userId).then(loadUsersWithPermissions)}\n        shouldShowUser={user => !userHasPermission(user)}\n      />\n      <div className=\"d-flex align-items-center m-t-5\">\n        <h5 className=\"flex-fill\">Users with permissions</h5>\n        {loadingGrantees && (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        )}\n      </div>\n      <div className=\"scrollbox p-5\" style={{ maxHeight: \"40vh\" }}>\n        <List\n          size=\"small\"\n          dataSource={[author, ...grantees]}\n          renderItem={user => (\n            <List.Item>\n              <UserPreviewCard key={user.id} user={user}>\n                {user.id === author.id ? (\n                  <Tag className=\"m-0\">Author</Tag>\n                ) : (\n                  <Tooltip title=\"Remove user permissions\">\n                    <PlainButton\n                      aria-label=\"Remove permissions\"\n                      onClick={() => removePermission(user.id).then(loadUsersWithPermissions)}>\n                      <i className=\"fa fa-remove clickable\" aria-hidden=\"true\" />\n                    </PlainButton>\n                  </Tooltip>\n                )}\n              </UserPreviewCard>\n            </List.Item>\n          )}\n        />\n      </div>\n    </Modal>\n  );\n}\n\nPermissionsEditorDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  author: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  context: PropTypes.oneOf([\"query\", \"dashboard\"]),\n  aclUrl: PropTypes.string.isRequired,\n};\n\nPermissionsEditorDialog.defaultProps = { context: \"query\" };\n\nexport default wrapDialog(PermissionsEditorDialog);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"./PlainButton\";\n\nexport default class InputWithCopy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { copied: null };\n    this.ref = React.createRef();\n    this.copyFeatureSupported = document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    this.ref.current.select();\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <PlainButton onClick={this.copy}>\n          {/* TODO: lacks visual feedback */}\n          <CopyOutlinedIcon />\n        </PlainButton>\n      </Tooltip>\n    );\n\n    return <Input {...this.props} ref={this.ref} addonAfter={this.copyFeatureSupported && copyButton} />;\n  }\n}\n","import { replace } from \"lodash\";\nimport React from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"antd/lib/switch\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Alert from \"antd/lib/alert\";\nimport notification from \"@/services/notification\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nconst API_SHARE_URL = \"api/dashboards/{id}/share\";\n\nclass ShareDashboardDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    hasOnlySafeQueries: PropTypes.bool.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  formItemProps = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n    style: { marginBottom: 7 },\n  };\n\n  constructor(props) {\n    super(props);\n    const { dashboard } = this.props;\n\n    this.state = {\n      saving: false,\n    };\n\n    this.apiUrl = replace(API_SHARE_URL, \"{id}\", dashboard.id);\n    this.enabled = this.props.hasOnlySafeQueries || dashboard.publicAccessEnabled;\n  }\n\n  static get headerContent() {\n    return (\n      <React.Fragment>\n        Share Dashboard\n        <div className=\"modal-header-desc\">\n          Allow public access to this dashboard with a secret address. <HelpTrigger type=\"SHARE_DASHBOARD\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  enableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .post(this.apiUrl)\n      .then(data => {\n        dashboard.publicAccessEnabled = true;\n        dashboard.public_url = data.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn on sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  disableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .delete(this.apiUrl)\n      .then(() => {\n        dashboard.publicAccessEnabled = false;\n        delete dashboard.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn off sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  onChange = checked => {\n    if (checked) {\n      this.enableAccess();\n    } else {\n      this.disableAccess();\n    }\n  };\n\n  render() {\n    const { dialog, dashboard } = this.props;\n\n    return (\n      <Modal {...dialog.props} title={this.constructor.headerContent} footer={null}>\n        <Form layout=\"horizontal\">\n          {!this.props.hasOnlySafeQueries && (\n            <Form.Item>\n              <Alert\n                message=\"For your security, sharing is currently not supported for dashboards containing queries with text parameters. Consider changing the text parameters in your query to a different type.\"\n                type=\"error\"\n              />\n            </Form.Item>\n          )}\n          <Form.Item label=\"Allow public access\" {...this.formItemProps}>\n            <Switch\n              checked={dashboard.publicAccessEnabled}\n              onChange={this.onChange}\n              loading={this.state.saving}\n              disabled={!this.enabled}\n              data-test=\"PublicAccessEnabled\"\n            />\n          </Form.Item>\n          {dashboard.public_url && (\n            <Form.Item label=\"Secret address\" {...this.formItemProps}>\n              <InputWithCopy value={dashboard.public_url} data-test=\"SecretAddress\" />\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ShareDashboardDialog);\n","import { has } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useFullscreenHandler() {\n  const [fullscreen, setFullscreen] = useState(has(location.search, \"fullscreen\"));\n  useEffect(() => {\n    document.body.classList.toggle(\"headless\", fullscreen);\n    location.setSearch({ fullscreen: fullscreen ? true : null }, true);\n  }, [fullscreen]);\n\n  const toggleFullscreen = () => setFullscreen(!fullscreen);\n  return [fullscreen, toggleFullscreen];\n}\n","import { isNaN, max, min } from \"lodash\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport location from \"@/services/location\";\nimport { policy } from \"@/services/policy\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getLimitedRefreshRate(refreshRate) {\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  return max([30, min(allowedIntervals), refreshRate]);\n}\n\nfunction getRefreshRateFromUrl() {\n  const refreshRate = parseFloat(location.search.refresh);\n  return isNaN(refreshRate) ? null : getLimitedRefreshRate(refreshRate);\n}\n\nexport default function useRefreshRateHandler(refreshDashboard) {\n  const [refreshRate, setRefreshRate] = useState(getRefreshRateFromUrl());\n\n  // `refreshDashboard` may change quite frequently (on every update of `dashboard` instance), but we\n  // have to keep the same timer running, because timer will restart when re-creating, and instead of\n  // running refresh every N seconds - it will run refresh every N seconds after last dashboard update\n  // (which is not right obviously)\n  const doRefreshDashboard = useImmutableCallback(refreshDashboard);\n\n  // URL and timer should be updated only when `refreshRate` changes\n  useEffect(() => {\n    location.setSearch({ refresh: refreshRate || null }, true);\n    if (refreshRate) {\n      const refreshTimer = setInterval(doRefreshDashboard, refreshRate * 1000);\n      return () => clearInterval(refreshTimer);\n    }\n  }, [refreshRate, doRefreshDashboard]);\n\n  return useMemo(() => [refreshRate, rate => setRefreshRate(getLimitedRefreshRate(rate)), () => setRefreshRate(null)], [\n    refreshRate,\n  ]);\n}\n","import { debounce, find, has, isMatch, map, pickBy } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\nimport notification from \"@/services/notification\";\n\nexport const DashboardStatusEnum = {\n  SAVED: \"saved\",\n  SAVING: \"saving\",\n  SAVING_FAILED: \"saving_failed\",\n};\n\nfunction getChangedPositions(widgets, nextPositions = {}) {\n  return pickBy(nextPositions, (nextPos, widgetId) => {\n    const widget = find(widgets, { id: Number(widgetId) });\n    const prevPos = widget.options.position;\n    return !isMatch(prevPos, nextPos);\n  });\n}\n\nexport default function useEditModeHandler(canEditDashboard, widgets) {\n  const [editingLayout, setEditingLayout] = useState(canEditDashboard && has(location.search, \"edit\"));\n  const [dashboardStatus, setDashboardStatus] = useState(DashboardStatusEnum.SAVED);\n  const [recentPositions, setRecentPositions] = useState([]);\n  const [doneBtnClickedWhileSaving, setDoneBtnClickedWhileSaving] = useState(false);\n\n  useEffect(() => {\n    location.setSearch({ edit: editingLayout ? true : null }, true);\n  }, [editingLayout]);\n\n  useEffect(() => {\n    if (doneBtnClickedWhileSaving && dashboardStatus === DashboardStatusEnum.SAVED) {\n      setDoneBtnClickedWhileSaving(false);\n      setEditingLayout(false);\n    }\n  }, [doneBtnClickedWhileSaving, dashboardStatus]);\n\n  const saveDashboardLayout = useCallback(\n    positions => {\n      if (!canEditDashboard) {\n        setDashboardStatus(DashboardStatusEnum.SAVED);\n        return;\n      }\n\n      const changedPositions = getChangedPositions(widgets, positions);\n\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      setRecentPositions(positions);\n      const saveChangedWidgets = map(changedPositions, (position, id) => {\n        // find widget\n        const widget = find(widgets, { id: Number(id) });\n\n        // skip already deleted widget\n        if (!widget) {\n          return Promise.resolve();\n        }\n\n        return widget.save(\"options\", { position });\n      });\n\n      return Promise.all(saveChangedWidgets)\n        .then(() => setDashboardStatus(DashboardStatusEnum.SAVED))\n        .catch(() => {\n          setDashboardStatus(DashboardStatusEnum.SAVING_FAILED);\n          notification.error(\"Error saving changes.\");\n        });\n    },\n    [canEditDashboard, widgets]\n  );\n\n  const saveDashboardLayoutDebounced = useCallback(\n    (...args) => {\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      return debounce(() => saveDashboardLayout(...args), 2000)();\n    },\n    [saveDashboardLayout]\n  );\n\n  const retrySaveDashboardLayout = useCallback(() => saveDashboardLayout(recentPositions), [\n    recentPositions,\n    saveDashboardLayout,\n  ]);\n\n  const setEditing = useCallback(\n    editing => {\n      if (!editing && dashboardStatus !== DashboardStatusEnum.SAVED) {\n        setDoneBtnClickedWhileSaving(true);\n        return;\n      }\n      setEditingLayout(canEditDashboard && editing);\n    },\n    [dashboardStatus, canEditDashboard]\n  );\n\n  return {\n    editingLayout: canEditDashboard && editingLayout,\n    setEditingLayout: setEditing,\n    saveDashboardLayout: editingLayout ? saveDashboardLayoutDebounced : saveDashboardLayout,\n    retrySaveDashboardLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n  };\n}\n","import { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { isEmpty, includes, compact, map, has, pick, keys, extend, every, get } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { Dashboard, collectDashboardFilters } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { QueryResultError } from \"@/services/query\";\nimport AddWidgetDialog from \"@/components/dashboards/AddWidgetDialog\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\nimport { editableMappingsToParameterMappings, synchronizeWidgetTitles } from \"@/components/ParameterMappingInput\";\nimport ShareDashboardDialog from \"../components/ShareDashboardDialog\";\nimport useFullscreenHandler from \"../../../lib/hooks/useFullscreenHandler\";\nimport useRefreshRateHandler from \"./useRefreshRateHandler\";\nimport useEditModeHandler from \"./useEditModeHandler\";\nimport { policy } from \"@/services/policy\";\n\nexport { DashboardStatusEnum } from \"./useEditModeHandler\";\n\nfunction getAffectedWidgets(widgets, updatedParameters = []) {\n  return !isEmpty(updatedParameters)\n    ? widgets.filter(widget =>\n        Object.values(widget.getParameterMappings())\n          .filter(({ type }) => type === \"dashboard-level\")\n          .some(({ mapTo }) =>\n            includes(\n              updatedParameters.map(p => p.name),\n              mapTo\n            )\n          )\n      )\n    : widgets;\n}\n\nfunction useDashboard(dashboardData) {\n  const [dashboard, setDashboard] = useState(dashboardData);\n  const [filters, setFilters] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [gridDisabled, setGridDisabled] = useState(false);\n  const globalParameters = useMemo(() => dashboard.getParametersDefs(), [dashboard]);\n  const canEditDashboard = !dashboard.is_archived && policy.canEdit(dashboard);\n  const isDashboardOwnerOrAdmin = useMemo(\n    () =>\n      !dashboard.is_archived &&\n      has(dashboard, \"user.id\") &&\n      (currentUser.id === dashboard.user.id || currentUser.isAdmin),\n    [dashboard]\n  );\n  const hasOnlySafeQueries = useMemo(\n    () => every(dashboard.widgets, w => (w.getQuery() ? w.getQuery().is_safe : true)),\n    [dashboard]\n  );\n\n  const managePermissions = useCallback(() => {\n    const aclUrl = `api/dashboards/${dashboard.id}/acl`;\n    PermissionsEditorDialog.showModal({\n      aclUrl,\n      context: \"dashboard\",\n      author: dashboard.user,\n    });\n  }, [dashboard]);\n\n  const updateDashboard = useCallback(\n    (data, includeVersion = true) => {\n      setDashboard(currentDashboard => extend({}, currentDashboard, data));\n      data = { ...data, id: dashboard.id };\n      if (includeVersion) {\n        data = { ...data, version: dashboard.version };\n      }\n      return Dashboard.save(data)\n        .then(updatedDashboard => {\n          setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, keys(data))));\n          if (has(data, \"name\")) {\n            location.setPath(url.parse(updatedDashboard.url).pathname, true);\n          }\n        })\n        .catch(error => {\n          const status = get(error, \"response.status\");\n          if (status === 403) {\n            notification.error(\"Dashboard update failed\", \"Permission Denied.\");\n          } else if (status === 409) {\n            notification.error(\n              \"It seems like the dashboard has been modified by another user. \",\n              \"Please copy/backup your changes and reload this page.\",\n              { duration: null }\n            );\n          }\n        });\n    },\n    [dashboard]\n  );\n\n  const togglePublished = useCallback(() => {\n    recordEvent(\"toggle_published\", \"dashboard\", dashboard.id);\n    updateDashboard({ is_draft: !dashboard.is_draft }, false);\n  }, [dashboard, updateDashboard]);\n\n  const loadWidget = useCallback((widget, forceRefresh = false) => {\n    widget.getParametersDefs(); // Force widget to read parameters values from URL\n    setDashboard(currentDashboard => extend({}, currentDashboard));\n    return widget\n      .load(forceRefresh)\n      .catch(error => {\n        // QueryResultErrors are expected\n        if (error instanceof QueryResultError) {\n          return;\n        }\n        return Promise.reject(error);\n      })\n      .finally(() => setDashboard(currentDashboard => extend({}, currentDashboard)));\n  }, []);\n\n  const refreshWidget = useCallback(widget => loadWidget(widget, true), [loadWidget]);\n\n  const removeWidget = useCallback(widgetId => {\n    setDashboard(currentDashboard =>\n      extend({}, currentDashboard, {\n        widgets: currentDashboard.widgets.filter(widget => widget.id !== undefined && widget.id !== widgetId),\n      })\n    );\n  }, []);\n\n  const dashboardRef = useRef();\n  dashboardRef.current = dashboard;\n\n  const loadDashboard = useCallback(\n    (forceRefresh = false, updatedParameters = []) => {\n      const affectedWidgets = getAffectedWidgets(dashboardRef.current.widgets, updatedParameters);\n      const loadWidgetPromises = compact(\n        affectedWidgets.map(widget => loadWidget(widget, forceRefresh).catch(error => error))\n      );\n\n      return Promise.all(loadWidgetPromises).then(() => {\n        const queryResults = compact(map(dashboardRef.current.widgets, widget => widget.getQueryResult()));\n        const updatedFilters = collectDashboardFilters(dashboardRef.current, queryResults, location.search);\n        setFilters(updatedFilters);\n      });\n    },\n    [loadWidget]\n  );\n\n  const refreshDashboard = useCallback(\n    updatedParameters => {\n      if (!refreshing) {\n        setRefreshing(true);\n        loadDashboard(true, updatedParameters).finally(() => setRefreshing(false));\n      }\n    },\n    [refreshing, loadDashboard]\n  );\n\n  const archiveDashboard = useCallback(() => {\n    recordEvent(\"archive\", \"dashboard\", dashboard.id);\n    Dashboard.delete(dashboard).then(updatedDashboard =>\n      setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, [\"is_archived\"])))\n    );\n  }, [dashboard]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const showShareDashboardDialog = useCallback(() => {\n    const handleDialogClose = () => setDashboard(currentDashboard => extend({}, currentDashboard));\n\n    ShareDashboardDialog.showModal({\n      dashboard,\n      hasOnlySafeQueries,\n    })\n      .onClose(handleDialogClose)\n      .onDismiss(handleDialogClose);\n  }, [dashboard, hasOnlySafeQueries]);\n\n  const showAddTextboxDialog = useCallback(() => {\n    TextboxDialog.showModal({\n      isNew: true,\n    }).onClose(text =>\n      dashboard.addWidget(text).then(() => setDashboard(currentDashboard => extend({}, currentDashboard)))\n    );\n  }, [dashboard]);\n\n  const showAddWidgetDialog = useCallback(() => {\n    AddWidgetDialog.showModal({\n      dashboard,\n    }).onClose(({ visualization, parameterMappings }) =>\n      dashboard\n        .addWidget(visualization, {\n          parameterMappings: editableMappingsToParameterMappings(parameterMappings),\n        })\n        .then(widget => {\n          const widgetsToSave = [\n            widget,\n            ...synchronizeWidgetTitles(widget.options.parameterMappings, dashboard.widgets),\n          ];\n          return Promise.all(widgetsToSave.map(w => w.save())).then(() =>\n            setDashboard(currentDashboard => extend({}, currentDashboard))\n          );\n        })\n    );\n  }, [dashboard]);\n\n  const [refreshRate, setRefreshRate, disableRefreshRate] = useRefreshRateHandler(refreshDashboard);\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler();\n  const editModeHandler = useEditModeHandler(!gridDisabled && canEditDashboard, dashboard.widgets);\n\n  useEffect(() => {\n    setDashboard(dashboardData);\n    loadDashboard();\n  }, [dashboardData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    document.title = dashboard.name;\n  }, [dashboard.name]);\n\n  // reload dashboard when filter option changes\n  useEffect(() => {\n    loadDashboard();\n  }, [dashboard.dashboard_filters_enabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    dashboard,\n    globalParameters,\n    refreshing,\n    filters,\n    setFilters,\n    loadDashboard,\n    refreshDashboard,\n    updateDashboard,\n    togglePublished,\n    archiveDashboard,\n    loadWidget,\n    refreshWidget,\n    removeWidget,\n    canEditDashboard,\n    isDashboardOwnerOrAdmin,\n    refreshRate,\n    setRefreshRate,\n    disableRefreshRate,\n    ...editModeHandler,\n    gridDisabled,\n    setGridDisabled,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n    showAddTextboxDialog,\n    showAddWidgetDialog,\n    managePermissions,\n  };\n}\n\nexport default useDashboard;\n","import { trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\n\nexport default class EditInPlace extends React.Component {\n  static propTypes = {\n    ignoreBlanks: PropTypes.bool,\n    isEditable: PropTypes.bool,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onStopEditing: PropTypes.func,\n    multiline: PropTypes.bool,\n    editorProps: PropTypes.object,\n    defaultEditing: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ignoreBlanks: false,\n    isEditable: true,\n    placeholder: \"\",\n    value: \"\",\n    onStopEditing: () => {},\n    multiline: false,\n    editorProps: {},\n    defaultEditing: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: props.defaultEditing,\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (!this.state.editing && prevState.editing) {\n      this.props.onStopEditing();\n    }\n  }\n\n  startEditing = () => {\n    if (this.props.isEditable) {\n      this.setState({ editing: true });\n    }\n  };\n\n  stopEditing = currentValue => {\n    const newValue = trim(currentValue);\n    const ignorableBlank = this.props.ignoreBlanks && newValue === \"\";\n    if (!ignorableBlank && newValue !== this.props.value) {\n      this.props.onDone(newValue);\n    }\n    this.setState({ editing: false });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      this.stopEditing(event.target.value);\n    } else if (event.keyCode === 27) {\n      this.setState({ editing: false });\n    }\n  };\n\n  renderNormal = () =>\n    this.props.value ? (\n      <span\n        role=\"presentation\"\n        onFocus={this.startEditing}\n        onClick={this.startEditing}\n        className={this.props.isEditable ? \"editable\" : \"\"}>\n        {this.props.value}\n      </span>\n    ) : (\n      <a className=\"clickable\" onClick={this.startEditing}>\n        {this.props.placeholder}\n      </a>\n    );\n\n  renderEdit = () => {\n    const { multiline, value, editorProps } = this.props;\n    const InputComponent = multiline ? Input.TextArea : Input;\n    return (\n      <InputComponent\n        defaultValue={value}\n        aria-label=\"Editing\"\n        onBlur={e => this.stopEditing(e.target.value)}\n        onKeyDown={this.handleKeyDown}\n        autoFocus\n        {...editorProps}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <span className={cx(\"edit-in-place\", { active: this.state.editing }, this.props.className)}>\n        {this.state.editing ? this.renderEdit() : this.renderNormal()}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { map, includes } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport { durationHumanize } from \"@/lib/utils\";\nimport { DashboardStatusEnum } from \"../hooks/useDashboard\";\n\nimport \"./DashboardHeader.less\";\n\nfunction getDashboardTags() {\n  return getTags(\"api/dashboards/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction buttonType(value) {\n  return value ? \"primary\" : \"default\";\n}\n\nfunction DashboardPageTitle({ dashboardConfiguration }) {\n  const { dashboard, canEditDashboard, updateDashboard, editingLayout } = dashboardConfiguration;\n  return (\n    <div className=\"title-with-tags\">\n      <div className=\"page-title\">\n        <FavoritesControl item={dashboard} />\n        <h3>\n          <EditInPlace\n            isEditable={editingLayout}\n            onDone={name => updateDashboard({ name })}\n            value={dashboard.name}\n            ignoreBlanks\n          />\n        </h3>\n        <Tooltip title={dashboard.user.name} placement=\"bottom\">\n          <img src={dashboard.user.profile_image_url} className=\"profile-image\" alt={dashboard.user.name} />\n        </Tooltip>\n      </div>\n      <DashboardTagsControl\n        tags={dashboard.tags}\n        isDraft={dashboard.is_draft}\n        isArchived={dashboard.is_archived}\n        canEdit={canEditDashboard}\n        getAvailableTags={getDashboardTags}\n        onEdit={tags => updateDashboard({ tags })}\n      />\n    </div>\n  );\n}\n\nDashboardPageTitle.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction RefreshButton({ dashboardConfiguration }) {\n  const { refreshRate, setRefreshRate, disableRefreshRate, refreshing, refreshDashboard } = dashboardConfiguration;\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  const refreshRateOptions = clientConfig.dashboardRefreshIntervals;\n  const onRefreshRateSelected = ({ key }) => {\n    const parsedRefreshRate = parseFloat(key);\n    if (parsedRefreshRate) {\n      setRefreshRate(parsedRefreshRate);\n      refreshDashboard();\n    } else {\n      disableRefreshRate();\n    }\n  };\n  return (\n    <Button.Group>\n      <Tooltip title={refreshRate ? `Auto Refreshing every ${durationHumanize(refreshRate)}` : null}>\n        <Button type={buttonType(refreshRate)} onClick={() => refreshDashboard()}>\n          <i className={cx(\"zmdi zmdi-refresh m-r-5\", { \"zmdi-hc-spin\": refreshing })} aria-hidden=\"true\" />\n          {refreshRate ? durationHumanize(refreshRate) : \"Refresh\"}\n        </Button>\n      </Tooltip>\n      <Dropdown\n        trigger={[\"click\"]}\n        placement=\"bottomRight\"\n        overlay={\n          <Menu onClick={onRefreshRateSelected} selectedKeys={[`${refreshRate}`]}>\n            {refreshRateOptions.map(option => (\n              <Menu.Item key={`${option}`} disabled={!includes(allowedIntervals, option)}>\n                {durationHumanize(option)}\n              </Menu.Item>\n            ))}\n            {refreshRate && <Menu.Item key={null}>Disable auto refresh</Menu.Item>}\n          </Menu>\n        }>\n        <Button className=\"icon-button hidden-xs\" type={buttonType(refreshRate)}>\n          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Split button!</span>\n        </Button>\n      </Dropdown>\n    </Button.Group>\n  );\n}\n\nRefreshButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardMoreOptionsButton({ dashboardConfiguration }) {\n  const {\n    dashboard,\n    setEditingLayout,\n    togglePublished,\n    archiveDashboard,\n    managePermissions,\n    gridDisabled,\n    isDashboardOwnerOrAdmin,\n  } = dashboardConfiguration;\n\n  const archive = () => {\n    Modal.confirm({\n      title: \"Archive Dashboard\",\n      content: `Are you sure you want to archive the \"${dashboard.name}\" dashboard?`,\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: archiveDashboard,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  return (\n    <Dropdown\n      trigger={[\"click\"]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu data-test=\"DashboardMoreButtonMenu\">\n          <Menu.Item className={cx({ hidden: gridDisabled })}>\n            <PlainButton onClick={() => setEditingLayout(true)}>Edit</PlainButton>\n          </Menu.Item>\n          {clientConfig.showPermissionsControl && isDashboardOwnerOrAdmin && (\n            <Menu.Item>\n              <PlainButton onClick={managePermissions}>Manage Permissions</PlainButton>\n            </Menu.Item>\n          )}\n          {!clientConfig.disablePublish && !dashboard.is_draft && (\n            <Menu.Item>\n              <PlainButton onClick={togglePublished}>Unpublish</PlainButton>\n            </Menu.Item>\n          )}\n          <Menu.Item>\n            <PlainButton onClick={archive}>Archive</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button className=\"icon-button m-l-5\" data-test=\"DashboardMoreButton\" aria-label=\"More actions\">\n        <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n      </Button>\n    </Dropdown>\n  );\n}\n\nDashboardMoreOptionsButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    dashboard,\n    togglePublished,\n    canEditDashboard,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n  } = dashboardConfiguration;\n  const showPublishButton = dashboard.is_draft;\n  const showRefreshButton = true;\n  const showFullscreenButton = !dashboard.is_draft;\n  const canShareDashboard = canEditDashboard && !dashboard.is_draft;\n  const showShareButton = !clientConfig.disablePublicUrls && (dashboard.publicAccessEnabled || canShareDashboard);\n  const showMoreOptionsButton = canEditDashboard;\n  return (\n    <div className=\"dashboard-control\">\n      {!dashboard.is_archived && (\n        <span className=\"hidden-print\">\n          {showPublishButton && (\n            <Button className=\"m-r-5 hidden-xs\" onClick={togglePublished}>\n              <span className=\"fa fa-paper-plane m-r-5\" /> Publish\n            </Button>\n          )}\n          {showRefreshButton && <RefreshButton dashboardConfiguration={dashboardConfiguration} />}\n          {showFullscreenButton && (\n            <Tooltip className=\"hidden-xs\" title=\"Enable/Disable Fullscreen display\">\n              <Button\n                type={buttonType(fullscreen)}\n                className=\"icon-button m-l-5\"\n                onClick={toggleFullscreen}\n                aria-label=\"Toggle fullscreen display\">\n                <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {headerExtra}\n          {showShareButton && (\n            <Tooltip title=\"Dashboard Sharing Options\">\n              <Button\n                className=\"icon-button m-l-5\"\n                type={buttonType(dashboard.publicAccessEnabled)}\n                onClick={showShareDashboardDialog}\n                data-test=\"OpenShareForm\"\n                aria-label=\"Share\">\n                <i className=\"zmdi zmdi-share\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {showMoreOptionsButton && <DashboardMoreOptionsButton dashboardConfiguration={dashboardConfiguration} />}\n        </span>\n      )}\n    </div>\n  );\n}\n\nDashboardControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nfunction DashboardEditControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    setEditingLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n    retrySaveDashboardLayout,\n  } = dashboardConfiguration;\n  let status;\n  if (dashboardStatus === DashboardStatusEnum.SAVED) {\n    status = <span className=\"save-status\">Saved</span>;\n  } else if (dashboardStatus === DashboardStatusEnum.SAVING) {\n    status = (\n      <span className=\"save-status\" data-saving>\n        Saving\n      </span>\n    );\n  } else {\n    status = (\n      <span className=\"save-status\" data-error>\n        Saving Failed\n      </span>\n    );\n  }\n  return (\n    <div className=\"dashboard-control\">\n      {status}\n      {dashboardStatus === DashboardStatusEnum.SAVING_FAILED ? (\n        <Button type=\"primary\" onClick={retrySaveDashboardLayout}>\n          Retry\n        </Button>\n      ) : (\n        <Button loading={doneBtnClickedWhileSaving} type=\"primary\" onClick={() => setEditingLayout(false)}>\n          {!doneBtnClickedWhileSaving && <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />} Done Editing\n        </Button>\n      )}\n      {headerExtra}\n    </div>\n  );\n}\n\nDashboardEditControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nexport default function DashboardHeader({ dashboardConfiguration, headerExtra }) {\n  const { editingLayout } = dashboardConfiguration;\n  const DashboardControlComponent = editingLayout ? DashboardEditControl : DashboardControl;\n\n  return (\n    <div className=\"dashboard-header\">\n      <DashboardPageTitle dashboardConfiguration={dashboardConfiguration} />\n      <DashboardControlComponent dashboardConfiguration={dashboardConfiguration} headerExtra={headerExtra} />\n    </div>\n  );\n}\n\nDashboardHeader.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n","import { isEmpty, map } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Parameters from \"@/components/Parameters\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport recordEvent from \"@/services/recordEvent\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport routes from \"@/services/routes\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useDashboard from \"./hooks/useDashboard\";\nimport DashboardHeader from \"./components/DashboardHeader\";\n\nimport \"./DashboardPage.less\";\n\nfunction DashboardSettings({ dashboardConfiguration }) {\n  const { dashboard, updateDashboard } = dashboardConfiguration;\n  return (\n    <div className=\"m-b-10 p-15 bg-white tiled\">\n      <Checkbox\n        checked={!!dashboard.dashboard_filters_enabled}\n        onChange={({ target }) => updateDashboard({ dashboard_filters_enabled: target.checked })}\n        data-test=\"DashboardFiltersCheckbox\">\n        Use Dashboard Level Filters\n      </Checkbox>\n    </div>\n  );\n}\n\nDashboardSettings.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction AddWidgetContainer({ dashboardConfiguration, className, ...props }) {\n  const { showAddTextboxDialog, showAddWidgetDialog } = dashboardConfiguration;\n  return (\n    <div className={cx(\"add-widget-container\", className)} {...props}>\n      <h2>\n        <i className=\"zmdi zmdi-widgets\" aria-hidden=\"true\" />\n        <span className=\"hidden-xs hidden-sm\">\n          Widgets are individual query visualizations or text boxes you can place on your dashboard in various\n          arrangements.\n        </span>\n      </h2>\n      <div>\n        <Button className=\"m-r-15\" onClick={showAddTextboxDialog} data-test=\"AddTextboxButton\">\n          Add Textbox\n        </Button>\n        <Button type=\"primary\" onClick={showAddWidgetDialog} data-test=\"AddWidgetButton\">\n          Add Widget\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nAddWidgetContainer.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nfunction DashboardComponent(props) {\n  const dashboardConfiguration = useDashboard(props.dashboard);\n  const {\n    dashboard,\n    filters,\n    setFilters,\n    loadDashboard,\n    loadWidget,\n    removeWidget,\n    saveDashboardLayout,\n    globalParameters,\n    updateDashboard,\n    refreshDashboard,\n    refreshWidget,\n    editingLayout,\n    setGridDisabled,\n  } = dashboardConfiguration;\n\n  const [pageContainer, setPageContainer] = useState(null);\n  const [bottomPanelStyles, setBottomPanelStyles] = useState({});\n  const onParametersEdit = parameters => {\n    const paramOrder = map(parameters, \"name\");\n    updateDashboard({ options: { globalParamOrder: paramOrder } });\n  };\n\n  useEffect(() => {\n    if (pageContainer) {\n      const unobserve = resizeObserver(pageContainer, () => {\n        if (editingLayout) {\n          const style = window.getComputedStyle(pageContainer, null);\n          const bounds = pageContainer.getBoundingClientRect();\n          const paddingLeft = parseFloat(style.paddingLeft) || 0;\n          const paddingRight = parseFloat(style.paddingRight) || 0;\n          setBottomPanelStyles({\n            left: Math.round(bounds.left) + paddingRight,\n            width: pageContainer.clientWidth - paddingLeft - paddingRight,\n          });\n        }\n\n        // reflow grid when container changes its size\n        window.dispatchEvent(new Event(\"resize\"));\n      });\n      return unobserve;\n    }\n  }, [pageContainer, editingLayout]);\n\n  return (\n    <div className=\"container\" ref={setPageContainer} data-test={`DashboardId${dashboard.id}Container`}>\n      <DashboardHeader\n        dashboardConfiguration={dashboardConfiguration}\n        headerExtra={\n          <DynamicComponent\n            name=\"Dashboard.HeaderExtra\"\n            dashboard={dashboard}\n            dashboardConfiguration={dashboardConfiguration}\n          />\n        }\n      />\n      {!isEmpty(globalParameters) && (\n        <div className=\"dashboard-parameters m-b-10 p-15 bg-white tiled\" data-test=\"DashboardParameters\">\n          <Parameters\n            parameters={globalParameters}\n            onValuesChange={refreshDashboard}\n            sortable={editingLayout}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\" data-test=\"DashboardFilters\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      {editingLayout && <DashboardSettings dashboardConfiguration={dashboardConfiguration} />}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={editingLayout}\n          onLayoutChange={editingLayout ? saveDashboardLayout : () => {}}\n          onBreakpointChange={setGridDisabled}\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n          onRemoveWidget={removeWidget}\n          onParameterMappingsChange={loadDashboard}\n        />\n      </div>\n      {editingLayout && (\n        <AddWidgetContainer dashboardConfiguration={dashboardConfiguration} style={bottomPanelStyles} />\n      )}\n    </div>\n  );\n}\n\nDashboardComponent.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardPage({ dashboardSlug, dashboardId, onError }) {\n  const [dashboard, setDashboard] = useState(null);\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    Dashboard.get({ id: dashboardId, slug: dashboardSlug })\n      .then(dashboardData => {\n        recordEvent(\"view\", \"dashboard\", dashboardData.id);\n        setDashboard(dashboardData);\n\n        // if loaded by slug, update location url to use the id\n        if (!dashboardId) {\n          location.setPath(url.parse(dashboardData.url).pathname, true);\n        }\n      })\n      .catch(handleError);\n  }, [dashboardId, dashboardSlug, handleError]);\n\n  return <div className=\"dashboard-page\">{dashboard && <DashboardComponent dashboard={dashboard} />}</div>;\n}\n\nDashboardPage.propTypes = {\n  dashboardSlug: PropTypes.string,\n  dashboardId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nDashboardPage.defaultProps = {\n  dashboardSlug: null,\n  dashboardId: null,\n  onError: PropTypes.func,\n};\n\n// route kept for backward compatibility\nroutes.register(\n  \"Dashboards.LegacyViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboard/:dashboardSlug\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n\nroutes.register(\n  \"Dashboards.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboards/:dashboardId([^-]+)(-.*)?\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n","import React, { useEffect, useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth, clientConfig } from \"@/services/auth\";\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n// - `apiKey` field\n\nfunction ApiKeySessionWrapper({ apiKey, currentRoute, renderChildren }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const { handleError } = useContext(ErrorBoundaryContext);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Auth.setApiKey(apiKey);\n    Auth.loadConfig()\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(true);\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [apiKey]);\n\n  if (!isAuthenticated || clientConfig.disablePublicUrls) {\n    return null;\n  }\n\n  return (\n    <React.Fragment key={currentRoute.key}>\n      {renderChildren({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError, apiKey })}\n    </React.Fragment>\n  );\n}\n\nApiKeySessionWrapper.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n  renderChildren: PropTypes.func,\n};\n\nApiKeySessionWrapper.defaultProps = {\n  renderChildren: () => null,\n};\n\nexport default function routeWithApiKeySession({ render, getApiKey, ...rest }) {\n  return {\n    ...rest,\n    render: currentRoute => (\n      <ApiKeySessionWrapper apiKey={getApiKey(currentRoute)} currentRoute={currentRoute} renderChildren={render} />\n    ),\n  };\n}\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Parameters from \"@/components/Parameters\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport useDashboard from \"./hooks/useDashboard\";\n\nimport \"./PublicDashboardPage.less\";\n\nfunction PublicDashboard({ dashboard }) {\n  const { globalParameters, filters, setFilters, refreshDashboard, loadWidget, refreshWidget } = useDashboard(\n    dashboard\n  );\n\n  return (\n    <div className=\"container p-t-10 p-b-20\">\n      <PageHeader title={dashboard.name} />\n      {!isEmpty(globalParameters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Parameters parameters={globalParameters} onValuesChange={refreshDashboard} />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={false}\n          isPublic\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n        />\n      </div>\n    </div>\n  );\n}\n\nPublicDashboard.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nclass PublicDashboardPage extends React.Component {\n  static propTypes = {\n    token: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    loading: true,\n    dashboard: null,\n  };\n\n  componentDidMount() {\n    Dashboard.getByToken({ token: this.props.token })\n      .then(dashboard => this.setState({ dashboard, loading: false }))\n      .catch(error => this.props.onError(error));\n  }\n\n  render() {\n    const { loading, dashboard } = this.state;\n    return (\n      <div className=\"public-dashboard-page\">\n        {loading ? (\n          <div className=\"container loading-message\">\n            <BigMessage className=\"\" icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" />\n          </div>\n        ) : (\n          <PublicDashboard dashboard={dashboard} />\n        )}\n        <div id=\"footer\">\n          <div className=\"text-center\">\n            <Link href=\"https://redash.io\">\n              <img alt=\"Redash Logo\" src={logoUrl} width=\"38\" />\n            </Link>\n          </div>\n          Powered by <Link href=\"https://redash.io/?ref=public-dashboard\">Redash</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Dashboards.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/public/dashboards/:token\",\n    render: pageProps => <PublicDashboardPage {...pageProps} />,\n    getApiKey: currentRoute => currentRoute.routeParams.token,\n  })\n);\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"list empty\" message for list pages\nexport default function EmptyState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-search\" message=\"Sorry, we couldn't find anything.\" {...props} />\n    </div>\n  );\n}\n","import { includes, isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport Input from \"antd/lib/input\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\n\nimport \"./CardsList.less\";\n\nexport interface CardsListItem {\n  title: string;\n  imgSrc: string;\n  href?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nexport interface CardsListProps {\n  items?: CardsListItem[];\n  showSearch?: boolean;\n}\n\ninterface ListItemProps {\n  item: CardsListItem;\n  keySuffix: string;\n}\n\nfunction ListItem({ item, keySuffix }: ListItemProps) {\n  const commonProps = {\n    key: `card${keySuffix}`,\n    className: \"visual-card\",\n    onClick: item.onClick,\n    children: (\n      <>\n        <img alt={item.title} src={item.imgSrc} />\n        <h3>{item.title}</h3>\n      </>\n    ),\n  };\n\n  return item.href ? <Link href={item.href} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />;\n}\n\nexport default function CardsList({ items = [], showSearch = false }: CardsListProps) {\n  const [searchText, setSearchText] = useState(\"\");\n  const filteredItems = items.filter(\n    item => isEmpty(searchText) || includes(item.title.toLowerCase(), searchText.toLowerCase())\n  );\n\n  return (\n    <div data-test=\"CardsList\">\n      {showSearch && (\n        <div className=\"row p-10\">\n          <div className=\"col-md-4 col-md-offset-4\">\n            <Input.Search\n              placeholder=\"Search...\"\n              aria-label=\"Search cards\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchText(e.target.value)}\n              autoFocus\n            />\n          </div>\n        </div>\n      )}\n      {isEmpty(filteredItems) ? (\n        <EmptyState className=\"\" />\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-lg-12 d-inline-flex flex-wrap visual-card-list\">\n            {filteredItems.map((item: CardsListItem, index: number) => (\n              <ListItem key={index} item={item} keySuffix={index.toString()} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      onClick: PropTypes.func,\n      href: PropTypes.string,\n    })\n  ),\n  showSearch: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport AntCollapse from \"antd/lib/collapse\";\n\nexport default function Collapse({ collapsed, children, className, ...props }) {\n  return (\n    <AntCollapse\n      {...props}\n      activeKey={collapsed ? null : \"content\"}\n      className={cx(className, \"ant-collapse-headerless\")}>\n      <AntCollapse.Panel key=\"content\" header=\"\">\n        {children}\n      </AntCollapse.Panel>\n    </AntCollapse>\n  );\n}\n\nCollapse.propTypes = {\n  collapsed: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n  children: null,\n  className: \"\",\n};\n","import { toHuman } from \"@/lib/utils\";\n\nexport default function getFieldLabel(field) {\n  const { title, name } = field;\n  return title || toHuman(name);\n}\n","import React, { forwardRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"./AceEditorInput.less\";\n\nfunction AceEditorInput(props, ref) {\n  return (\n    <div className=\"ace-editor-input\" data-test={props[\"data-test\"]}>\n      <AceEditor\n        ref={ref}\n        mode=\"sql\"\n        theme=\"textmate\"\n        height=\"100px\"\n        editorProps={{ $blockScrolling: Infinity }}\n        showPrintMargin={false}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport default forwardRef(AceEditorInput);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function InputField({ form, field, ...otherProps }) {\n  return <Input {...otherProps} />;\n}\n","import React from \"react\";\nimport { get } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport getFieldLabel from \"./getFieldLabel\";\n\nimport {\n  AceEditorField,\n  CheckboxField,\n  ContentField,\n  FileField,\n  InputField,\n  NumberField,\n  SelectField,\n  TextAreaField,\n} from \"./fields\";\n\nexport const FieldType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  type: PropTypes.oneOf([\n    \"ace\",\n    \"text\",\n    \"textarea\",\n    \"email\",\n    \"password\",\n    \"number\",\n    \"checkbox\",\n    \"file\",\n    \"select\",\n    \"content\",\n  ]).isRequired,\n  initialValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  content: PropTypes.node,\n  mode: PropTypes.string,\n  required: PropTypes.bool,\n  extra: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  minLength: PropTypes.number,\n  placeholder: PropTypes.string,\n  contentAfter: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  loading: PropTypes.bool,\n  props: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n});\n\nconst FieldTypeComponent = {\n  checkbox: CheckboxField,\n  file: FileField,\n  select: SelectField,\n  number: NumberField,\n  textarea: TextAreaField,\n  ace: AceEditorField,\n  content: ContentField,\n};\n\nexport default function DynamicFormField({ form, field, ...otherProps }) {\n  const { name, type, readOnly, autoFocus } = field;\n  const fieldLabel = getFieldLabel(field);\n\n  const fieldProps = {\n    ...field.props,\n    className: \"w-100\",\n    name,\n    type,\n    readOnly,\n    autoFocus,\n    placeholder: field.placeholder,\n    \"data-test\": fieldLabel,\n    ...otherProps,\n  };\n\n  const FieldComponent = get(FieldTypeComponent, type, InputField);\n  return <FieldComponent {...fieldProps} form={form} field={field} />;\n}\n\nDynamicFormField.propTypes = { field: FieldType.isRequired };\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport getFieldLabel from \"../getFieldLabel\";\n\nexport default function CheckboxField({ form, field, ...otherProps }) {\n  const fieldLabel = getFieldLabel(field);\n  return <Checkbox {...otherProps}>{fieldLabel}</Checkbox>;\n}\n","import React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Upload from \"antd/lib/upload\";\nimport UploadOutlinedIcon from \"@ant-design/icons/UploadOutlined\";\n\nexport default function FileField({ form, field, ...otherProps }) {\n  const { name, initialValue } = field;\n  const { getFieldValue } = form;\n  const disabled = getFieldValue(name) !== undefined && getFieldValue(name) !== initialValue;\n\n  return (\n    <Upload {...otherProps} beforeUpload={() => false}>\n      <Button disabled={disabled}>\n        <UploadOutlinedIcon /> Click to upload\n      </Button>\n    </Upload>\n  );\n}\n","import React from \"react\";\nimport Select from \"antd/lib/select\";\n\nexport default function SelectField({ form, field, ...otherProps }) {\n  const { readOnly } = field;\n  return (\n    <Select\n      {...otherProps}\n      optionFilterProp=\"children\"\n      loading={field.loading || false}\n      mode={field.mode}\n      getPopupContainer={trigger => trigger.parentNode}>\n      {field.options &&\n        field.options.map(option => (\n          <Select.Option key={`${option.value}`} value={option.value} disabled={readOnly}>\n            {option.name || option.value}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n}\n","import React from \"react\";\nimport InputNumber from \"antd/lib/input-number\";\n\nexport default function NumberField({ form, field, ...otherProps }) {\n  return <InputNumber {...otherProps} />;\n}\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function TextAreaField({ form, field, ...otherProps }) {\n  return <Input.TextArea {...otherProps} />;\n}\n","import React from \"react\";\nimport AceEditorInput from \"@/components/AceEditorInput\";\n\nexport default function AceEditorField({ form, field, ...otherProps }) {\n  return <AceEditorInput {...otherProps} />;\n}\n","export default function ContentField({ field }) {\n  return field.content;\n}\n","import React from \"react\";\nimport { each, includes, isUndefined, isEmpty, isNil, map, get, some } from \"lodash\";\n\nfunction orderedInputs(properties, order, targetOptions) {\n  const inputs = new Array(order.length);\n  Object.keys(properties).forEach(key => {\n    const position = order.indexOf(key);\n    const input = {\n      name: key,\n      title: properties[key].title,\n      type: properties[key].type,\n      placeholder: isNil(properties[key].default) ? null : properties[key].default.toString(),\n      required: properties[key].required,\n      extra: properties[key].extra,\n      initialValue: targetOptions[key],\n    };\n\n    if (input.type === \"select\") {\n      input.placeholder = \"Select an option\";\n      input.options = properties[key].options;\n    }\n\n    if (position > -1) {\n      inputs[position] = input;\n    } else {\n      inputs.push(input);\n    }\n  });\n  return inputs;\n}\n\nfunction normalizeSchema(configurationSchema) {\n  each(configurationSchema.properties, (prop, name) => {\n    if (name === \"password\" || name === \"passwd\") {\n      prop.type = \"password\";\n    }\n\n    if (name.endsWith(\"File\")) {\n      prop.type = \"file\";\n    }\n\n    if (prop.type === \"boolean\") {\n      prop.type = \"checkbox\";\n    }\n\n    if (prop.type === \"string\") {\n      prop.type = \"text\";\n    }\n\n    if (!isEmpty(prop.enum)) {\n      prop.type = \"select\";\n      prop.options = map(prop.enum, value => ({ value, name: value }));\n    }\n\n    if (!isEmpty(prop.extendedEnum)) {\n      prop.type = \"select\";\n      prop.options = prop.extendedEnum;\n    }\n\n    prop.required = includes(configurationSchema.required, name);\n    prop.extra = includes(configurationSchema.extra_options, name);\n  });\n\n  configurationSchema.order = configurationSchema.order || [];\n}\n\nfunction setDefaultValueToFields(configurationSchema, options = {}) {\n  const properties = configurationSchema.properties;\n  Object.keys(properties).forEach(key => {\n    const property = properties[key];\n    // set default value for checkboxes\n    if (!isUndefined(property.default) && property.type === \"checkbox\") {\n      options[key] = property.default;\n    }\n    // set default or first value when value has predefined options\n    if (property.type === \"select\") {\n      const optionValues = map(property.options, option => option.value);\n      options[key] = includes(optionValues, property.default) ? property.default : optionValues[0];\n    }\n  });\n}\n\nfunction getFields(type = {}, target = { options: {} }) {\n  const configurationSchema = type.configuration_schema;\n  normalizeSchema(configurationSchema);\n  const hasTargetObject = Object.keys(target.options).length > 0;\n  if (!hasTargetObject) {\n    setDefaultValueToFields(configurationSchema, target.options);\n  }\n\n  const isNewTarget = !target.id;\n  const inputs = [\n    {\n      name: \"name\",\n      title: \"Name\",\n      type: \"text\",\n      required: true,\n      initialValue: target.name,\n      contentAfter: React.createElement(\"hr\"),\n      placeholder: `My ${type.name}`,\n      autoFocus: isNewTarget,\n    },\n    ...orderedInputs(configurationSchema.properties, configurationSchema.order, target.options),\n  ];\n\n  return inputs;\n}\n\nfunction updateTargetWithValues(target, values) {\n  target.name = values.name;\n  Object.keys(values).forEach(key => {\n    if (key !== \"name\") {\n      target.options[key] = values[key];\n    }\n  });\n}\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.substr(reader.result.indexOf(\",\") + 1));\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction hasFilledExtraField(type, target) {\n  const extraOptions = get(type, \"configuration_schema.extra_options\", []);\n  return some(extraOptions, optionName => {\n    const defaultOptionValue = get(type, [\"configuration_schema\", \"properties\", optionName, \"default\"]);\n    const targetOptionValue = get(target, [\"options\", optionName]);\n    return !isNil(targetOptionValue) && targetOptionValue !== defaultOptionValue;\n  });\n}\n\nexport default {\n  getFields,\n  updateTargetWithValues,\n  getBase64,\n  hasFilledExtraField,\n};\n","import React, { useState, useReducer, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport { includes, isFunction, filter, find, difference, isEmpty, mapValues } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport Collapse from \"@/components/Collapse\";\nimport DynamicFormField, { FieldType } from \"./DynamicFormField\";\nimport getFieldLabel from \"./getFieldLabel\";\nimport helper from \"./dynamicFormHelper\";\n\nimport \"./DynamicForm.less\";\n\nconst ActionType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  pullRight: PropTypes.bool,\n  disabledWhenDirty: PropTypes.bool,\n});\n\nconst AntdFormType = PropTypes.shape({\n  validateFieldsAndScroll: PropTypes.func,\n});\n\nconst fieldRules = ({ type, required, minLength }) => {\n  const requiredRule = required;\n  const minLengthRule = minLength && includes([\"text\", \"email\", \"password\"], type);\n  const emailTypeRule = type === \"email\";\n\n  return [\n    requiredRule && { required, message: \"This field is required.\" },\n    minLengthRule && { min: minLength, message: \"This field is too short.\" },\n    emailTypeRule && { type: \"email\", message: \"This field must be a valid email.\" },\n  ].filter(rule => rule);\n};\n\nfunction normalizeEmptyValuesToNull(fields, values) {\n  return mapValues(values, (value, key) => {\n    const { initialValue } = find(fields, { name: key }) || {};\n    if ((initialValue === null || initialValue === undefined || initialValue === \"\") && value === \"\") {\n      return null;\n    }\n    return value;\n  });\n}\n\nfunction DynamicFormFields({ fields, feedbackIcons, form }) {\n  return fields.map(field => {\n    const { name, type, initialValue, contentAfter } = field;\n    const fieldLabel = getFieldLabel(field);\n\n    const formItemProps = {\n      name,\n      className: \"m-b-10\",\n      hasFeedback: type !== \"checkbox\" && type !== \"file\" && feedbackIcons,\n      label: type === \"checkbox\" ? \"\" : fieldLabel,\n      rules: fieldRules(field),\n      valuePropName: type === \"checkbox\" ? \"checked\" : \"value\",\n      initialValue,\n    };\n\n    if (type === \"file\") {\n      formItemProps.valuePropName = \"data-value\";\n      formItemProps.getValueFromEvent = e => {\n        if (e && e.fileList[0]) {\n          helper.getBase64(e.file).then(value => {\n            form.setFieldsValue({ [name]: value });\n          });\n        }\n        return undefined;\n      };\n    }\n\n    return (\n      <React.Fragment key={name}>\n        <Form.Item {...formItemProps}>\n          <DynamicFormField field={field} form={form} />\n        </Form.Item>\n        {isFunction(contentAfter) ? contentAfter(form.getFieldValue(name)) : contentAfter}\n      </React.Fragment>\n    );\n  });\n}\n\nDynamicFormFields.propTypes = {\n  fields: PropTypes.arrayOf(FieldType),\n  feedbackIcons: PropTypes.bool,\n  form: AntdFormType.isRequired,\n};\n\nDynamicFormFields.defaultProps = {\n  fields: [],\n  feedbackIcons: false,\n};\n\nconst reducerForActionSet = (state, action) => {\n  if (action.inProgress) {\n    state.add(action.actionName);\n  } else {\n    state.delete(action.actionName);\n  }\n  return new Set(state);\n};\n\nfunction DynamicFormActions({ actions, isFormDirty }) {\n  const [inProgressActions, setActionInProgress] = useReducer(reducerForActionSet, new Set());\n\n  const handleAction = useCallback(action => {\n    const actionName = action.name;\n    if (isFunction(action.callback)) {\n      setActionInProgress({ actionName, inProgress: true });\n      action.callback(() => {\n        setActionInProgress({ actionName, inProgress: false });\n      });\n    }\n  }, []);\n  return actions.map(action => (\n    <Button\n      key={action.name}\n      htmlType=\"button\"\n      className={cx(\"m-t-10\", { \"pull-right\": action.pullRight })}\n      type={action.type}\n      disabled={isFormDirty && action.disableWhenDirty}\n      loading={inProgressActions.has(action.name)}\n      onClick={() => handleAction(action)}>\n      {action.name}\n    </Button>\n  ));\n}\n\nDynamicFormActions.propTypes = {\n  actions: PropTypes.arrayOf(ActionType),\n  isFormDirty: PropTypes.bool,\n};\n\nDynamicFormActions.defaultProps = {\n  actions: [],\n  isFormDirty: false,\n};\n\nexport default function DynamicForm({\n  id,\n  fields,\n  actions,\n  feedbackIcons,\n  hideSubmitButton,\n  defaultShowExtraFields,\n  saveText,\n  onSubmit,\n}) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showExtraFields, setShowExtraFields] = useState(defaultShowExtraFields);\n  const [form] = Form.useForm();\n  const extraFields = filter(fields, { extra: true });\n  const regularFields = difference(fields, extraFields);\n\n  const handleFinish = useCallback(\n    values => {\n      setIsSubmitting(true);\n      values = normalizeEmptyValuesToNull(fields, values);\n      onSubmit(\n        values,\n        msg => {\n          const { setFieldsValue, getFieldsValue } = form;\n          setIsSubmitting(false);\n          setFieldsValue(getFieldsValue()); // reset form touched state\n          notification.success(msg);\n        },\n        msg => {\n          setIsSubmitting(false);\n          notification.error(msg);\n        }\n      );\n    },\n    [form, fields, onSubmit]\n  );\n\n  const handleFinishFailed = useCallback(\n    ({ errorFields }) => {\n      form.scrollToField(errorFields[0].name);\n    },\n    [form]\n  );\n\n  return (\n    <Form\n      form={form}\n      id={id}\n      className=\"dynamic-form\"\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      onFinishFailed={handleFinishFailed}>\n      <DynamicFormFields fields={regularFields} feedbackIcons={feedbackIcons} form={form} />\n      {!isEmpty(extraFields) && (\n        <div className=\"extra-options\">\n          <Button\n            type=\"dashed\"\n            block\n            className=\"extra-options-button\"\n            onClick={() => setShowExtraFields(currentShowExtraFields => !currentShowExtraFields)}>\n            Additional Settings\n            <i\n              className={cx(\"fa m-l-5\", { \"fa-caret-up\": showExtraFields, \"fa-caret-down\": !showExtraFields })}\n              aria-hidden=\"true\"\n            />\n          </Button>\n          <Collapse collapsed={!showExtraFields} className=\"extra-options-content\">\n            <DynamicFormFields fields={extraFields} feedbackIcons={feedbackIcons} form={form} />\n          </Collapse>\n        </div>\n      )}\n      {!hideSubmitButton && (\n        <Button className=\"w-100 m-t-20\" type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n          {saveText}\n        </Button>\n      )}\n      <DynamicFormActions actions={actions} isFormDirty={form.isFieldsTouched()} />\n    </Form>\n  );\n}\n\nDynamicForm.propTypes = {\n  id: PropTypes.string,\n  fields: PropTypes.arrayOf(FieldType),\n  actions: PropTypes.arrayOf(ActionType),\n  feedbackIcons: PropTypes.bool,\n  hideSubmitButton: PropTypes.bool,\n  defaultShowExtraFields: PropTypes.bool,\n  saveText: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nDynamicForm.defaultProps = {\n  id: null,\n  fields: [],\n  actions: [],\n  feedbackIcons: false,\n  hideSubmitButton: false,\n  defaultShowExtraFields: false,\n  saveText: \"Save\",\n  onSubmit: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmpty, toUpper, includes, get, uniqueId } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Steps from \"antd/lib/steps\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Link from \"@/components/Link\";\nimport { PreviewCard } from \"@/components/PreviewCard\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\n\nconst { Step } = Steps;\nconst { Search } = Input;\n\nconst StepEnum = {\n  SELECT_TYPE: 0,\n  CONFIGURE_IT: 1,\n  DONE: 2,\n};\n\nclass CreateSourceDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    types: PropTypes.arrayOf(PropTypes.object),\n    sourceType: PropTypes.string.isRequired,\n    imageFolder: PropTypes.string.isRequired,\n    helpTriggerPrefix: PropTypes.string,\n    onCreate: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    types: [],\n    helpTriggerPrefix: null,\n  };\n\n  state = {\n    searchText: \"\",\n    selectedType: null,\n    savingSource: false,\n    currentStep: StepEnum.SELECT_TYPE,\n  };\n\n  formId = uniqueId(\"sourceForm\");\n\n  selectType = selectedType => {\n    this.setState({ selectedType, currentStep: StepEnum.CONFIGURE_IT });\n  };\n\n  resetType = () => {\n    if (this.state.currentStep === StepEnum.CONFIGURE_IT) {\n      this.setState({ searchText: \"\", selectedType: null, currentStep: StepEnum.SELECT_TYPE });\n    }\n  };\n\n  createSource = (values, successCallback, errorCallback) => {\n    const { selectedType, savingSource } = this.state;\n    if (!savingSource) {\n      this.setState({ savingSource: true, currentStep: StepEnum.DONE });\n      this.props\n        .onCreate(selectedType, values)\n        .then(data => {\n          successCallback(\"Saved.\");\n          this.props.dialog.close({ success: true, data });\n        })\n        .catch(error => {\n          this.setState({ savingSource: false, currentStep: StepEnum.CONFIGURE_IT });\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    }\n  };\n\n  renderTypeSelector() {\n    const { types } = this.props;\n    const { searchText } = this.state;\n    const filteredTypes = types.filter(\n      type => isEmpty(searchText) || includes(type.name.toLowerCase(), searchText.toLowerCase())\n    );\n    return (\n      <div className=\"m-t-10\">\n        <Search\n          placeholder=\"Search...\"\n          aria-label=\"Search\"\n          onChange={e => this.setState({ searchText: e.target.value })}\n          autoFocus\n          data-test=\"SearchSource\"\n        />\n        <div className=\"scrollbox p-5 m-t-10\" style={{ minHeight: \"30vh\", maxHeight: \"40vh\" }}>\n          {isEmpty(filteredTypes) ? (\n            <EmptyState className=\"\" />\n          ) : (\n            <List size=\"small\" dataSource={filteredTypes} renderItem={item => this.renderItem(item)} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderForm() {\n    const { imageFolder, helpTriggerPrefix } = this.props;\n    const { selectedType } = this.state;\n    const fields = helper.getFields(selectedType);\n    const helpTriggerType = `${helpTriggerPrefix}${toUpper(selectedType.type)}`;\n    return (\n      <div>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <img className=\"p-5\" src={`${imageFolder}/${selectedType.type}.png`} alt={selectedType.name} width=\"48\" />\n          <h4 className=\"m-0\">{selectedType.name}</h4>\n        </div>\n        <div className=\"text-right\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <DynamicForm id={this.formId} fields={fields} onSubmit={this.createSource} feedbackIcons hideSubmitButton />\n        {selectedType.type === \"databricks\" && (\n          <small>\n            By using the Databricks Data Source you agree to the Databricks JDBC/ODBC{\" \"}\n            <Link href=\"https://databricks.com/spark/odbc-driver-download\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Driver Download Terms and Conditions\n            </Link>\n            .\n          </small>\n        )}\n      </div>\n    );\n  }\n\n  renderItem(item) {\n    const { imageFolder } = this.props;\n    return (\n      <List.Item className=\"p-l-10 p-r-10 clickable\" onClick={() => this.selectType(item)}>\n        <PreviewCard\n          title={item.name}\n          imageUrl={`${imageFolder}/${item.type}.png`}\n          roundedImage={false}\n          data-test=\"PreviewItem\"\n          data-test-type={item.type}>\n          <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n        </PreviewCard>\n      </List.Item>\n    );\n  }\n\n  render() {\n    const { currentStep, savingSource } = this.state;\n    const { dialog, sourceType } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title={`Create a New ${sourceType}`}\n        footer={\n          currentStep === StepEnum.SELECT_TYPE\n            ? [\n                <Button key=\"cancel\" onClick={() => dialog.dismiss()} data-test=\"CreateSourceCancelButton\">\n                  Cancel\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" disabled>\n                  Create\n                </Button>,\n              ]\n            : [\n                <Button key=\"previous\" onClick={this.resetType}>\n                  Previous\n                </Button>,\n                <Button\n                  key=\"submit\"\n                  htmlType=\"submit\"\n                  form={this.formId}\n                  type=\"primary\"\n                  loading={savingSource}\n                  data-test=\"CreateSourceSaveButton\">\n                  Create\n                </Button>,\n              ]\n        }>\n        <div data-test=\"CreateSourceDialog\">\n          <Steps className=\"hidden-xs m-b-10\" size=\"small\" current={currentStep} progressDot>\n            {currentStep === StepEnum.CONFIGURE_IT ? (\n              <Step title={<a>Type Selection</a>} className=\"clickable\" onClick={this.resetType} />\n            ) : (\n              <Step title=\"Type Selection\" />\n            )}\n            <Step title=\"Configuration\" />\n            <Step title=\"Done\" />\n          </Steps>\n          {currentStep === StepEnum.SELECT_TYPE && this.renderTypeSelector()}\n          {currentStep !== StepEnum.SELECT_TYPE && this.renderForm()}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateSourceDialog);\n","import React from \"react\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\nimport location from \"@/services/location\";\nimport settingsMenu from \"@/services/settingsMenu\";\n\nfunction wrapSettingsTab(id, options, WrappedComponent) {\n  settingsMenu.add(id, options);\n\n  return function SettingsTab(props) {\n    const activeItem = settingsMenu.getActiveItem(location.path);\n    return (\n      <div className=\"settings-screen\">\n        <div className=\"container\">\n          <PageHeader title=\"Settings\" />\n          <div className=\"bg-white tiled\">\n            <Menu selectedKeys={[activeItem && activeItem.title]} selectable={false} mode=\"horizontal\">\n              {settingsMenu.getAvailableItems().map(item => (\n                <Menu.Item key={item.title}>\n                  <Link href={item.path} data-test=\"SettingsScreenItem\">\n                    {item.title}\n                  </Link>\n                </Menu.Item>\n              ))}\n            </Menu>\n            <div className=\"p-15\">\n              <div>\n                <WrappedComponent {...props} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default wrapSettingsTab;\n","import { has, map, isObject } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nexport const SCHEMA_NOT_SUPPORTED = 1;\nexport const SCHEMA_LOAD_ERROR = 2;\nexport const IMG_ROOT = \"static/images/db-logos\";\n\nfunction mapSchemaColumnsToObject(columns) {\n  return map(columns, column => (isObject(column) ? column : { name: column }));\n}\n\nconst DataSource = {\n  query: () => axios.get(\"api/data_sources\"),\n  get: ({ id }) => axios.get(`api/data_sources/${id}`),\n  types: () => axios.get(\"api/data_sources/types\"),\n  create: data => axios.post(`api/data_sources`, data),\n  save: data => axios.post(`api/data_sources/${data.id}`, data),\n  test: data => axios.post(`api/data_sources/${data.id}/test`),\n  delete: ({ id }) => axios.delete(`api/data_sources/${id}`),\n  fetchSchema: (data, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n\n    return axios\n      .get(`api/data_sources/${data.id}/schema`, { params })\n      .then(data => {\n        if (has(data, \"job\")) {\n          return fetchDataFromJob(data.job.id).catch(error =>\n            error.code === SCHEMA_NOT_SUPPORTED ? [] : Promise.reject(new Error(data.job.error))\n          );\n        }\n        return has(data, \"schema\") ? data.schema : Promise.reject();\n      })\n      .then(tables => map(tables, table => ({ ...table, columns: mapSchemaColumnsToObject(table.columns) })));\n  },\n};\n\nexport default DataSource;\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport { policy } from \"@/services/policy\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nexport function DataSourcesListComponent({ dataSources, onClickCreate }) {\n  const items = dataSources.map(dataSource => ({\n    title: dataSource.name,\n    imgSrc: `${IMG_ROOT}/${dataSource.type}.png`,\n    href: `data_sources/${dataSource.id}`,\n  }));\n\n  return isEmpty(dataSources) ? (\n    <div className=\"text-center\">\n      There are no data sources yet.\n      {policy.isCreateDataSourceEnabled() && (\n        <div className=\"m-t-5\">\n          <PlainButton type=\"link\" onClick={onClickCreate} data-test=\"CreateDataSourceLink\">\n            Click here\n          </PlainButton>{\" \"}\n          to add one.\n        </div>\n      )}\n    </div>\n  ) : (\n    <CardsList items={items} />\n  );\n}\n\nregisterComponent(\"DataSourcesListComponent\", DataSourcesListComponent);\n\nclass DataSourcesList extends React.Component {\n  static propTypes = {\n    isNewDataSourcePage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDataSourcePage: false,\n    onError: () => {},\n  };\n\n  state = {\n    dataSourceTypes: [],\n    dataSources: [],\n    loading: true,\n  };\n\n  newDataSourceDialog = null;\n\n  componentDidMount() {\n    Promise.all([DataSource.query(), DataSource.types()])\n      .then(values =>\n        this.setState(\n          {\n            dataSources: values[0],\n            dataSourceTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDataSourcePage) {\n              if (policy.canCreateDataSource()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"data_sources\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  componentWillUnmount() {\n    if (this.newDataSourceDialog) {\n      this.newDataSourceDialog.dismiss();\n    }\n  }\n\n  createDataSource = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return DataSource.create(target).then(dataSource => {\n      this.setState({ loading: true });\n      DataSource.query().then(dataSources => this.setState({ dataSources, loading: false }));\n      return dataSource;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    recordEvent(\"view\", \"page\", \"data_sources/new\");\n    this.newDataSourceDialog = CreateSourceDialog.showModal({\n      types: reject(this.state.dataSourceTypes, \"deprecated\"),\n      sourceType: \"Data Source\",\n      imageFolder: IMG_ROOT,\n      helpTriggerPrefix: \"DS_\",\n      onCreate: this.createDataSource,\n    });\n\n    this.newDataSourceDialog\n      .onClose((result = {}) => {\n        this.newDataSourceDialog = null;\n        if (result.success) {\n          navigateTo(`data_sources/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        this.newDataSourceDialog = null;\n        navigateTo(\"data_sources\", true);\n      });\n  };\n\n  render() {\n    const newDataSourceProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDataSourceEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDataSourceEnabled(),\n      \"data-test\": \"CreateDataSourceButton\",\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDataSourceProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Data Source\n          </Button>\n          <DynamicComponent name=\"DataSourcesListExtra\" />\n        </div>\n        {this.state.loading ? (\n          <LoadingState className=\"\" />\n        ) : (\n          <DynamicComponent\n            name=\"DataSourcesListComponent\"\n            dataSources={this.state.dataSources}\n            onClickCreate={this.showCreateSourceDialog}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst DataSourcesListPage = wrapSettingsTab(\n  \"DataSources.List\",\n  {\n    permission: \"admin\",\n    title: \"Data Sources\",\n    path: \"data_sources\",\n    order: 1,\n  },\n  DataSourcesList\n);\n\nroutes.register(\n  \"DataSources.List\",\n  routeWithUserSession({\n    path: \"/data_sources\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"DataSources.New\",\n  routeWithUserSession({\n    path: \"/data_sources/new\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} isNewDataSourcePage />,\n  })\n);\n","import { get, find, toUpper } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDataSource extends React.Component {\n  static propTypes = {\n    dataSourceId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    dataSource: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    DataSource.get({ id: this.props.dataSourceId })\n      .then(dataSource => {\n        const { type } = dataSource;\n        this.setState({ dataSource });\n        DataSource.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDataSource = (values, successCallback, errorCallback) => {\n    const { dataSource } = this.state;\n    helper.updateTargetWithValues(dataSource, values);\n    DataSource.save(dataSource)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDataSource = callback => {\n    const { dataSource } = this.state;\n\n    const doDelete = () => {\n      DataSource.delete(dataSource)\n        .then(() => {\n          notification.success(\"Data source deleted successfully.\");\n          navigateTo(\"data_sources\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Data Source\",\n      content: \"Are you sure you want to delete this data source?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  testConnection = callback => {\n    const { dataSource } = this.state;\n    DataSource.test({ id: dataSource.id })\n      .then(httpResponse => {\n        if (httpResponse.ok) {\n          notification.success(\"Success\");\n        } else {\n          notification.error(\"Connection Test Failed:\", httpResponse.message, { duration: 10 });\n        }\n        callback();\n      })\n      .catch(() => {\n        notification.error(\n          \"Connection Test Failed:\",\n          \"Unknown error occurred while performing connection test. Please try again later.\",\n          { duration: 10 }\n        );\n        callback();\n      });\n  };\n\n  renderForm() {\n    const { dataSource, type } = this.state;\n    const fields = helper.getFields(type, dataSource);\n    const helpTriggerType = `DS_${toUpper(type.type)}`;\n    const formProps = {\n      fields,\n      type,\n      actions: [\n        { name: \"Delete\", type: \"danger\", callback: this.deleteDataSource },\n        { name: \"Test Connection\", pullRight: true, callback: this.testConnection, disableWhenDirty: true },\n      ],\n      onSubmit: this.saveDataSource,\n      feedbackIcons: true,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, dataSource),\n    };\n\n    return (\n      <div className=\"row\" data-test=\"DataSource\">\n        <div className=\"text-right m-r-10\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDataSourcePage = wrapSettingsTab(\"DataSources.Edit\", null, EditDataSource);\n\nroutes.register(\n  \"DataSources.Edit\",\n  routeWithUserSession({\n    path: \"/data_sources/:dataSourceId\",\n    title: \"Data Sources\",\n    render: pageProps => <EditDataSourcePage {...pageProps} />,\n  })\n);\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport { policy } from \"@/services/policy\";\nimport routes from \"@/services/routes\";\n\nclass DestinationsList extends React.Component {\n  static propTypes = {\n    isNewDestinationPage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDestinationPage: false,\n    onError: () => {},\n  };\n\n  state = {\n    destinationTypes: [],\n    destinations: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    Promise.all([Destination.query(), Destination.types()])\n      .then(values =>\n        this.setState(\n          {\n            destinations: values[0],\n            destinationTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDestinationPage) {\n              if (policy.canCreateDestination()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"destinations\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  createDestination = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return Destination.create(target).then(destination => {\n      this.setState({ loading: true });\n      Destination.query().then(destinations => this.setState({ destinations, loading: false }));\n      return destination;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    CreateSourceDialog.showModal({\n      types: reject(this.state.destinationTypes, \"deprecated\"),\n      sourceType: \"Alert Destination\",\n      imageFolder: IMG_ROOT,\n      onCreate: this.createDestination,\n    })\n      .onClose((result = {}) => {\n        if (result.success) {\n          navigateTo(`destinations/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        navigateTo(\"destinations\", true);\n      });\n  };\n\n  renderDestinations() {\n    const { destinations } = this.state;\n    const items = destinations.map(destination => ({\n      title: destination.name,\n      imgSrc: `${IMG_ROOT}/${destination.type}.png`,\n      href: `destinations/${destination.id}`,\n    }));\n\n    return isEmpty(destinations) ? (\n      <div className=\"text-center\">\n        There are no alert destinations yet.\n        {policy.isCreateDestinationEnabled() && (\n          <div className=\"m-t-5\">\n            <PlainButton type=\"link\" onClick={this.showCreateSourceDialog}>\n              Click here\n            </PlainButton>{\" \"}\n            to add one.\n          </div>\n        )}\n      </div>\n    ) : (\n      <CardsList items={items} />\n    );\n  }\n\n  render() {\n    const newDestinationProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDestinationEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDestinationEnabled(),\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDestinationProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Alert Destination\n          </Button>\n        </div>\n        {this.state.loading ? <LoadingState className=\"\" /> : this.renderDestinations()}\n      </div>\n    );\n  }\n}\n\nconst DestinationsListPage = wrapSettingsTab(\n  \"AlertDestinations.List\",\n  {\n    permission: \"admin\",\n    title: \"Alert Destinations\",\n    path: \"destinations\",\n    order: 4,\n  },\n  DestinationsList\n);\n\nroutes.register(\n  \"AlertDestinations.List\",\n  routeWithUserSession({\n    path: \"/destinations\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"AlertDestinations.New\",\n  routeWithUserSession({\n    path: \"/destinations/new\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} isNewDestinationPage />,\n  })\n);\n","import { get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDestination extends React.Component {\n  static propTypes = {\n    destinationId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    destination: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    Destination.get({ id: this.props.destinationId })\n      .then(destination => {\n        const { type } = destination;\n        this.setState({ destination });\n        Destination.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDestination = (values, successCallback, errorCallback) => {\n    const { destination } = this.state;\n    helper.updateTargetWithValues(destination, values);\n    Destination.save(destination)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDestination = callback => {\n    const { destination } = this.state;\n\n    const doDelete = () => {\n      Destination.delete(destination)\n        .then(() => {\n          notification.success(\"Alert destination deleted successfully.\");\n          navigateTo(\"destinations\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Alert Destination\",\n      content: \"Are you sure you want to delete this alert destination?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  renderForm() {\n    const { destination, type } = this.state;\n    const fields = helper.getFields(type, destination);\n    const formProps = {\n      fields,\n      type,\n      actions: [{ name: \"Delete\", type: \"danger\", callback: this.deleteDestination }],\n      onSubmit: this.saveDestination,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, destination),\n      feedbackIcons: true,\n    };\n\n    return (\n      <div className=\"row\" data-test=\"Destination\">\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDestinationPage = wrapSettingsTab(\"AlertDestinations.Edit\", null, EditDestination);\n\nroutes.register(\n  \"AlertDestinations.Edit\",\n  routeWithUserSession({\n    path: \"/destinations/:destinationId\",\n    title: \"Alert Destinations\",\n    render: pageProps => <EditDestinationPage {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nclass CreateGroupDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n  };\n\n  state = {\n    name: \"\",\n  };\n\n  save = () => {\n    this.props.dialog.close({\n      name: this.state.name,\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal {...dialog.props} title=\"Create a New Group\" okText=\"Create\" onOk={() => this.save()}>\n        <Input\n          className=\"form-control\"\n          defaultValue={this.state.name}\n          onChange={event => this.setState({ name: event.target.value })}\n          onPressEnter={() => this.save()}\n          placeholder=\"Group Name\"\n          aria-label=\"Group name\"\n          autoFocus\n        />\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateGroupDialog);\n","import { axios } from \"@/services/axios\";\n\nconst Group = {\n  query: () => axios.get(\"api/groups\"),\n  get: ({ id }) => axios.get(`api/groups/${id}`),\n  create: data => axios.post(`api/groups`, data),\n  save: data => axios.post(`api/groups/${data.id}`, data),\n  delete: data => axios.delete(`api/groups/${data.id}`),\n  members: ({ id }) => axios.get(`api/groups/${id}/members`),\n  addMember: ({ id }, data) => axios.post(`api/groups/${id}/members`, data),\n  removeMember: ({ id, userId }) => axios.delete(`api/groups/${id}/members/${userId}`),\n  dataSources: ({ id }) => axios.get(`api/groups/${id}/data_sources`),\n  addDataSource: ({ id }, data) => axios.post(`api/groups/${id}/data_sources`, data),\n  removeDataSource: ({ id, dataSourceId }) => axios.delete(`api/groups/${id}/data_sources/${dataSourceId}`),\n  updateDataSource: ({ id, dataSourceId }, data) => axios.post(`api/groups/${id}/data_sources/${dataSourceId}`, data),\n};\n\nexport default Group;\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport notification from \"@/services/notification\";\nimport Group from \"@/services/group\";\n\nfunction deleteGroup(event, group, onGroupDeleted) {\n  Modal.confirm({\n    title: \"Delete Group\",\n    content: \"Are you sure you want to delete this group?\",\n    okText: \"Yes\",\n    okType: \"danger\",\n    cancelText: \"No\",\n    onOk: () => {\n      Group.delete(group).then(() => {\n        notification.success(\"Group deleted successfully.\");\n        onGroupDeleted();\n      });\n    },\n  });\n}\n\nexport default function DeleteGroupButton({ group, title, onClick, children, ...props }) {\n  if (!group) {\n    return null;\n  }\n  const button = (\n    <Button {...props} type=\"danger\" onClick={event => deleteGroup(event, group, onClick)}>\n      {children}\n    </Button>\n  );\n\n  if (isString(title) && title !== \"\") {\n    return (\n      <Tooltip placement=\"top\" title={title} mouseLeaveDelay={0}>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n}\n\nDeleteGroupButton.propTypes = {\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nDeleteGroupButton.defaultProps = {\n  group: null,\n  title: null,\n  onClick: () => {},\n  children: null,\n};\n","import React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport CreateGroupDialog from \"@/components/groups/CreateGroupDialog\";\nimport DeleteGroupButton from \"@/components/groups/DeleteGroupButton\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Group from \"@/services/group\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nclass GroupsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom(\n      (text, group) => (\n        <div>\n          <Link href={\"groups/\" + group.id}>{group.name}</Link>\n          {group.type === \"builtin\" && <span className=\"label label-default m-l-10\">built-in</span>}\n        </div>\n      ),\n      {\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.custom(\n      (text, group) => (\n        <Button.Group>\n          <Link.Button href={`groups/${group.id}`}>Members</Link.Button>\n          {currentUser.isAdmin && <Link.Button href={`groups/${group.id}/data_sources`}>Data Sources</Link.Button>}\n        </Button.Group>\n      ),\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom(\n      (text, group) => {\n        const canRemove = group.type !== \"builtin\";\n        return (\n          <DeleteGroupButton\n            className=\"w-100\"\n            disabled={!canRemove}\n            group={group}\n            title={canRemove ? null : \"Cannot delete built-in group\"}\n            onClick={() => this.onGroupDeleted()}>\n            Delete\n          </DeleteGroupButton>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"text-nowrap p-l-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  createGroup = () => {\n    CreateGroupDialog.showModal().onClose(group =>\n      Group.create(group).then(newGroup => navigateTo(`groups/${newGroup.id}`))\n    );\n  };\n\n  onGroupDeleted = () => {\n    this.props.controller.updatePagination({ page: 1 });\n    this.props.controller.update();\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div data-test=\"GroupList\">\n        {currentUser.isAdmin && (\n          <div className=\"m-b-15\">\n            <Button type=\"primary\" onClick={this.createGroup}>\n              <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n              New Group\n            </Button>\n          </div>\n        )}\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              showHeader={false}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst GroupsListPage = wrapSettingsTab(\n  \"Groups.List\",\n  {\n    permission: \"list_users\",\n    title: \"Groups\",\n    path: \"groups\",\n    order: 3,\n  },\n  itemsList(\n    GroupsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return Group.query.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"Groups.List\",\n  routeWithUserSession({\n    path: \"/groups\",\n    title: \"Groups\",\n    render: pageProps => <GroupsListPage {...pageProps} currentPage=\"groups\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\n\nfunction updateGroupName(group, name, onChange) {\n  group.name = name;\n  Group.save(group);\n  onChange();\n}\n\nexport default function GroupName({ group, onChange, ...props }) {\n  if (!group) {\n    return null;\n  }\n\n  const canEdit = currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <h3 {...props}>\n      <EditInPlace\n        className=\"edit-in-place\"\n        isEditable={canEdit}\n        ignoreBlanks\n        onDone={name => updateGroupName(group, name, onChange)}\n        value={group.name}\n      />\n    </h3>\n  );\n}\n\nGroupName.propTypes = {\n  group: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }),\n  onChange: PropTypes.func,\n};\n\nGroupName.defaultProps = {\n  group: null,\n  onChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Divider from \"antd/lib/divider\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport { ControllerType } from \"@/components/items-list/ItemsList\";\nimport DeleteGroupButton from \"./DeleteGroupButton\";\n\nimport { currentUser } from \"@/services/auth\";\n\nexport default function DetailsPageSidebar({\n  controller,\n  group,\n  items,\n  canAddMembers,\n  onAddMembersClick,\n  canAddDataSources,\n  onAddDataSourcesClick,\n  onGroupDeleted,\n}) {\n  const canRemove = group && currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <React.Fragment>\n      <Sidebar.Menu items={items} selected={controller.params.currentPage} />\n      {canAddMembers && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddMembersClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Members\n        </Button>\n      )}\n      {canAddDataSources && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddDataSourcesClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Data Sources\n        </Button>\n      )}\n      {canRemove && (\n        <React.Fragment>\n          <Divider dashed className=\"m-t-10 m-b-10\" />\n          <DeleteGroupButton className=\"w-100\" group={group} onClick={onGroupDeleted}>\n            Delete Group\n          </DeleteGroupButton>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nDetailsPageSidebar.propTypes = {\n  controller: ControllerType.isRequired,\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n\n  canAddMembers: PropTypes.bool,\n  onAddMembersClick: PropTypes.func,\n\n  canAddDataSources: PropTypes.bool,\n  onAddDataSourcesClick: PropTypes.func,\n\n  onGroupDeleted: PropTypes.func,\n};\n\nDetailsPageSidebar.defaultProps = {\n  group: null,\n\n  canAddMembers: false,\n  onAddMembersClick: null,\n\n  canAddDataSources: false,\n  onAddDataSourcesClick: null,\n\n  onGroupDeleted: null,\n};\n","import { filter, map, includes, toLower } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport DownOutlinedIcon from \"@ant-design/icons/DownOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { DataSourcePreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport DataSource from \"@/services/data-source\";\nimport routes from \"@/services/routes\";\n\nclass GroupDataSources extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, datasource) => <DataSourcePreviewCard dataSource={datasource} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, datasource) => {\n        const menu = (\n          <Menu\n            selectedKeys={[datasource.view_only ? \"viewonly\" : \"full\"]}\n            onClick={item => this.setDataSourcePermissions(datasource, item.key)}>\n            <Menu.Item key=\"full\">Full Access</Menu.Item>\n            <Menu.Item key=\"viewonly\">View Only</Menu.Item>\n          </Menu>\n        );\n\n        return (\n          <Dropdown trigger={[\"click\"]} overlay={menu}>\n            <Button className=\"w-100\" aria-label=\"Permissions\">\n              {datasource.view_only ? \"View Only\" : \"Full Access\"}\n              <DownOutlinedIcon aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"p-r-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n    Columns.custom(\n      (text, datasource) => (\n        <Button className=\"w-100\" type=\"danger\" onClick={() => this.removeGroupDataSource(datasource)}>\n          Remove\n        </Button>\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupDataSource = datasource => {\n    Group.removeDataSource({ id: this.groupId, dataSourceId: datasource.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove data source from group.\");\n      });\n  };\n\n  setDataSourcePermissions = (datasource, permission) => {\n    const viewOnly = permission !== \"full\";\n\n    Group.updateDataSource({ id: this.groupId, dataSourceId: datasource.id }, { view_only: viewOnly })\n      .then(() => {\n        datasource.view_only = viewOnly;\n        this.forceUpdate();\n      })\n      .catch(() => {\n        notification.error(\"Failed change data source permissions.\");\n      });\n  };\n\n  addDataSources = () => {\n    const allDataSources = DataSource.query();\n    const alreadyAddedDataSources = map(this.props.controller.allItems, ds => ds.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Data Sources\",\n      inputPlaceholder: \"Search data sources...\",\n      selectedItemsTitle: \"New Data Sources\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return allDataSources.then(items => filter(items, ds => includes(toLower(ds.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedDataSources, item.id);\n        return {\n          content: (\n            <DataSourcePreviewCard dataSource={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </DataSourcePreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <DataSourcePreviewCard dataSource={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </DataSourcePreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, ds => Group.addDataSource({ id: this.groupId }, { data_source_id: ds.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddDataSources={currentUser.isAdmin}\n              onAddDataSourcesClick={this.addDataSources}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no data sources in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addDataSources}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Data Sources\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupDataSourcesPage = wrapSettingsTab(\n  \"Groups.DataSources\",\n  null,\n  itemsList(\n    GroupDataSources,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.dataSources.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.DataSources\",\n  routeWithUserSession({\n    path: \"/groups/:groupId/data_sources\",\n    title: \"Group Data Sources\",\n    render: pageProps => <GroupDataSourcesPage {...pageProps} currentPage=\"datasources\" />,\n  })\n);\n","import { includes, map } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport User from \"@/services/user\";\nimport routes from \"@/services/routes\";\n\nclass GroupMembers extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, user) => {\n        if (!this.group) {\n          return null;\n        }\n\n        // cannot remove self from built-in groups\n        if (this.group.type === \"builtin\" && currentUser.id === user.id) {\n          return null;\n        }\n        return (\n          <Button className=\"w-100\" type=\"danger\" onClick={event => this.removeGroupMember(event, user)}>\n            Remove\n          </Button>\n        );\n      },\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupMember = (event, user) =>\n    Group.removeMember({ id: this.groupId, userId: user.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove member from group.\");\n      });\n\n  addMembers = () => {\n    const alreadyAddedUsers = map(this.props.controller.allItems, u => u.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Members\",\n      inputPlaceholder: \"Search users...\",\n      selectedItemsTitle: \"New Members\",\n      searchItems: searchTerm => User.query({ q: searchTerm }).then(({ results }) => results),\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedUsers, item.id);\n        return {\n          content: (\n            <UserPreviewCard user={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </UserPreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <UserPreviewCard user={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </UserPreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, u => Group.addMember({ id: this.groupId }, { user_id: u.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddMembers={currentUser.isAdmin}\n              onAddMembersClick={this.addMembers}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no members in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addMembers}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Members\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupMembersPage = wrapSettingsTab(\n  \"Groups.Members\",\n  null,\n  itemsList(\n    GroupMembers,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.members.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.Members\",\n  routeWithUserSession({\n    path: \"/groups/:groupId\",\n    title: \"Group Members\",\n    render: pageProps => <GroupMembersPage {...pageProps} currentPage=\"users\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport default function QueriesListEmptyState({ page, searchTerm, selectedTags }) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"queries\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark queries as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"archive\":\n      return <BigMessage message=\"Archived queries will be listed here.\" icon=\"fa-archive\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_query\") ? (\n        <span>\n          <Link.Button href=\"queries/new\" type=\"primary\" size=\"small\">\n            Create your first query!\n          </Link.Button>{\" \"}\n          <HelpTrigger className=\"f-13\" type=\"QUERIES\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"QueriesList.EmptyState\">\n          <EmptyState\n            icon=\"fa fa-code\"\n            illustration=\"query\"\n            description=\"Getting the data from your datasources.\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"QUERIES\" />}\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nQueriesListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n","import React, { useEffect, useRef } from \"react\";\nimport cx from \"classnames\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Query } from \"@/services/query\";\nimport { currentUser } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport QueriesListEmptyState from \"./QueriesListEmptyState\";\n\nimport \"./queries-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"queries\",\n    title: \"All Queries\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-code\" />,\n  },\n  {\n    key: \"my\",\n    href: \"queries/my\",\n    title: \"My Queries\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"queries/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n  {\n    key: \"archive\",\n    href: \"queries/archive\",\n    title: \"Archived\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-archive\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n          {item.name}\n        </Link>\n        <QueryTagsControl className=\"d-block\" tags={item.tags} isDraft={item.is_draft} isArchived={item.is_archived} />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Last Executed At\",\n    field: \"retrieved_at\",\n    orderByField: \"executed_at\",\n    width: \"1%\",\n  }),\n  Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n    title: \"Refresh Schedule\",\n    field: \"schedule\",\n    width: \"1%\",\n  }),\n];\n\nfunction QueriesListExtraActions(props) {\n  return <DynamicComponent name=\"QueriesList.Actions\" {...props} />;\n}\n\nfunction QueriesList({ controller }) {\n  const controllerRef = useRef();\n  controllerRef.current = controller;\n\n  useEffect(() => {\n    const unlistenLocationChanges = location.listen((unused, action) => {\n      const searchTerm = location.search.q || \"\";\n      if (action === \"PUSH\" && searchTerm !== controllerRef.current.searchTerm) {\n        controllerRef.current.updateSearch(searchTerm);\n      }\n    });\n\n    return () => {\n      unlistenLocationChanges();\n    };\n  }, []);\n\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, QueriesListExtraActions);\n\n  return (\n    <div className=\"page-queries-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_query\") ? (\n              <Link.Button block type=\"primary\" href=\"queries/new\">\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Query\n              </Link.Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Queries...\"\n              label=\"Search queries\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/queries/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {controller.isLoaded && controller.isEmpty ? (\n              <QueriesListEmptyState\n                page={controller.params.currentPage}\n                searchTerm={controller.searchTerm}\n                selectedTags={controller.selectedTags}\n              />\n            ) : (\n              <React.Fragment>\n                <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                  <ExtraActionsComponent selectedItems={selectedItems} />\n                </div>\n                <div className=\"bg-white tiled table-responsive\">\n                  <ItemsTable\n                    items={controller.pageItems}\n                    loading={!controller.isLoaded}\n                    columns={tableColumns}\n                    orderByField={controller.orderByField}\n                    orderByReverse={controller.orderByReverse}\n                    toggleSorting={controller.toggleSorting}\n                  />\n                  <Paginator\n                    showPageSizeSelect\n                    totalCount={controller.totalItemsCount}\n                    pageSize={controller.itemsPerPage}\n                    onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                    page={controller.page}\n                    onChange={page => controller.updatePagination({ page })}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nQueriesList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst QueriesListPage = itemsList(\n  QueriesList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Query.query.bind(Query),\n          my: Query.myQueries.bind(Query),\n          favorites: Query.favorites.bind(Query),\n          archive: Query.archive.bind(Query),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Query(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Queries.List\",\n  routeWithUserSession({\n    path: \"/queries\",\n    title: \"Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Queries.Favorites\",\n  routeWithUserSession({\n    path: \"/queries/favorites\",\n    title: \"Favorite Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Queries.Archived\",\n  routeWithUserSession({\n    path: \"/queries/archive\",\n    title: \"Archived Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"archive\" />,\n  })\n);\nroutes.register(\n  \"Queries.My\",\n  routeWithUserSession({\n    path: \"/queries/my\",\n    title: \"My Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import d3 from \"d3\";\nimport React, { useRef, useMemo, useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Resizable as ReactResizable } from \"react-resizable\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nimport \"./index.less\";\n\nexport default function Resizable({ toggleShortcut, direction, sizeAttribute, children }) {\n  const [size, setSize] = useState(0);\n  const elementRef = useRef();\n  const wasUsingTouchEventsRef = useRef(false);\n  const wasResizedRef = useRef(false);\n\n  const sizeProp = direction === \"horizontal\" ? \"width\" : \"height\";\n  sizeAttribute = sizeAttribute || sizeProp;\n\n  const getElementSize = useCallback(() => {\n    if (!elementRef.current) {\n      return 0;\n    }\n    return Math.floor(elementRef.current.getBoundingClientRect()[sizeProp]);\n  }, [sizeProp]);\n\n  const savedSize = useRef(null);\n  const toggle = useCallback(() => {\n    if (!elementRef.current) {\n      return;\n    }\n\n    const element = d3.select(elementRef.current);\n    let targetSize;\n    if (savedSize.current === null) {\n      targetSize = \"0px\";\n      savedSize.current = `${getElementSize()}px`;\n    } else {\n      targetSize = savedSize.current;\n      savedSize.current = null;\n    }\n\n    element\n      .style(sizeAttribute, savedSize.current || \"0px\")\n      .transition()\n      .duration(200)\n      .ease(\"swing\")\n      .style(sizeAttribute, targetSize);\n\n    // update state to new element's size\n    setSize(parseInt(targetSize) || 0);\n  }, [getElementSize, sizeAttribute]);\n\n  const resizeHandle = useMemo(\n    () => (\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n      <span\n        className={`react-resizable-handle react-resizable-handle-${direction}`}\n        role=\"separator\"\n        onClick={() => {\n          // TODO: add key controls\n          // On desktops resize uses `mousedown`/`mousemove`/`mouseup` events, and there is a conflict\n          // with this `click` handler: after user releases mouse - this handler will be executed.\n          // So we use `wasResized` flag to check if there was actual resize or user just pressed and released\n          // left mouse button (see also resize event handlers where ths flag is set).\n          // On mobile devices `touchstart`/`touchend` events wll be used, so it's safe to just execute this handler.\n          // To detect which set of events was actually used during particular resize operation, we pass\n          // `onMouseDown` handler to draggable core and check event type there (see also that handler's code).\n          if (wasUsingTouchEventsRef.current || !wasResizedRef.current) {\n            toggle();\n          }\n          wasUsingTouchEventsRef.current = false;\n          wasResizedRef.current = false;\n        }}\n      />\n    ),\n    [direction, toggle]\n  );\n\n  useEffect(() => {\n    if (toggleShortcut) {\n      const shortcuts = {\n        [toggleShortcut]: toggle,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [toggleShortcut, toggle]);\n\n  const resizeEventHandlers = useMemo(\n    () => ({\n      onResizeStart: () => {\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `draggableCore::onMouseDown` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n      onResize: (unused, data) => {\n        // update element directly for better UI responsiveness\n        d3.select(elementRef.current).style(sizeAttribute, `${data.size[sizeProp]}px`);\n        setSize(data.size[sizeProp]);\n        wasResizedRef.current = true;\n      },\n      onResizeStop: () => {\n        if (wasResizedRef.current) {\n          savedSize.current = null;\n        }\n      },\n    }),\n    [sizeProp, getElementSize, sizeAttribute]\n  );\n\n  const draggableCoreOptions = useMemo(\n    () => ({\n      onMouseDown: e => {\n        // In some cases this handler is executed twice during the same resize operation - first time\n        // with `touchstart` event and second time with `mousedown` (probably emulated by browser).\n        // Therefore we set the flag only when we receive `touchstart` because in ths case it's definitely\n        // mobile browser (desktop browsers will also send `mousedown` but never `touchstart`).\n        if (e.type === \"touchstart\") {\n          wasUsingTouchEventsRef.current = true;\n        }\n\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `onResizeStart` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n    }),\n    [getElementSize]\n  );\n\n  if (!children) {\n    return null;\n  }\n\n  children = React.createElement(children.type, { ...children.props, ref: elementRef });\n\n  return (\n    <ReactResizable\n      className=\"resizable-component\"\n      axis={direction === \"horizontal\" ? \"x\" : \"y\"}\n      resizeHandles={[direction === \"horizontal\" ? \"e\" : \"s\"]}\n      handle={resizeHandle}\n      width={direction === \"horizontal\" ? size : 0}\n      height={direction === \"vertical\" ? size : 0}\n      minConstraints={[0, 0]}\n      {...resizeEventHandlers}\n      draggableOpts={draggableCoreOptions}>\n      {children}\n    </ReactResizable>\n  );\n}\n\nResizable.propTypes = {\n  direction: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\n  sizeAttribute: PropTypes.string,\n  toggleShortcut: PropTypes.string,\n  children: PropTypes.element,\n};\n\nResizable.defaultProps = {\n  direction: \"horizontal\",\n  sizeAttribute: null, // \"width\"/\"height\" - depending on `direction`\n  toggleShortcut: null,\n  children: null,\n};\n","import { trim } from \"lodash\";\nimport sqlFormatter from \"sql-formatter\";\n\ninterface QueryFormatterMap {\n  [syntax: string]: (queryText: string) => string;\n}\n\nconst QueryFormatters: QueryFormatterMap = {\n  sql: queryText => sqlFormatter.format(trim(queryText)),\n  json: queryText => JSON.stringify(JSON.parse(queryText), null, 4),\n};\n\nexport function isFormatQueryAvailable(syntax: string) {\n  return syntax in QueryFormatters;\n}\n\nexport function formatQuery(queryText: string, syntax: string) {\n  if (!isFormatQueryAvailable(syntax)) {\n    return queryText;\n  }\n  const formatter = QueryFormatters[syntax];\n  return formatter(queryText);\n}\n","import { isNil, isEmpty } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\n\nexport default function useQueryFlags(query, dataSource = null) {\n  dataSource = dataSource || { view_only: true };\n\n  return useMemo(\n    () => ({\n      // state flags\n      isNew: isNil(query.id),\n      isDraft: query.is_draft,\n      isArchived: query.is_archived,\n\n      // permissions flags\n      canCreate: currentUser.hasPermission(\"create_query\"),\n      canView: currentUser.hasPermission(\"view_query\"),\n      canEdit: currentUser.hasPermission(\"edit_query\") && policy.canEdit(query),\n      canViewSource: currentUser.hasPermission(\"view_source\"),\n      canExecute:\n        !isEmpty(query.query) &&\n        policy.canRun(query) &&\n        (query.is_safe || (currentUser.hasPermission(\"execute_query\") && !dataSource.view_only)),\n      canFork: currentUser.hasPermission(\"edit_query\") && !dataSource.view_only,\n      canSchedule: currentUser.hasPermission(\"schedule_query\"),\n    }),\n    [query, dataSource.view_only]\n  );\n}\n","import { extend } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction confirmArchive() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Archive Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">Are you sure you want to archive this query?</div>\n          <div>All alerts and dashboard widgets created with its visualizations will be deleted.</div>\n        </React.Fragment>\n      ),\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doArchiveQuery(query) {\n  return Query.delete({ id: query.id })\n    .then(() => {\n      return extend(query.clone(), { is_archived: true, schedule: null });\n    })\n    .catch(error => {\n      notification.error(\"Query could not be archived.\");\n      return Promise.reject(error);\n    });\n}\n\nexport default function useArchiveQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    confirmArchive()\n      .then(() => doArchiveQuery(query))\n      .then(handleChange);\n  }, [query, handleChange]);\n}\n","import { isNil, isObject, extend, keys, map, omit, pick, uniq, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { policy } from \"@/services/policy\";\n\nclass SaveQueryError extends Error {\n  constructor(message, detailedMessage = null) {\n    super(message);\n    this.detailedMessage = detailedMessage;\n  }\n}\n\nclass SaveQueryConflictError extends SaveQueryError {\n  constructor() {\n    super(\n      \"Changes not saved\",\n      <React.Fragment>\n        <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n        <div>Please copy/backup your changes and reload this page.</div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction confirmOverwrite() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Overwrite Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n          <div>Are you sure you want to overwrite the query with your version?</div>\n        </React.Fragment>\n      ),\n      okText: \"Overwrite\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doSaveQuery(data, { canOverwrite = false } = {}) {\n  // omit parameter properties that don't need to be stored\n  if (isObject(data.options) && data.options.parameters) {\n    data.options = {\n      ...data.options,\n      parameters: map(data.options.parameters, p => p.toSaveableObject()),\n    };\n  }\n\n  return Query.save(data).catch(error => {\n    if (get(error, \"response.status\") === 409) {\n      if (canOverwrite) {\n        return confirmOverwrite()\n          .then(() => Query.save(omit(data, [\"version\"])))\n          .catch(() => Promise.reject(new SaveQueryConflictError()));\n      }\n      return Promise.reject(new SaveQueryConflictError());\n    }\n    return Promise.reject(new SaveQueryError(\"Query could not be saved\"));\n  });\n}\n\nexport default function useUpdateQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (data = null, { successMessage = \"Query saved\" } = {}) => {\n      if (isObject(data)) {\n        // Don't save new query with partial data\n        if (query.isNew()) {\n          handleChange(extend(query.clone(), data));\n          return;\n        }\n        data = { ...data, id: query.id, version: query.version };\n      } else {\n        data = pick(query, [\n          \"id\",\n          \"version\",\n          \"schedule\",\n          \"query\",\n          \"description\",\n          \"name\",\n          \"data_source_id\",\n          \"options\",\n          \"latest_query_data_id\",\n          \"is_draft\",\n          \"tags\",\n        ]);\n      }\n\n      return doSaveQuery(data, { canOverwrite: policy.canEdit(query) })\n        .then(updatedQuery => {\n          if (!isNil(successMessage)) {\n            notification.success(successMessage);\n          }\n          handleChange(\n            extend(\n              query.clone(),\n              // if server returned completely new object (currently possible only when saving new query) -\n              // update all fields; otherwise pick only changed fields\n              updatedQuery.id !== query.id ? updatedQuery : pick(updatedQuery, uniq([\"id\", \"version\", ...keys(data)]))\n            )\n          );\n        })\n        .catch(error => {\n          const notificationOptions = {};\n          if (error instanceof SaveQueryConflictError) {\n            notificationOptions.duration = null;\n          }\n          notification.error(error.message, error.detailedMessage, notificationOptions);\n        });\n    },\n    [query, handleChange]\n  );\n}\n","import { noop, extend, pick } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport url from \"url\";\nimport qs from \"query-string\";\nimport { Query } from \"@/services/query\";\n\nfunction keepCurrentUrlParams(targetUrl) {\n  const currentUrlParams = qs.parse(window.location.search);\n  targetUrl = url.parse(targetUrl);\n  const targetUrlParams = qs.parse(targetUrl.search);\n  return url.format(\n    extend(pick(targetUrl, [\"protocol\", \"auth\", \"host\", \"pathname\", \"hash\"]), {\n      search: qs.stringify(extend(currentUrlParams, targetUrlParams)),\n    })\n  );\n}\n\nexport default function useDuplicateQuery(query) {\n  const [isDuplicating, setIsDuplicating] = useState(false);\n\n  const duplicateQuery = useCallback(() => {\n    // To prevent opening the same tab, name must be unique for each browser\n    const tabName = `duplicatedQueryTab/${Math.random().toString()}`;\n\n    // We should open tab here because this moment is a part of user interaction;\n    // later browser will block such attempts\n    const tab = window.open(\"\", tabName);\n\n    setIsDuplicating(true);\n    Query.fork({ id: query.id })\n      .then(newQuery => {\n        tab.location = keepCurrentUrlParams(newQuery.getUrl(true));\n      })\n      .finally(() => {\n        setIsDuplicating(false);\n      });\n  }, [query.id]);\n\n  return [isDuplicating, isDuplicating ? noop : duplicateQuery];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport \"./CodeBlock.less\";\n\nexport default class CodeBlock extends React.Component {\n  static propTypes = {\n    copyable: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    copyable: false,\n    children: null,\n  };\n\n  state = { copied: null };\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.copyFeatureEnabled = props.copyable && document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    window.getSelection().selectAllChildren(this.ref.current);\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset selection\n    window.getSelection().removeAllRanges();\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const { copyable, children, ...props } = this.props;\n\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <Button icon={<CopyOutlinedIcon />} type=\"dashed\" size=\"small\" onClick={this.copy} />\n      </Tooltip>\n    );\n\n    return (\n      <div className=\"code-block\">\n        <code {...props} ref={this.ref}>\n          {children}\n        </code>\n        {this.copyFeatureEnabled && copyButton}\n      </div>\n    );\n  }\n}\n","import { extend } from \"lodash\";\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport CodeBlock from \"@/components/CodeBlock\";\nimport { axios } from \"@/services/axios\";\nimport { clientConfig } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nimport \"./index.less\";\nimport { policy } from \"@/services/policy\";\n\nfunction ApiKeyDialog({ dialog, ...props }) {\n  const [query, setQuery] = useState(props.query);\n  const [updatingApiKey, setUpdatingApiKey] = useState(false);\n\n  const regenerateQueryApiKey = useCallback(() => {\n    setUpdatingApiKey(true);\n    axios\n      .post(`api/queries/${query.id}/regenerate_api_key`)\n      .then(data => {\n        setUpdatingApiKey(false);\n        setQuery(extend(query.clone(), { api_key: data.api_key }));\n      })\n      .catch(() => {\n        setUpdatingApiKey(false);\n        notification.error(\"Failed to update API key\");\n      });\n  }, [query]);\n\n  const { csvUrl, jsonUrl } = useMemo(\n    () => ({\n      csvUrl: `${clientConfig.basePath}api/queries/${query.id}/results.csv?api_key=${query.api_key}`,\n      jsonUrl: `${clientConfig.basePath}api/queries/${query.id}/results.json?api_key=${query.api_key}`,\n    }),\n    [query.id, query.api_key]\n  );\n\n  const csvResultsLabelId = useUniqueId(\"csv-results-label\");\n  const jsonResultsLabelId = useUniqueId(\"json-results-label\");\n\n  return (\n    <Modal {...dialog.props} width={600} footer={<Button onClick={() => dialog.close(query)}>Close</Button>}>\n      <div className=\"query-api-key-dialog-wrapper\">\n        <h5>API Key</h5>\n        <div className=\"m-b-20\">\n          <Input.Group compact>\n            <Input readOnly value={query.api_key} aria-label=\"Query API Key\" />\n            {policy.canEdit(query) && (\n              <Button disabled={updatingApiKey} loading={updatingApiKey} onClick={regenerateQueryApiKey}>\n                Regenerate\n              </Button>\n            )}\n          </Input.Group>\n        </div>\n\n        <h5>Example API Calls:</h5>\n        <div className=\"m-b-10\">\n          <span id={csvResultsLabelId}>Results in CSV format:</span>\n          <CodeBlock aria-labelledby={csvResultsLabelId} copyable>\n            {csvUrl}\n          </CodeBlock>\n        </div>\n        <div>\n          <span id={jsonResultsLabelId}>Results in JSON format:</span>\n          <CodeBlock aria-labelledby={jsonResultsLabelId} copyable>\n            {jsonUrl}\n          </CodeBlock>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nApiKeyDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    api_key: PropTypes.string,\n    can_edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default wrapDialog(ApiKeyDialog);\n","import { extend, map, filter, reduce } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport useMedia from \"use-media\";\nimport Link from \"@/components/Link\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport useArchiveQuery from \"../hooks/useArchiveQuery\";\nimport usePublishQuery from \"../hooks/usePublishQuery\";\nimport useUnpublishQuery from \"../hooks/useUnpublishQuery\";\nimport useUpdateQueryTags from \"../hooks/useUpdateQueryTags\";\nimport useRenameQuery from \"../hooks/useRenameQuery\";\nimport useDuplicateQuery from \"../hooks/useDuplicateQuery\";\nimport useApiKeyDialog from \"../hooks/useApiKeyDialog\";\nimport usePermissionsEditorDialog from \"../hooks/usePermissionsEditorDialog\";\n\nimport \"./QueryPageHeader.less\";\n\nfunction getQueryTags() {\n  return getTags(\"api/queries/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction createMenu(menu) {\n  const handlers = {};\n\n  const groups = map(menu, group =>\n    filter(\n      map(group, (props, key) => {\n        props = extend({ isAvailable: true, isEnabled: true, onClick: () => {} }, props);\n        if (props.isAvailable) {\n          handlers[key] = props.onClick;\n          return (\n            <Menu.Item key={key} disabled={!props.isEnabled}>\n              {props.title}\n            </Menu.Item>\n          );\n        }\n        return null;\n      })\n    )\n  );\n\n  return (\n    <Menu onClick={({ key }) => handlers[key]()}>\n      {reduce(\n        filter(groups, group => group.length > 0),\n        (result, items, key) => {\n          const divider = result.length > 0 ? <Menu.Divider key={`divider${key}`} /> : null;\n          return [...result, divider, ...items];\n        },\n        []\n      )}\n    </Menu>\n  );\n}\n\nexport default function QueryPageHeader({\n  query,\n  dataSource,\n  sourceMode,\n  selectedVisualization,\n  headerExtra,\n  tagsExtra,\n  onChange,\n}) {\n  const isDesktop = useMedia({ minWidth: 768 });\n  const queryFlags = useQueryFlags(query, dataSource);\n  const updateName = useRenameQuery(query, onChange);\n  const updateTags = useUpdateQueryTags(query, onChange);\n  const archiveQuery = useArchiveQuery(query, onChange);\n  const publishQuery = usePublishQuery(query, onChange);\n  const unpublishQuery = useUnpublishQuery(query, onChange);\n  const [isDuplicating, duplicateQuery] = useDuplicateQuery(query);\n  const openApiKeyDialog = useApiKeyDialog(query, onChange);\n  const openPermissionsEditorDialog = usePermissionsEditorDialog(query);\n\n  const moreActionsMenu = useMemo(\n    () =>\n      createMenu([\n        {\n          fork: {\n            isEnabled: !queryFlags.isNew && queryFlags.canFork && !isDuplicating,\n            title: (\n              <React.Fragment>\n                Fork <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(opens in a new tab)</span>\n              </React.Fragment>\n            ),\n            onClick: duplicateQuery,\n          },\n        },\n        {\n          archive: {\n            isAvailable: !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived,\n            title: \"Archive\",\n            onClick: archiveQuery,\n          },\n          managePermissions: {\n            isAvailable:\n              !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived && clientConfig.showPermissionsControl,\n            title: \"Manage Permissions\",\n            onClick: openPermissionsEditorDialog,\n          },\n          publish: {\n            isAvailable:\n              !isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit,\n            title: \"Publish\",\n            onClick: publishQuery,\n          },\n          unpublish: {\n            isAvailable: !clientConfig.disablePublish && !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isDraft,\n            title: \"Unpublish\",\n            onClick: unpublishQuery,\n          },\n        },\n        {\n          showAPIKey: {\n            isAvailable: !clientConfig.disablePublicUrls && !queryFlags.isNew,\n            title: \"Show API Key\",\n            onClick: openApiKeyDialog,\n          },\n        },\n      ]),\n    [\n      queryFlags.isNew,\n      queryFlags.canFork,\n      queryFlags.canEdit,\n      queryFlags.isArchived,\n      queryFlags.isDraft,\n      isDuplicating,\n      duplicateQuery,\n      archiveQuery,\n      openPermissionsEditorDialog,\n      isDesktop,\n      publishQuery,\n      unpublishQuery,\n      openApiKeyDialog,\n    ]\n  );\n\n  return (\n    <div className=\"query-page-header\">\n      <div className=\"title-with-tags\">\n        <div className=\"page-title\">\n          <div className=\"d-flex align-items-center\">\n            {!queryFlags.isNew && <FavoritesControl item={query} />}\n            <h3>\n              <EditInPlace isEditable={queryFlags.canEdit} onDone={updateName} ignoreBlanks value={query.name} />\n            </h3>\n          </div>\n        </div>\n        <div className=\"query-tags\">\n          <QueryTagsControl\n            tags={query.tags}\n            isDraft={queryFlags.isDraft}\n            isArchived={queryFlags.isArchived}\n            canEdit={queryFlags.canEdit}\n            getAvailableTags={getQueryTags}\n            onEdit={updateTags}\n            tagsExtra={tagsExtra}\n          />\n        </div>\n      </div>\n      <div className=\"header-actions\">\n        {headerExtra}\n        {isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit && (\n          <Button className=\"m-r-5\" onClick={publishQuery}>\n            <i className=\"fa fa-paper-plane m-r-5\" aria-hidden=\"true\" /> Publish\n          </Button>\n        )}\n\n        {!queryFlags.isNew && queryFlags.canViewSource && (\n          <span>\n            {!sourceMode && (\n              <Link.Button className=\"m-r-5\" href={query.getUrl(true, selectedVisualization)}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Edit Source</span>\n              </Link.Button>\n            )}\n            {sourceMode && (\n              <Link.Button\n                className=\"m-r-5\"\n                href={query.getUrl(false, selectedVisualization)}\n                data-test=\"QueryPageShowResultOnly\">\n                <i className=\"fa fa-table\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Show Results Only</span>\n              </Link.Button>\n            )}\n          </span>\n        )}\n\n        {!queryFlags.isNew && (\n          <Dropdown overlay={moreActionsMenu} trigger={[\"click\"]}>\n            <Button data-test=\"QueryPageHeaderMoreButton\" aria-label=\"More actions\">\n              <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        )}\n      </div>\n    </div>\n  );\n}\n\nQueryPageHeader.propTypes = {\n  query: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    name: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  dataSource: PropTypes.object,\n  sourceMode: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  headerExtra: PropTypes.node,\n  tagsExtra: PropTypes.node,\n  onChange: PropTypes.func,\n};\n\nQueryPageHeader.defaultProps = {\n  dataSource: null,\n  sourceMode: false,\n  selectedVisualization: null,\n  headerExtra: null,\n  tagsExtra: null,\n  onChange: () => {},\n};\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function useRenameQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    name => {\n      recordEvent(\"edit_name\", \"query\", query.id);\n      const changes = { name };\n      const options = {};\n\n      if (query.is_draft && clientConfig.autoPublishNamedQueries && name !== \"New Query\") {\n        changes.is_draft = false;\n        options.successMessage = \"Query saved and published\";\n      }\n\n      updateQuery(changes, options);\n    },\n    [query.id, query.is_draft, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryTags(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    tags => {\n      recordEvent(\"edit_tags\", \"query\", query.id);\n      updateQuery({ tags });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function usePublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: false });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUnpublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: true });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport ApiKeyDialog from \"@/components/queries/ApiKeyDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useApiKeyDialog(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    ApiKeyDialog.showModal({ query }).onClose(handleChange);\n  }, [query, handleChange]);\n}\n","import { useCallback } from \"react\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\n\nexport default function usePermissionsEditorDialog(query) {\n  return useCallback(() => {\n    PermissionsEditorDialog.showModal({\n      aclUrl: `api/queries/${query.id}/acl`,\n      context: \"query\",\n      author: query.user,\n    });\n  }, [query.id, query.user]);\n}\n","import { isFunction, has } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { IMG_ROOT } from \"@/services/data-source\";\n\nimport \"./QueryMetadata.less\";\n\nexport default function QueryMetadata({ query, dataSource, layout, onEditSchedule }) {\n  return (\n    <div className={`query-metadata query-metadata-${layout}`}>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.user.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.user.is_disabled })}>\n            {query.user.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            created{\" \"}\n            <strong>\n              <TimeAgo date={query.created_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.last_modified_by.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.last_modified_by.is_disabled })}>\n            {query.last_modified_by.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            updated{\" \"}\n            <strong>\n              <TimeAgo date={query.updated_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-space\" />\n      {has(dataSource, \"name\") && has(dataSource, \"type\") && (\n        <div className=\"query-metadata-item\">\n          Data Source:\n          <img src={`${IMG_ROOT}/${dataSource.type}.png`} width=\"20\" alt={dataSource.type} />\n          <div className=\"query-metadata-property\">\n            <div className=\"query-metadata-label\">{dataSource.name}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"query-metadata-item\">\n        <div className=\"query-metadata-property\">\n          <span className=\"query-metadata-label\">\n            <span className=\"zmdi zmdi-refresh m-r-5\" />\n            Refresh Schedule\n          </span>\n          <span className=\"query-metadata-value\">\n            <SchedulePhrase\n              isLink={isFunction(onEditSchedule)}\n              isNew={query.isNew()}\n              schedule={query.schedule}\n              onClick={onEditSchedule}\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryMetadata.propTypes = {\n  layout: PropTypes.oneOf([\"table\", \"horizontal\"]),\n  query: PropTypes.shape({\n    created_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    updated_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    last_modified_by: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    schedule: PropTypes.object,\n  }).isRequired,\n  dataSource: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onEditSchedule: PropTypes.func,\n};\n\nQueryMetadata.defaultProps = {\n  layout: \"table\",\n  dataSource: null,\n  onEditSchedule: null,\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { find, orderBy } from \"lodash\";\nimport useMedia from \"use-media\";\nimport Tabs from \"antd/lib/tabs\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./QueryVisualizationTabs.less\";\n\nconst { TabPane } = Tabs;\n\nfunction EmptyState({ title, message, refreshButton }) {\n  return (\n    <div className=\"query-results-empty-state\">\n      <div className=\"empty-state-content\">\n        <div>\n          <img src=\"static/images/illustrations/no-query-results.svg\" alt=\"No Query Results Illustration\" />\n        </div>\n        <h3>{title}</h3>\n        <div className=\"m-b-20\">{message}</div>\n        {refreshButton}\n      </div>\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  refreshButton: PropTypes.node,\n};\n\nEmptyState.defaultProps = {\n  refreshButton: null,\n};\n\nfunction TabWithDeleteButton({ visualizationName, canDelete, onDelete, ...props }) {\n  const handleDelete = useCallback(\n    e => {\n      e.stopPropagation();\n      Modal.confirm({\n        title: \"Delete Visualization\",\n        content: \"Are you sure you want to delete this visualization?\",\n        okText: \"Delete\",\n        okType: \"danger\",\n        onOk: onDelete,\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    },\n    [onDelete]\n  );\n\n  return (\n    <span {...props}>\n      {visualizationName}\n      {canDelete && (\n        <PlainButton className=\"delete-visualization-button\" onClick={handleDelete} aria-label=\"Close\" title=\"Close\">\n          <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n        </PlainButton>\n      )}\n    </span>\n  );\n}\n\nTabWithDeleteButton.propTypes = {\n  visualizationName: PropTypes.string.isRequired,\n  canDelete: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\nTabWithDeleteButton.defaultProps = { canDelete: false, onDelete: () => {} };\n\nconst defaultVisualizations = [\n  {\n    type: \"TABLE\",\n    name: \"Table\",\n    id: null,\n    options: {},\n  },\n];\n\nexport default function QueryVisualizationTabs({\n  queryResult,\n  selectedTab,\n  showNewVisualizationButton,\n  canDeleteVisualizations,\n  onChangeTab,\n  onAddVisualization,\n  onDeleteVisualization,\n  refreshButton,\n  canRefresh,\n  ...props\n}) {\n  const visualizations = useMemo(\n    () => (props.visualizations.length > 0 ? props.visualizations : defaultVisualizations),\n    [props.visualizations]\n  );\n\n  const tabsProps = {};\n  if (find(visualizations, { id: selectedTab })) {\n    tabsProps.activeKey = `${selectedTab}`;\n  }\n\n  if (showNewVisualizationButton) {\n    tabsProps.tabBarExtraContent = (\n      <Button\n        className=\"add-visualization-button\"\n        data-test=\"NewVisualization\"\n        type=\"link\"\n        onClick={() => onAddVisualization()}>\n        <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n        <span className=\"m-l-5 hidden-xs\">Add Visualization</span>\n      </Button>\n    );\n  }\n\n  const orderedVisualizations = useMemo(() => orderBy(visualizations, [\"id\"]), [visualizations]);\n  const isFirstVisualization = useCallback(visId => visId === orderedVisualizations[0].id, [orderedVisualizations]);\n  const isMobile = useMedia({ maxWidth: 768 });\n\n  const [filters, setFilters] = useState([]);\n\n  return (\n    <Tabs\n      {...tabsProps}\n      type=\"card\"\n      className={cx(\"query-visualization-tabs card-style\")}\n      data-test=\"QueryPageVisualizationTabs\"\n      animated={false}\n      tabBarGutter={0}\n      onChange={activeKey => onChangeTab(+activeKey)}\n      destroyInactiveTabPane>\n      {orderedVisualizations.map(visualization => (\n        <TabPane\n          key={`${visualization.id}`}\n          tab={\n            <TabWithDeleteButton\n              data-test={`QueryPageVisualizationTab${visualization.id}`}\n              canDelete={!isMobile && canDeleteVisualizations && !isFirstVisualization(visualization.id)}\n              visualizationName={visualization.name}\n              onDelete={() => onDeleteVisualization(visualization.id)}\n            />\n          }>\n          {queryResult ? (\n            <VisualizationRenderer\n              visualization={visualization}\n              queryResult={queryResult}\n              context=\"query\"\n              filters={filters}\n              onFiltersChange={setFilters}\n            />\n          ) : (\n            <EmptyState\n              title=\"Query has no result\"\n              message={\n                canRefresh\n                  ? \"Execute/Refresh the query to show results.\"\n                  : \"You do not have a permission to execute/refresh this query.\"\n              }\n              refreshButton={refreshButton}\n            />\n          )}\n        </TabPane>\n      ))}\n    </Tabs>\n  );\n}\n\nQueryVisualizationTabs.propTypes = {\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  visualizations: PropTypes.arrayOf(PropTypes.object),\n  selectedTab: PropTypes.number,\n  showNewVisualizationButton: PropTypes.bool,\n  canDeleteVisualizations: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  onAddVisualization: PropTypes.func,\n  onDeleteVisualization: PropTypes.func,\n  refreshButton: PropTypes.node,\n  canRefresh: PropTypes.bool,\n};\n\nQueryVisualizationTabs.defaultProps = {\n  queryResult: null,\n  visualizations: [],\n  selectedTab: null,\n  showNewVisualizationButton: false,\n  canDeleteVisualizations: false,\n  onChangeTab: () => {},\n  onAddVisualization: () => {},\n  onDeleteVisualization: () => {},\n  refreshButton: null,\n  canRefresh: true,\n};\n","import { includes } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Timer from \"@/components/Timer\";\n\nexport default function QueryExecutionStatus({ status, updatedAt, error, isCancelling, onCancel }) {\n  const alertType = status === \"failed\" ? \"error\" : \"info\";\n  const showTimer = status !== \"failed\" && updatedAt;\n  const isCancelButtonAvailable = includes([\"waiting\", \"processing\"], status);\n  let message = isCancelling ? <React.Fragment>Cancelling&hellip;</React.Fragment> : null;\n\n  switch (status) {\n    case \"waiting\":\n      if (!isCancelling) {\n        message = <React.Fragment>Query in queue&hellip;</React.Fragment>;\n      }\n      break;\n    case \"processing\":\n      if (!isCancelling) {\n        message = <React.Fragment>Executing query&hellip;</React.Fragment>;\n      }\n      break;\n    case \"loading-result\":\n      message = <React.Fragment>Loading results&hellip;</React.Fragment>;\n      break;\n    case \"failed\":\n      message = (\n        <React.Fragment>\n          Error running query: <strong>{error}</strong>\n        </React.Fragment>\n      );\n      break;\n    // no default\n  }\n\n  return (\n    <Alert\n      data-test=\"QueryExecutionStatus\"\n      type={alertType}\n      message={\n        <div className=\"d-flex align-items-center\">\n          <div className=\"flex-fill p-t-5 p-b-5\">\n            {message} {showTimer && <Timer from={updatedAt} />}\n          </div>\n          <div>\n            {isCancelButtonAvailable && (\n              <Button className=\"m-l-10\" type=\"primary\" size=\"small\" disabled={isCancelling} onClick={onCancel}>\n                Cancel\n              </Button>\n            )}\n          </div>\n        </div>\n      }\n    />\n  );\n}\n\nQueryExecutionStatus.propTypes = {\n  status: PropTypes.string,\n  updatedAt: PropTypes.any,\n  error: PropTypes.string,\n  isCancelling: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nQueryExecutionStatus.defaultProps = {\n  status: \"waiting\",\n  updatedAt: null,\n  error: null,\n  isCancelling: true,\n  onCancel: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"antd/lib/card\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Typography from \"antd/lib/typography\";\nimport Link from \"@/components/Link\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\n\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport \"./QuerySourceAlerts.less\";\n\nexport default function QuerySourceAlerts({ query, dataSourcesAvailable }) {\n  const queryFlags = useQueryFlags(query); // we don't use flags that depend on data source\n\n  let message = null;\n  if (queryFlags.isNew && !queryFlags.canCreate) {\n    message = (\n      <React.Fragment>\n        <Typography.Title level={4}>\n          You don't have permission to create new queries on any of the data sources available to you.\n        </Typography.Title>\n        <p>\n          <Typography.Text type=\"secondary\">\n            You can either <Link href=\"queries\">browse existing queries</Link>, or ask for additional permissions from\n            your Redash admin.\n          </Typography.Text>\n        </p>\n      </React.Fragment>\n    );\n  } else if (!dataSourcesAvailable) {\n    if (currentUser.isAdmin) {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please create one first, and then start querying.</Typography.Text>\n          </p>\n\n          <div className=\"query-source-alerts-actions\">\n            <Link.Button type=\"primary\" href=\"data_sources/new\">\n              Create Data Source\n            </Link.Button>\n            <Link.Button type=\"default\" href=\"groups\">\n              Manage Group Permissions\n            </Link.Button>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please ask your Redash admin to create one first.</Typography.Text>\n          </p>\n        </React.Fragment>\n      );\n    }\n  }\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"query-source-alerts\">\n      <Card>\n        <DynamicComponent name=\"QuerySource.Alerts\" query={query} dataSourcesAvailable={dataSourcesAvailable}>\n          <div className=\"query-source-alerts-icon\">\n            <WarningFilledIcon />\n          </div>\n          {message}\n        </DynamicComponent>\n      </Card>\n    </div>\n  );\n}\n\nQuerySourceAlerts.propTypes = {\n  query: PropTypes.object.isRequired,\n  dataSourcesAvailable: PropTypes.bool,\n};\n\nQuerySourceAlerts.defaultProps = {\n  dataSourcesAvailable: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport { Query } from \"@/services/query\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function wrapQueryPage(WrappedComponent) {\n  function QueryPageWrapper({ queryId, onError, ...props }) {\n    const [query, setQuery] = useState(null);\n\n    const handleError = useImmutableCallback(onError);\n\n    useEffect(() => {\n      let isCancelled = false;\n      const promise = queryId ? Query.get({ id: queryId }) : Promise.resolve(Query.newQuery());\n      promise\n        .then(result => {\n          if (!isCancelled) {\n            setQuery(result);\n          }\n        })\n        .catch(handleError);\n\n      return () => {\n        isCancelled = true;\n      };\n    }, [queryId, handleError]);\n\n    if (!query) {\n      return <LoadingState className=\"flex-fill\" />;\n    }\n\n    return <WrappedComponent query={query} onError={onError} {...props} />;\n  }\n\n  QueryPageWrapper.propTypes = {\n    queryId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  };\n\n  QueryPageWrapper.defaultProps = {\n    queryId: null,\n  };\n\n  return QueryPageWrapper;\n}\n","import { isString } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { Dashboard } from \"@/services/dashboard\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./add-to-dashboard-dialog.less\";\n\nfunction AddToDashboardDialog({ dialog, visualization }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [doSearch, dashboards, isLoading] = useSearchResults(\n    term => {\n      if (isString(term) && term !== \"\") {\n        return Dashboard.query({ q: term })\n          .then(results => results.results)\n          .catch(() => []);\n      }\n      return Promise.resolve([]);\n    },\n    { initialResults: [] }\n  );\n\n  const [selectedDashboard, setSelectedDashboard] = useState(null);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  function addWidgetToDashboard() {\n    // Load dashboard with all widgets\n    Dashboard.get(selectedDashboard)\n      .then(dashboard => {\n        dashboard.addWidget(visualization);\n        return dashboard;\n      })\n      .then(dashboard => {\n        dialog.close();\n        const key = `notification-${Math.random()\n          .toString(36)\n          .substr(2, 10)}`;\n        notification.success(\n          \"Widget added to dashboard\",\n          <React.Fragment>\n            <Link href={`${dashboard.url}`} onClick={() => notification.close(key)}>\n              {dashboard.name}\n            </Link>\n            <QueryTagsControl isDraft={dashboard.is_draft} tags={dashboard.tags} />\n          </React.Fragment>,\n          { key }\n        );\n      })\n      .catch(() => {\n        notification.error(\"Widget not added.\");\n      })\n      .finally(() => {\n        setSaveInProgress(false);\n      });\n  }\n\n  const items = selectedDashboard ? [selectedDashboard] : dashboards;\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add to Dashboard\"\n      okButtonProps={{ disabled: !selectedDashboard || saveInProgress, loading: saveInProgress }}\n      cancelButtonProps={{ disabled: saveInProgress }}\n      onOk={addWidgetToDashboard}>\n      <label htmlFor=\"add-to-dashboard-dialog-dashboard\">Choose the dashboard to add this query to:</label>\n\n      {!selectedDashboard && (\n        <Input\n          id=\"add-to-dashboard-dialog-dashboard\"\n          className=\"w-100\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search a dashboard by name\"\n          value={searchTerm}\n          onChange={event => setSearchTerm(event.target.value)}\n          suffix={\n            <PlainButton className={searchTerm === \"\" ? \"hidden\" : null} onClick={() => setSearchTerm(\"\")}>\n              <CloseOutlinedIcon />\n            </PlainButton>\n          }\n        />\n      )}\n\n      {(items.length > 0 || isLoading) && (\n        <List\n          className={selectedDashboard ? \"add-to-dashboard-dialog-selection\" : \"add-to-dashboard-dialog-search-results\"}\n          bordered\n          itemLayout=\"horizontal\"\n          loading={isLoading}\n          dataSource={items}\n          renderItem={d => (\n            <List.Item\n              key={`dashboard-${d.id}`}\n              actions={\n                selectedDashboard\n                  ? [\n                      <PlainButton onClick={() => setSelectedDashboard(null)}>\n                        <CloseOutlinedIcon />\n                      </PlainButton>,\n                    ]\n                  : []\n              }\n              onClick={selectedDashboard ? null : () => setSelectedDashboard(d)}>\n              <div className=\"add-to-dashboard-dialog-item-content\">\n                {d.name}\n                <QueryTagsControl isDraft={d.is_draft} tags={d.tags} />\n              </div>\n            </List.Item>\n          )}\n        />\n      )}\n    </Modal>\n  );\n}\n\nAddToDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default wrapDialog(AddToDashboardDialog);\n","import { uniqueId } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport InputNumber from \"antd/lib/input-number\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { clientConfig } from \"@/services/auth\";\nimport CodeBlock from \"@/components/CodeBlock\";\n\nimport \"./EmbedQueryDialog.less\";\n\nclass EmbedQueryDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  };\n\n  state = {\n    enableChangeIframeSize: false,\n    iframeWidth: 720,\n    iframeHeight: 391,\n  };\n\n  constructor(props) {\n    super(props);\n    const { query, visualization } = props;\n    this.embedUrl = `${clientConfig.basePath}embed/query/${query.id}/visualization/${visualization.id}?api_key=${\n      query.api_key\n    }&${query.getParameters().toUrlParams()}`;\n\n    if (window.snapshotUrlBuilder) {\n      this.snapshotUrl = window.snapshotUrlBuilder(query, visualization);\n    }\n  }\n\n  urlEmbedLabelId = uniqueId(\"url-embed-label\");\n  iframeEmbedLabelId = uniqueId(\"iframe-embed-label\");\n\n  render() {\n    const { query, dialog } = this.props;\n    const { enableChangeIframeSize, iframeWidth, iframeHeight } = this.state;\n\n    return (\n      <Modal\n        {...dialog.props}\n        className=\"embed-query-dialog\"\n        title=\"Embed Query\"\n        footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n        {query.is_safe ? (\n          <React.Fragment>\n            <h5 id={this.urlEmbedLabelId} className=\"m-t-0\">\n              Public URL\n            </h5>\n            <div className=\"m-b-30\">\n              <CodeBlock aria-labelledby={this.urlEmbedLabelId} data-test=\"EmbedIframe\" copyable>\n                {this.embedUrl}\n              </CodeBlock>\n            </div>\n            <h5 id={this.iframeEmbedLabelId} className=\"m-t-0\">\n              IFrame Embed\n            </h5>\n            <div>\n              <CodeBlock aria-labelledby={this.iframeEmbedLabelId} copyable>\n                {`<iframe src=\"${this.embedUrl}\" width=\"${iframeWidth}\" height=\"${iframeHeight}\"></iframe>`}\n              </CodeBlock>\n              <Form className=\"m-t-10\" layout=\"inline\">\n                <Form.Item>\n                  <Checkbox\n                    checked={enableChangeIframeSize}\n                    onChange={e => this.setState({ enableChangeIframeSize: e.target.checked })}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Width\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeWidth}\n                    onChange={value => this.setState({ iframeWidth: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Height\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeHeight}\n                    onChange={value => this.setState({ iframeHeight: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n              </Form>\n            </div>\n            {this.snapshotUrl && (\n              <React.Fragment>\n                <h5>Image Embed</h5>\n                <CodeBlock copyable>{this.snapshotUrl}</CodeBlock>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        ) : (\n          <Alert\n            message=\"Currently it is not possible to embed queries that contain text parameters.\"\n            type=\"error\"\n            data-test=\"EmbedErrorAlert\"\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EmbedQueryDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\n\nexport default function QueryResultsLink(props) {\n  let href = \"\";\n\n  const { query, queryResult, fileType } = props;\n  const resultId = queryResult.getId && queryResult.getId();\n  const resultData = queryResult.getData && queryResult.getData();\n\n  if (resultId && resultData && query.name) {\n    if (query.id) {\n      href = `api/queries/${query.id}/results/${resultId}.${fileType}${props.embed ? `?api_key=${props.apiKey}` : \"\"}`;\n    } else {\n      href = `api/query_results/${resultId}.${fileType}`;\n    }\n  }\n\n  return (\n    <Link target=\"_blank\" rel=\"noopener noreferrer\" disabled={props.disabled} href={href} download>\n      {props.children}\n    </Link>\n  );\n}\n\nQueryResultsLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  fileType: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nQueryResultsLink.defaultProps = {\n  queryResult: {},\n  fileType: \"csv\",\n  embed: false,\n  apiKey: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport PlusCircleFilledIcon from \"@ant-design/icons/PlusCircleFilled\";\nimport ShareAltOutlinedIcon from \"@ant-design/icons/ShareAltOutlined\";\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\n\nimport QueryResultsLink from \"./QueryResultsLink\";\n\nexport default function QueryControlDropdown(props) {\n  const menu = (\n    <Menu>\n      {!props.query.isNew() && (!props.query.is_draft || !props.query.is_archived) && (\n        <Menu.Item>\n          <PlainButton onClick={() => props.openAddToDashboardForm(props.selectedTab)}>\n            <PlusCircleFilledIcon /> Add to Dashboard\n          </PlainButton>\n        </Menu.Item>\n      )}\n      {!clientConfig.disablePublicUrls && !props.query.isNew() && (\n        <Menu.Item>\n          <PlainButton\n            onClick={() => props.showEmbedDialog(props.query, props.selectedTab)}\n            data-test=\"ShowEmbedDialogButton\">\n            <ShareAltOutlinedIcon /> Embed Elsewhere\n          </PlainButton>\n        </Menu.Item>\n      )}\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown trigger={[\"click\"]} overlay={menu} overlayClassName=\"query-control-dropdown-overlay\">\n      <Button data-test=\"QueryControlDropdownButton\">\n        <EllipsisOutlinedIcon rotate={90} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nQueryControlDropdown.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  queryExecuting: PropTypes.bool.isRequired,\n  showEmbedDialog: PropTypes.func.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  openAddToDashboardForm: PropTypes.func.isRequired,\n};\n\nQueryControlDropdown.defaultProps = {\n  queryResult: {},\n  embed: false,\n  apiKey: \"\",\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport FormOutlinedIcon from \"@ant-design/icons/FormOutlined\";\n\nexport default function EditVisualizationButton(props) {\n  return (\n    <Button\n      data-test=\"EditVisualization\"\n      className=\"edit-visualization\"\n      onClick={() => props.openVisualizationEditor(props.selectedTab)}>\n      <FormOutlinedIcon />\n      <span className=\"hidden-xs hidden-s hidden-m\">Edit Visualization</span>\n    </Button>\n  );\n}\n\nEditVisualizationButton.propTypes = {\n  openVisualizationEditor: PropTypes.func.isRequired,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nEditVisualizationButton.defaultProps = {\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WarningTwoTone from \"@ant-design/icons/WarningTwoTone\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useAddToDashboardDialog from \"../hooks/useAddToDashboardDialog\";\nimport useEmbedDialog from \"../hooks/useEmbedDialog\";\nimport QueryControlDropdown from \"@/components/EditVisualizationButton/QueryControlDropdown\";\nimport EditVisualizationButton from \"@/components/EditVisualizationButton\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { durationHumanize, pluralize, prettySize } from \"@/lib/utils\";\n\nimport \"./QueryExecutionMetadata.less\";\n\nexport default function QueryExecutionMetadata({\n  query,\n  queryResult,\n  isQueryExecuting,\n  selectedVisualization,\n  showEditVisualizationButton,\n  onEditVisualization,\n  extraActions,\n}) {\n  const queryResultData = useQueryResultData(queryResult);\n  const openAddToDashboardDialog = useAddToDashboardDialog(query);\n  const openEmbedDialog = useEmbedDialog(query);\n  return (\n    <div className=\"query-execution-metadata\">\n      <span className=\"m-r-5\">\n        <QueryControlDropdown\n          query={query}\n          queryResult={queryResult}\n          queryExecuting={isQueryExecuting}\n          showEmbedDialog={openEmbedDialog}\n          embed={false}\n          apiKey={query.api_key}\n          selectedTab={selectedVisualization}\n          openAddToDashboardForm={openAddToDashboardDialog}\n        />\n      </span>\n      {extraActions}\n      {showEditVisualizationButton && (\n        <EditVisualizationButton openVisualizationEditor={onEditVisualization} selectedTab={selectedVisualization} />\n      )}\n      <span className=\"m-l-5 m-r-10\">\n        <span>\n          {queryResultData.truncated === true && (\n            <span className=\"m-r-5\">\n              <Tooltip\n                title={\n                  \"Result truncated to \" +\n                  queryResultData.rows.length +\n                  \" rows. Databricks may truncate query results that are unstably large.\"\n                }>\n                <WarningTwoTone twoToneColor=\"#FF9800\" />\n              </Tooltip>\n            </span>\n          )}\n          <strong>{queryResultData.rows.length}</strong> {pluralize(\"row\", queryResultData.rows.length)}\n        </span>\n        <span className=\"m-l-5\">\n          {!isQueryExecuting && (\n            <React.Fragment>\n              <strong>{durationHumanize(queryResultData.runtime)}</strong>\n              <span className=\"hidden-xs\"> runtime</span>\n            </React.Fragment>\n          )}\n          {isQueryExecuting && <span>Running&hellip;</span>}\n        </span>\n        {queryResultData.metadata.data_scanned && (\n          <span className=\"m-l-5\">\n            Data Scanned\n            <strong>{prettySize(queryResultData.metadata.data_scanned)}</strong>\n          </span>\n        )}\n      </span>\n      <div>\n        <span className=\"m-r-10\">\n          <span className=\"hidden-xs\">Refreshed </span>\n          <strong>\n            <TimeAgo date={queryResultData.retrievedAt} placeholder=\"-\" />\n          </strong>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nQueryExecutionMetadata.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isQueryExecuting: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  showEditVisualizationButton: PropTypes.bool,\n  onEditVisualization: PropTypes.func,\n  extraActions: PropTypes.node,\n};\n\nQueryExecutionMetadata.defaultProps = {\n  isQueryExecuting: false,\n  selectedVisualization: null,\n  showEditVisualizationButton: false,\n  onEditVisualization: () => {},\n  extraActions: null,\n};\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport AddToDashboardDialog from \"@/components/queries/AddToDashboardDialog\";\n\nexport default function useAddToDashboardDialog(query) {\n  return useCallback(\n    visualizationId => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      AddToDashboardDialog.showModal({ visualization });\n    },\n    [query.visualizations]\n  );\n}\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EmbedQueryDialog from \"@/components/queries/EmbedQueryDialog\";\n\nexport default function useEmbedDialog(query) {\n  return useCallback(\n    (unusedQuery, visualizationId) => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      EmbedQueryDialog.showModal({ query, visualization });\n    },\n    [query]\n  );\n}\n","import { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\nimport DataSource from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\n\nfunction getSchema(dataSource, refresh = undefined) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DataSource.fetchSchema(dataSource, refresh).catch(() => {\n    notification.error(\"Schema refresh failed.\", \"Please try again later.\");\n    return Promise.resolve([]);\n  });\n}\n\nexport default function useDataSourceSchema(dataSource) {\n  const [schema, setSchema] = useState([]);\n  const [loadingSchema, setLoadingSchema] = useState(true);\n  const refreshSchemaTokenRef = useRef(null);\n\n  const reloadSchema = useCallback(\n    (refresh = undefined) => {\n      setLoadingSchema(true);\n      const refreshToken = Math.random()\n        .toString(36)\n        .substr(2);\n      refreshSchemaTokenRef.current = refreshToken;\n      getSchema(dataSource, refresh)\n        .then(data => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setSchema(data);\n          }\n        })\n        .finally(() => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setLoadingSchema(false);\n          }\n        });\n    },\n    [dataSource]\n  );\n\n  useEffect(() => {\n    reloadSchema();\n  }, [reloadSchema]);\n\n  useEffect(() => {\n    return () => {\n      // cancel pending operations\n      refreshSchemaTokenRef.current = null;\n    };\n  }, []);\n\n  return useMemo(() => [schema, loadingSchema, reloadSchema], [schema, loadingSchema, reloadSchema]);\n}\n","import { isNil, map, filter, some, includes, get } from \"lodash\";\nimport cx from \"classnames\";\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useDataSourceSchema from \"@/pages/queries/hooks/useDataSourceSchema\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport LoadingState from \"../items-list/components/LoadingState\";\n\nconst SchemaItemColumnType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n});\n\nexport const SchemaItemType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(SchemaItemColumnType).isRequired,\n});\n\nconst schemaTableHeight = 22;\nconst schemaColumnHeight = 18;\n\nfunction SchemaItem({ item, expanded, onToggle, onSelect, ...props }) {\n  const handleSelect = useCallback(\n    (event, ...args) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onSelect(...args);\n    },\n    [onSelect]\n  );\n\n  if (!item) {\n    return null;\n  }\n\n  const tableDisplayName = item.displayName || item.name;\n\n  return (\n    <div {...props}>\n      <div className=\"schema-list-item\">\n        <PlainButton className=\"table-name\" onClick={onToggle}>\n          <i className=\"fa fa-table m-r-5\" aria-hidden=\"true\" />\n          <strong>\n            <span title={item.name}>{tableDisplayName}</span>\n            {!isNil(item.size) && <span> ({item.size})</span>}\n          </strong>\n        </PlainButton>\n        <Tooltip\n          title=\"Insert table name into query text\"\n          mouseEnterDelay={0}\n          mouseLeaveDelay={0}\n          placement=\"topRight\"\n          arrowPointAtCenter>\n          <PlainButton className=\"copy-to-editor\" onClick={e => handleSelect(e, item.name)}>\n            <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n          </PlainButton>\n        </Tooltip>\n      </div>\n      {expanded && (\n        <div className=\"table-open\">\n          {item.loading ? (\n            <div className=\"table-open\">Loading...</div>\n          ) : (\n            map(item.columns, column => {\n              const columnName = get(column, \"name\");\n              const columnType = get(column, \"type\");\n              return (\n                <Tooltip\n                  title=\"Insert column name into query text\"\n                  mouseEnterDelay={0}\n                  mouseLeaveDelay={0}\n                  placement=\"rightTop\">\n                  <PlainButton key={columnName} className=\"table-open-item\" onClick={e => handleSelect(e, columnName)}>\n                    <div>\n                      {columnName} {columnType && <span className=\"column-type\">{columnType}</span>}\n                    </div>\n\n                    <div className=\"copy-to-editor\">\n                      <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n                    </div>\n                  </PlainButton>\n                </Tooltip>\n              );\n            })\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nSchemaItem.propTypes = {\n  item: SchemaItemType,\n  expanded: PropTypes.bool,\n  onToggle: PropTypes.func,\n  onSelect: PropTypes.func,\n};\n\nSchemaItem.defaultProps = {\n  item: null,\n  expanded: false,\n  onToggle: () => {},\n  onSelect: () => {},\n};\n\nfunction SchemaLoadingState() {\n  return (\n    <div className=\"schema-loading-state\">\n      <LoadingState className=\"\" />\n    </div>\n  );\n}\n\nexport function SchemaList({ loading, schema, expandedFlags, onTableExpand, onItemSelect }) {\n  const [listRef, setListRef] = useState(null);\n\n  useEffect(() => {\n    if (listRef) {\n      listRef.recomputeRowHeights();\n    }\n  }, [listRef, schema, expandedFlags]);\n\n  return (\n    <div className=\"schema-browser\">\n      {loading && <SchemaLoadingState />}\n      {!loading && (\n        <AutoSizer>\n          {({ width, height }) => (\n            <List\n              ref={setListRef}\n              width={width}\n              height={height}\n              rowCount={schema.length}\n              rowHeight={({ index }) => {\n                const item = schema[index];\n                const columnsLength = !item.loading ? item.columns.length : 1;\n                let columnCount = expandedFlags[item.name] ? columnsLength : 0;\n                return schemaTableHeight + schemaColumnHeight * columnCount;\n              }}\n              rowRenderer={({ key, index, style }) => {\n                const item = schema[index];\n                return (\n                  <SchemaItem\n                    key={key}\n                    style={style}\n                    item={item}\n                    expanded={expandedFlags[item.name]}\n                    onToggle={() => onTableExpand(item.name)}\n                    onSelect={onItemSelect}\n                  />\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      )}\n    </div>\n  );\n}\n\nexport function applyFilterOnSchema(schema, filterString) {\n  const filters = filter(filterString.toLowerCase().split(/\\s+/), s => s.length > 0);\n\n  // Empty string: return original schema\n  if (filters.length === 0) {\n    return schema;\n  }\n\n  // Single word: matches table or column\n  if (filters.length === 1) {\n    const nameFilter = filters[0];\n    const columnFilter = filters[0];\n    return filter(\n      schema,\n      item =>\n        includes(item.name.toLowerCase(), nameFilter) ||\n        some(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter))\n    );\n  }\n\n  // Two (or more) words: first matches table, seconds matches column\n  const nameFilter = filters[0];\n  const columnFilter = filters[1];\n  return filter(\n    map(schema, item => {\n      if (includes(item.name.toLowerCase(), nameFilter)) {\n        item = {\n          ...item,\n          columns: filter(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter)),\n        };\n        return item.columns.length > 0 ? item : null;\n      }\n    })\n  );\n}\n\nexport default function SchemaBrowser({\n  dataSource,\n  onSchemaUpdate,\n  onItemSelect,\n  options,\n  onOptionsUpdate,\n  ...props\n}) {\n  const [schema, isLoading, refreshSchema] = useDataSourceSchema(dataSource);\n  const [filterString, setFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [expandedFlags, setExpandedFlags] = useState({});\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    setExpandedFlags({});\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  if (schema.length === 0 && !isLoading) {\n    return null;\n  }\n\n  function toggleTable(tableName) {\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className=\"m-r-5\"\n          placeholder=\"Search schema...\"\n          aria-label=\"Search schema\"\n          disabled={schema.length === 0}\n          onChange={event => handleFilterChange(event.target.value)}\n        />\n\n        <Tooltip title=\"Refresh Schema\">\n          <Button onClick={() => refreshSchema(true)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": isLoading })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">{isLoading ? \"Loading, please wait.\" : \"Press to refresh.\"}</span>\n          </Button>\n        </Tooltip>\n      </div>\n      <SchemaList\n        loading={isLoading && schema.length === 0}\n        schema={filteredSchema}\n        expandedFlags={expandedFlags}\n        onTableExpand={toggleTable}\n        onItemSelect={onItemSelect}\n      />\n    </div>\n  );\n}\n\nSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nSchemaBrowser.defaultProps = {\n  dataSource: null,\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { capitalize, isNil, map, get } from \"lodash\";\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-sql\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n\nconst langTools = ace.acequire(\"ace/ext/language_tools\");\nconst snippetsModule = ace.acequire(\"ace/snippets\");\n\n// By default Ace will try to load snippet files for the different modes and fail.\n// We don't need them, so we use these placeholders until we define our own.\nfunction defineDummySnippets(mode) {\n  ace.define(`ace/snippets/${mode}`, [\"require\", \"exports\", \"module\"], (require, exports) => {\n    exports.snippetText = \"\";\n    exports.scope = mode;\n  });\n}\n\ndefineDummySnippets(\"python\");\ndefineDummySnippets(\"sql\");\ndefineDummySnippets(\"json\");\ndefineDummySnippets(\"yaml\");\n\nfunction buildTableColumnKeywords(table) {\n  const keywords = [];\n  table.columns.forEach(column => {\n    const columnName = get(column, \"name\");\n    keywords.push({\n      name: `${table.name}.${columnName}`,\n      value: `${table.name}.${columnName}`,\n      score: 100,\n      meta: capitalize(get(column, \"type\", \"Column\")),\n    });\n  });\n  return keywords;\n}\n\nfunction buildKeywordsFromSchema(schema) {\n  const tableKeywords = [];\n  const columnKeywords = {};\n  const tableColumnKeywords = {};\n\n  schema.forEach(table => {\n    tableKeywords.push({\n      name: table.name,\n      value: table.name,\n      score: 100,\n      meta: \"Table\",\n    });\n    tableColumnKeywords[table.name] = buildTableColumnKeywords(table);\n    table.columns.forEach(c => {\n      const columnName = get(c, \"name\", c);\n      columnKeywords[columnName] = capitalize(get(c, \"type\", \"Column\"));\n    });\n  });\n\n  return {\n    table: tableKeywords,\n    column: map(columnKeywords, (v, k) => ({\n      name: k,\n      value: k,\n      score: 50,\n      meta: v,\n    })),\n    tableColumn: tableColumnKeywords,\n  };\n}\n\nconst schemaCompleterKeywords = {};\n\nexport function updateSchemaCompleter(editorKey, schema = null) {\n  schemaCompleterKeywords[editorKey] = isNil(schema) ? null : buildKeywordsFromSchema(schema);\n}\n\nlangTools.setCompleters([\n  langTools.snippetCompleter,\n  langTools.keyWordCompleter,\n  langTools.textCompleter,\n  {\n    identifierRegexps: [/[a-zA-Z_0-9.\\-\\u00A2-\\uFFFF]/],\n    getCompletions: (editor, session, pos, prefix, callback) => {\n      const { table, column, tableColumn } = schemaCompleterKeywords[editor.id] || {\n        table: [],\n        column: [],\n        tableColumn: [],\n      };\n\n      if (prefix.length === 0 || table.length === 0) {\n        callback(null, []);\n        return;\n      }\n\n      if (prefix[prefix.length - 1] === \".\") {\n        const tableName = prefix.substring(0, prefix.length - 1);\n        callback(null, table.concat(tableColumn[tableName]));\n        return;\n      }\n      callback(null, table.concat(column));\n    },\n  },\n]);\n\nexport { AceEditor, langTools, snippetsModule };\n","import { axios } from \"@/services/axios\";\nimport { extend, map } from \"lodash\";\n\nclass QuerySnippet {\n  constructor(querySnippet) {\n    extend(this, querySnippet);\n  }\n\n  getSnippet() {\n    let name = this.trigger;\n    if (this.description !== \"\") {\n      name = `${this.trigger}: ${this.description}`;\n    }\n\n    return {\n      name,\n      content: this.snippet,\n      tabTrigger: this.trigger,\n    };\n  }\n}\n\nconst getQuerySnippet = querySnippet => new QuerySnippet(querySnippet);\n\nconst QuerySnippetService = {\n  get: data => axios.get(`api/query_snippets/${data.id}`).then(getQuerySnippet),\n  query: () => axios.get(\"api/query_snippets\").then(data => map(data, getQuerySnippet)),\n  create: data => axios.post(\"api/query_snippets\", data).then(getQuerySnippet),\n  save: data => axios.post(`api/query_snippets/${data.id}`, data).then(getQuerySnippet),\n  delete: data => axios.delete(`api/query_snippets/${data.id}`),\n};\n\nexport default QuerySnippetService;\n","import React, { useCallback } from \"react\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport PropTypes from \"prop-types\";\nimport \"@/redash-font/style.less\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function AutocompleteToggle({ available, enabled, onToggle }) {\n  let tooltipMessage = \"Live Autocomplete Enabled\";\n  let icon = \"icon-flash\";\n  if (!enabled) {\n    tooltipMessage = \"Live Autocomplete Disabled\";\n    icon = \"icon-flash-off\";\n  }\n\n  if (!available) {\n    tooltipMessage = \"Live Autocomplete Not Available (Use Ctrl+Space to Trigger)\";\n    icon = \"icon-flash-off\";\n  }\n\n  const handleClick = useCallback(() => {\n    recordEvent(\"toggle_autocomplete\", \"screen\", \"query_editor\", { state: !enabled });\n    onToggle(!enabled);\n  }, [enabled, onToggle]);\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Button\n        className=\"query-editor-controls-button m-r-5\"\n        disabled={!available}\n        onClick={handleClick}\n        aria-label={enabled ? \"Disable live autocomplete\" : \"Enable live autocomplete\"}>\n        <i className={\"icon \" + icon} aria-hidden=\"true\" />\n      </Button>\n    </Tooltip>\n  );\n}\n\nAutocompleteToggle.propTypes = {\n  available: PropTypes.bool.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport recordEvent from \"@/services/recordEvent\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function AutoLimitCheckbox({ available, checked, onChange }) {\n  const handleClick = useCallback(() => {\n    recordEvent(\"checkbox_auto_limit\", \"screen\", \"query_editor\", { state: !checked });\n    onChange(!checked);\n  }, [checked, onChange]);\n\n  let tooltipMessage = null;\n  if (!available) {\n    tooltipMessage = \"Auto limiting is not available for this Data Source type.\";\n  } else {\n    tooltipMessage = \"Auto limit results to first 1000 rows.\";\n  }\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Checkbox\n        className=\"query-editor-controls-checkbox\"\n        disabled={!available}\n        onClick={handleClick}\n        checked={available && checked}>\n        LIMIT 1000\n      </Checkbox>\n    </Tooltip>\n  );\n}\n\nAutoLimitCheckbox.propTypes = {\n  available: PropTypes.bool,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { isFunction, map, filter, fromPairs, noop } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport KeyboardShortcuts, { humanReadableShortcut } from \"@/services/KeyboardShortcuts\";\n\nimport AutocompleteToggle from \"./AutocompleteToggle\";\nimport \"./QueryEditorControls.less\";\nimport AutoLimitCheckbox from \"@/components/queries/QueryEditor/AutoLimitCheckbox\";\n\nexport function ButtonTooltip({ title, shortcut, ...props }) {\n  shortcut = humanReadableShortcut(shortcut, 1); // show only primary shortcut\n  title =\n    title && shortcut ? (\n      <React.Fragment>\n        {title} (<i>{shortcut}</i>)\n      </React.Fragment>\n    ) : (\n      title || shortcut\n    );\n  return <Tooltip placement=\"top\" title={title} {...props} />;\n}\n\nButtonTooltip.propTypes = {\n  title: PropTypes.node,\n  shortcut: PropTypes.string,\n};\n\nButtonTooltip.defaultProps = {\n  title: null,\n  shortcut: null,\n};\n\nexport default function EditorControl({\n  addParameterButtonProps,\n  formatButtonProps,\n  saveButtonProps,\n  executeButtonProps,\n  autocompleteToggleProps,\n  autoLimitCheckboxProps,\n  dataSourceSelectorProps,\n}) {\n  useEffect(() => {\n    const buttons = filter(\n      [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps],\n      b => b.shortcut && isFunction(b.onClick)\n    );\n    if (buttons.length > 0) {\n      const shortcuts = fromPairs(map(buttons, b => [b.shortcut, b.disabled ? noop : b.onClick]));\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps]);\n\n  return (\n    <div className=\"query-editor-controls\">\n      {addParameterButtonProps !== false && (\n        <ButtonTooltip title={addParameterButtonProps.title} shortcut={addParameterButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={addParameterButtonProps.disabled}\n            onClick={addParameterButtonProps.onClick}>\n            {\"{{\"}&nbsp;{\"}}\"}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {formatButtonProps !== false && (\n        <ButtonTooltip title={formatButtonProps.title} shortcut={formatButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={formatButtonProps.disabled}\n            onClick={formatButtonProps.onClick}>\n            <span className=\"zmdi zmdi-format-indent-increase\" />\n            {formatButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {autocompleteToggleProps !== false && (\n        <AutocompleteToggle\n          available={autocompleteToggleProps.available}\n          enabled={autocompleteToggleProps.enabled}\n          onToggle={autocompleteToggleProps.onToggle}\n        />\n      )}\n      {autoLimitCheckboxProps !== false && <AutoLimitCheckbox {...autoLimitCheckboxProps} />}\n      {dataSourceSelectorProps === false && <span className=\"query-editor-controls-spacer\" />}\n      {dataSourceSelectorProps !== false && (\n        <Select\n          className=\"w-100 flex-fill datasource-small\"\n          disabled={dataSourceSelectorProps.disabled}\n          value={dataSourceSelectorProps.value}\n          onChange={dataSourceSelectorProps.onChange}>\n          {map(dataSourceSelectorProps.options, option => (\n            <Select.Option key={`option-${option.value}`} value={option.value}>\n              {option.label}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n      {saveButtonProps !== false && (\n        <ButtonTooltip title={saveButtonProps.title} shortcut={saveButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            disabled={saveButtonProps.disabled}\n            loading={saveButtonProps.loading}\n            onClick={saveButtonProps.onClick}\n            data-test=\"SaveButton\">\n            {!saveButtonProps.loading && <span className=\"fa fa-floppy-o\" />}\n            {saveButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {executeButtonProps !== false && (\n        <ButtonTooltip title={executeButtonProps.title} shortcut={executeButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            type=\"primary\"\n            disabled={executeButtonProps.disabled}\n            onClick={executeButtonProps.onClick}\n            data-test=\"ExecuteButton\">\n            <span className=\"zmdi zmdi-play\" />\n            {executeButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n    </div>\n  );\n}\n\nconst ButtonPropsPropType = PropTypes.oneOfType([\n  PropTypes.bool, // `false` to hide button\n  PropTypes.shape({\n    title: PropTypes.node,\n    disabled: PropTypes.bool,\n    loading: PropTypes.bool,\n    onClick: PropTypes.func,\n    text: PropTypes.node,\n    shortcut: PropTypes.string,\n  }),\n]);\n\nEditorControl.propTypes = {\n  addParameterButtonProps: ButtonPropsPropType,\n  formatButtonProps: ButtonPropsPropType,\n  saveButtonProps: ButtonPropsPropType,\n  executeButtonProps: ButtonPropsPropType,\n  autocompleteToggleProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      available: PropTypes.bool,\n      enabled: PropTypes.bool,\n      onToggle: PropTypes.func,\n    }),\n  ]),\n  autoLimitCheckboxProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape(AutoLimitCheckbox.propTypes),\n  ]),\n  dataSourceSelectorProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      disabled: PropTypes.bool,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          label: PropTypes.node,\n        })\n      ),\n      onChange: PropTypes.func,\n    }),\n  ]),\n};\n\nEditorControl.defaultProps = {\n  addParameterButtonProps: false,\n  formatButtonProps: false,\n  saveButtonProps: false,\n  executeButtonProps: false,\n  autocompleteToggleProps: false,\n  autoLimitCheckboxProps: false,\n  dataSourceSelectorProps: false,\n};\n","import React, { useEffect, useMemo, useState, useCallback, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { AceEditor, snippetsModule, updateSchemaCompleter } from \"./ace\";\nimport { srNotify } from \"@/lib/accessibility\";\nimport { SchemaItemType } from \"@/components/queries/SchemaBrowser\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport QuerySnippet from \"@/services/query-snippet\";\n\nimport QueryEditorControls from \"./QueryEditorControls\";\nimport \"./index.less\";\n\nconst editorProps = { $blockScrolling: Infinity };\n\nconst QueryEditor = React.forwardRef(function(\n  { className, syntax, value, autocompleteEnabled, schema, onChange, onSelectionChange, ...props },\n  ref\n) {\n  const [container, setContainer] = useState(null);\n  const [editorRef, setEditorRef] = useState(null);\n\n  // For some reason, value for AceEditor should be managed in this way - otherwise it goes berserk when selecting text\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const handleChange = useCallback(\n    str => {\n      setCurrentValue(str);\n      onChange(str);\n    },\n    [onChange]\n  );\n\n  const editorOptions = useMemo(\n    () => ({\n      behavioursEnabled: true,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: autocompleteEnabled,\n      autoScrollEditorIntoView: true,\n    }),\n    [autocompleteEnabled]\n  );\n\n  useEffect(() => {\n    if (editorRef) {\n      const editorId = editorRef.editor.id;\n      updateSchemaCompleter(editorId, schema);\n      return () => {\n        updateSchemaCompleter(editorId, null);\n      };\n    }\n  }, [schema, editorRef]);\n\n  useEffect(() => {\n    function resize() {\n      if (editorRef) {\n        editorRef.editor.resize();\n      }\n    }\n\n    if (container) {\n      resize();\n      const unwatch = resizeObserver(container, resize);\n      return unwatch;\n    }\n  }, [container, editorRef]);\n\n  const handleSelectionChange = useCallback(\n    selection => {\n      const rawSelectedQueryText = editorRef.editor.session.doc.getTextRange(selection.getRange());\n      const selectedQueryText = rawSelectedQueryText.length > 1 ? rawSelectedQueryText : null;\n      onSelectionChange(selectedQueryText);\n    },\n    [editorRef, onSelectionChange]\n  );\n\n  const initEditor = useCallback(editor => {\n    // Release Cmd/Ctrl+L to the browser\n    editor.commands.bindKey({ win: \"Ctrl+L\", mac: \"Cmd+L\" }, null);\n\n    // Release Cmd/Ctrl+Shift+F for format query action\n    editor.commands.bindKey({ win: \"Ctrl+Shift+F\", mac: \"Cmd+Shift+F\" }, null);\n\n    // Release Ctrl+P for open new parameter dialog\n    editor.commands.bindKey({ win: \"Ctrl+P\", mac: null }, null);\n    // Lineup only mac\n    editor.commands.bindKey({ win: null, mac: \"Ctrl+P\" }, \"golineup\");\n\n    // Esc for exiting\n    editor.commands.bindKey({ win: \"Esc\", mac: \"Esc\" }, () => {\n      editor.blur();\n    });\n\n    let notificationCleanup = null;\n    editor.on(\"focus\", () => {\n      notificationCleanup = srNotify({\n        text: \"You've entered the SQL editor. To exit press the ESC key.\",\n        politeness: \"assertive\",\n      });\n    });\n\n    editor.on(\"blur\", () => {\n      if (notificationCleanup) {\n        notificationCleanup();\n      }\n    });\n\n    // Reset Completer in case dot is pressed\n    editor.commands.on(\"afterExec\", e => {\n      if (e.command.name === \"insertstring\" && e.args === \".\" && editor.completer) {\n        editor.completer.showPopup(editor);\n      }\n    });\n\n    QuerySnippet.query().then(snippets => {\n      const snippetManager = snippetsModule.snippetManager;\n      const m = {\n        snippetText: \"\",\n      };\n      m.snippets = snippetManager.parseSnippetFile(m.snippetText);\n      snippets.forEach(snippet => {\n        m.snippets.push(snippet.getSnippet());\n      });\n      snippetManager.register(m.snippets || [], m.scope);\n    });\n\n    editor.focus();\n  }, []);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      paste: text => {\n        if (editorRef) {\n          const { editor } = editorRef;\n          editor.session.doc.replace(editor.selection.getRange(), text);\n          const range = editor.selection.getRange();\n          onChange(editor.session.getValue());\n          editor.selection.setRange(range);\n        }\n      },\n      focus: () => {\n        if (editorRef) {\n          editorRef.editor.focus();\n        }\n      },\n    }),\n    [editorRef, onChange]\n  );\n\n  return (\n    <div className={cx(\"query-editor-container\", className)} {...props} ref={setContainer}>\n      <AceEditor\n        ref={setEditorRef}\n        theme=\"textmate\"\n        mode={syntax || \"sql\"}\n        value={currentValue}\n        editorProps={editorProps}\n        width=\"100%\"\n        height=\"100%\"\n        setOptions={editorOptions}\n        showPrintMargin={false}\n        wrapEnabled={false}\n        onLoad={initEditor}\n        onChange={handleChange}\n        onSelectionChange={handleSelectionChange}\n      />\n    </div>\n  );\n});\n\nQueryEditor.propTypes = {\n  className: PropTypes.string,\n  syntax: PropTypes.string,\n  value: PropTypes.string,\n  autocompleteEnabled: PropTypes.bool,\n  schema: PropTypes.arrayOf(SchemaItemType),\n  onChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n};\n\nQueryEditor.defaultProps = {\n  className: null,\n  syntax: null,\n  value: null,\n  autocompleteEnabled: true,\n  schema: [],\n  onChange: () => {},\n  onSelectionChange: () => {},\n};\n\nQueryEditor.Controls = QueryEditorControls;\n\nexport default QueryEditor;\n","import { HTMLAttributes } from \"react\";\n\ninterface SrNotifyProps {\n  text: string;\n  expiry: number;\n  container: HTMLElement;\n  politeness: HTMLAttributes<HTMLDivElement>[\"aria-live\"];\n}\n\nexport function srNotify({ text, expiry = 1000, container = document.body, politeness = \"polite\" }: SrNotifyProps) {\n  const element = document.createElement(\"div\");\n  const id = `speak-${Date.now()}`;\n\n  element.id = id;\n  element.className = \"sr-only\";\n  element.textContent = text;\n\n  element.setAttribute(\"role\", \"alert\");\n  element.setAttribute(\"aria-live\", politeness);\n\n  container.appendChild(element);\n\n  let timer: null | number = null;\n  let isDone = false;\n  const cleanupFn = () => {\n    if (isDone) {\n      return;\n    }\n    isDone = true;\n\n    try {\n      container.removeChild(element);\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n  };\n\n  timer = window.setTimeout(cleanupFn, expiry);\n\n  return cleanupFn;\n}\n","import { has } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport DataSource from \"@/services/data-source\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nfunction fetchDataFromJobOrReturnData(data) {\n  return has(data, \"job.id\") ? fetchDataFromJob(data.job.id, 1000) : data;\n}\n\nfunction rejectErrorResponse(data) {\n  return has(data, \"error\") ? Promise.reject(new Error(data.error.message)) : data;\n}\n\nexport default {\n  ...DataSource,\n  getDatabases: ({ id }, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${id}`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getDatabaseTables: (data, databaseName, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/tables`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getTableColumns: (data, databaseName, tableName) =>\n    axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/columns/${tableName}`)\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse),\n};\n","import { includes, has, get, map, first, isFunction, isEmpty, startsWith } from \"lodash\";\nimport { useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport notification from \"@/services/notification\";\nimport DatabricksDataSource from \"@/services/databricks-data-source\";\n\nfunction getDatabases(dataSource, refresh = false) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabases(dataSource, refresh).catch(() => {\n    notification.error(\"Failed to load Database list.\", \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction getSchema(dataSource, databaseName, refresh = false) {\n  if (!dataSource || !databaseName) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabaseTables(dataSource, databaseName, refresh).catch(() => {\n    notification.error(`Failed to load tables for ${databaseName}.`, \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction addDisplayNameWithoutDatabaseName(schema, databaseName) {\n  if (!databaseName) {\n    return schema;\n  }\n  // add display name without {databaseName} + \".\"\n  return map(schema, table => {\n    const databaseNamePrefix = databaseName + \".\";\n    let displayName = table.name;\n    if (startsWith(table.name, databaseNamePrefix)) {\n      displayName = table.name.slice(databaseNamePrefix.length);\n    }\n    return { ...table, displayName };\n  });\n}\n\nexport default function useDatabricksSchema(dataSource, options = null, onOptionsUpdate = null) {\n  const [databases, setDatabases] = useState([]);\n  const [loadingDatabases, setLoadingDatabases] = useState(true);\n  const [currentDatabaseName, setCurrentDatabaseName] = useState();\n  const [schemas, setSchemas] = useState({});\n  const [loadingSchema, setLoadingSchema] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const setCurrentSchema = useCallback(\n    schema =>\n      setSchemas(currentSchemas => ({\n        ...currentSchemas,\n        [currentDatabaseName]: schema,\n      })),\n    [currentDatabaseName]\n  );\n\n  const currentDatabaseNameRef = useRef();\n  currentDatabaseNameRef.current = currentDatabaseName;\n  const loadTableColumns = useCallback(\n    tableName => {\n      // remove [databaseName.] from the tableName\n      DatabricksDataSource.getTableColumns(\n        dataSource,\n        currentDatabaseName,\n        tableName.substring(currentDatabaseName.length + 1)\n      ).then(columns => {\n        if (currentDatabaseNameRef.current === currentDatabaseName) {\n          setSchemas(currentSchemas => {\n            const schema = get(currentSchemas, currentDatabaseName, []);\n            const updatedSchema = map(schema, table => {\n              if (table.name === tableName) {\n                return { ...table, columns, loading: false };\n              }\n              return table;\n            });\n            return {\n              ...currentSchemas,\n              [currentDatabaseName]: updatedSchema,\n            };\n          });\n        }\n      });\n    },\n    [dataSource, currentDatabaseName]\n  );\n\n  const schema = useMemo(() => {\n    const currentSchema = get(schemas, currentDatabaseName, []);\n    return addDisplayNameWithoutDatabaseName(currentSchema, currentDatabaseName);\n  }, [schemas, currentDatabaseName]);\n\n  const refreshAll = useCallback(() => {\n    if (!refreshing) {\n      setRefreshing(true);\n      const getDatabasesPromise = getDatabases(dataSource, true).then(setDatabases);\n      const getSchemasPromise = getSchema(dataSource, currentDatabaseName, true).then(({ schema }) =>\n        setCurrentSchema(schema)\n      );\n\n      Promise.all([getSchemasPromise.catch(() => {}), getDatabasesPromise.catch(() => {})]).then(() =>\n        setRefreshing(false)\n      );\n    }\n  }, [dataSource, currentDatabaseName, setCurrentSchema, refreshing]);\n\n  const schemasRef = useRef();\n  schemasRef.current = schemas;\n  useEffect(() => {\n    let isCancelled = false;\n    if (currentDatabaseName && !has(schemasRef.current, currentDatabaseName)) {\n      setLoadingSchema(true);\n      getSchema(dataSource, currentDatabaseName)\n        .catch(() => Promise.resolve({ schema: [], has_columns: true }))\n        .then(({ schema, has_columns }) => {\n          if (!isCancelled) {\n            if (!has_columns && !isEmpty(schema)) {\n              schema = map(schema, table => ({ ...table, loading: true }));\n              getSchema(dataSource, currentDatabaseName, true).then(({ schema }) => {\n                if (!isCancelled) {\n                  setCurrentSchema(schema);\n                }\n              });\n            }\n            setCurrentSchema(schema);\n          }\n        })\n        .finally(() => {\n          if (!isCancelled) {\n            setLoadingSchema(false);\n          }\n        });\n    }\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource, currentDatabaseName, setCurrentSchema]);\n\n  const defaultDatabaseNameRef = useRef();\n  defaultDatabaseNameRef.current = get(options, \"selectedDatabase\", null);\n  useEffect(() => {\n    let isCancelled = false;\n    setLoadingDatabases(true);\n    setCurrentDatabaseName(undefined);\n    setSchemas({});\n    getDatabases(dataSource)\n      .catch(() => Promise.resolve([]))\n      .then(data => {\n        if (!isCancelled) {\n          setDatabases(data);\n\n          // We set the database using this order:\n          // 1. Currently selected value.\n          // 2. Last used stored in localStorage.\n          // 3. default database.\n          // 4. first database in the list.\n          let lastUsedDatabase =\n            defaultDatabaseNameRef.current || localStorage.getItem(`lastSelectedDatabricksDatabase_${dataSource.id}`);\n\n          if (!lastUsedDatabase) {\n            lastUsedDatabase = includes(data, \"default\") ? \"default\" : first(data) || null;\n          }\n\n          setCurrentDatabaseName(lastUsedDatabase);\n        }\n      })\n      .finally(() => {\n        if (!isCancelled) {\n          setLoadingDatabases(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource]);\n\n  const setCurrentDatabase = useCallback(\n    databaseName => {\n      if (databaseName) {\n        try {\n          localStorage.setItem(`lastSelectedDatabricksDatabase_${dataSource.id}`, databaseName);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      setCurrentDatabaseName(databaseName);\n      if (isFunction(onOptionsUpdate) && databaseName !== defaultDatabaseNameRef.current) {\n        onOptionsUpdate({\n          ...options,\n          selectedDatabase: databaseName,\n        });\n      }\n    },\n    [dataSource.id, options, onOptionsUpdate]\n  );\n\n  return {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    currentDatabaseName,\n    setCurrentDatabase,\n    loadTableColumns,\n    refreshAll,\n    refreshing,\n  };\n}\n","import React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport { filter, includes, get, find } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Button from \"antd/lib/button\";\nimport SyncOutlinedIcon from \"@ant-design/icons/SyncOutlined\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { SchemaList, applyFilterOnSchema } from \"@/components/queries/SchemaBrowser\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport useDatabricksSchema from \"./useDatabricksSchema\";\n\nimport \"./DatabricksSchemaBrowser.less\";\n\nexport default function DatabricksSchemaBrowser({\n  dataSource,\n  options,\n  onOptionsUpdate,\n  onSchemaUpdate,\n  onItemSelect,\n  ...props\n}) {\n  const {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    loadTableColumns,\n    currentDatabaseName,\n    setCurrentDatabase,\n    refreshAll,\n    refreshing,\n  } = useDatabricksSchema(dataSource, options, onOptionsUpdate);\n  const [filterString, setFilterString] = useState(\"\");\n  const [databaseFilterString, setDatabaseFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [isDatabaseSelectOpen, setIsDatabaseSelectOpen] = useState(false);\n  const [expandedFlags, setExpandedFlags] = useState({});\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [handleDatabaseFilterChange, cancelHandleDatabaseFilterChange] = useDebouncedCallback(\n    setDatabaseFilterString,\n    500\n  );\n\n  const handleDatabaseSelection = useCallback(\n    databaseName => {\n      setCurrentDatabase(databaseName);\n      cancelHandleDatabaseFilterChange();\n      setDatabaseFilterString(\"\");\n    },\n    [cancelHandleDatabaseFilterChange, setCurrentDatabase]\n  );\n\n  const filteredDatabases = useMemo(\n    () => filter(databases, database => includes(database.toLowerCase(), databaseFilterString.toLowerCase())),\n    [databases, databaseFilterString]\n  );\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  useEffect(() => {\n    setExpandedFlags({});\n  }, [currentDatabaseName]);\n\n  function toggleTable(tableName) {\n    const table = find(schema, { name: tableName });\n    if (!expandedFlags[tableName] && get(table, \"loading\", false)) {\n      loadTableColumns(tableName);\n    }\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"databricks-schema-browser schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className={isDatabaseSelectOpen ? \"database-select-open\" : \"\"}\n          placeholder=\"Filter tables & columns...\"\n          aria-label=\"Search schema\"\n          disabled={loadingDatabases || loadingSchema}\n          onChange={event => handleFilterChange(event.target.value)}\n          addonBefore={\n            <Select\n              dropdownClassName=\"databricks-schema-browser-db-dropdown\"\n              loading={loadingDatabases}\n              disabled={loadingDatabases}\n              onChange={handleDatabaseSelection}\n              value={currentDatabaseName}\n              showSearch\n              onSearch={handleDatabaseFilterChange}\n              onDropdownVisibleChange={setIsDatabaseSelectOpen}\n              placeholder={\n                <>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" /> Database\n                </>\n              }>\n              {filteredDatabases.map(database => (\n                <Select.Option key={database}>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" />\n                  {database}\n                </Select.Option>\n              ))}\n            </Select>\n          }\n        />\n      </div>\n      <div className=\"schema-list-wrapper\">\n        <SchemaList\n          loading={loadingDatabases || loadingSchema}\n          schema={filteredSchema}\n          expandedFlags={expandedFlags}\n          onTableExpand={toggleTable}\n          onItemSelect={onItemSelect}\n        />\n        {!(loadingSchema || loadingDatabases) && (\n          <div className=\"load-button\">\n            <Tooltip title={!refreshing ? \"Refresh Databases and Current Schema\" : null}>\n              <Button type=\"link\" onClick={refreshAll} disabled={refreshing}>\n                <SyncOutlinedIcon spin={refreshing} />\n              </Button>\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nDatabricksSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  options: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onOptionsUpdate: PropTypes.func,\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nDatabricksSchemaBrowser.defaultProps = {\n  dataSource: null,\n  options: null,\n  onOptionsUpdate: () => {},\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { isArray, isNil, each } from \"lodash\";\n\nconst componentsRegistry = new Map();\n\nexport const QueryEditorComponents = {\n  SCHEMA_BROWSER: \"SchemaBrowser\",\n  QUERY_EDITOR: \"QueryEditor\",\n};\n\nexport function registerEditorComponent(componentName, component, dataSourceTypes) {\n  if (isNil(dataSourceTypes)) {\n    dataSourceTypes = [null]; // use `null` entry for the default set of components\n  }\n\n  if (!isArray(dataSourceTypes)) {\n    dataSourceTypes = [dataSourceTypes];\n  }\n\n  each(dataSourceTypes, dataSourceType => {\n    componentsRegistry.set(dataSourceType, { ...componentsRegistry.get(dataSourceType), [componentName]: component });\n  });\n}\n\nexport function getEditorComponents(dataSourceType) {\n  return { ...componentsRegistry.get(null), ...componentsRegistry.get(dataSourceType) };\n}\n","import { useState, useEffect, useMemo } from \"react\";\nimport { first, orderBy, find } from \"lodash\";\nimport location from \"@/services/location\";\n\nexport default function useVisualizationTabHandler(visualizations) {\n  const firstVisualization = useMemo(() => first(orderBy(visualizations, [\"id\"])) || {}, [visualizations]);\n  const [selectedTab, setSelectedTab] = useState(+location.hash || firstVisualization.id);\n\n  useEffect(() => {\n    const hashValue = selectedTab !== firstVisualization.id ? `${selectedTab}` : null;\n    if (location.hash !== hashValue) {\n      location.setHash(hashValue);\n    }\n\n    const unlisten = location.listen(() => {\n      if (location.hash !== hashValue) {\n        setSelectedTab(+location.hash || firstVisualization.id);\n      }\n    });\n    return unlisten;\n  }, [firstVisualization.id, selectedTab]);\n\n  // make sure selectedTab is in visualizations\n  useEffect(() => {\n    if (!find(visualizations, { id: selectedTab })) {\n      setSelectedTab(firstVisualization.id);\n    }\n  }, [firstVisualization.id, selectedTab, visualizations]);\n\n  return useMemo(() => [selectedTab, setSelectedTab], [selectedTab]);\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { reduce } from \"lodash\";\nimport localOptions from \"@/lib/localOptions\";\n\nfunction calculateTokensCount(schema) {\n  return reduce(schema, (totalLength, table) => totalLength + table.columns.length, 0);\n}\n\nexport default function useAutocompleteFlags(schema) {\n  const isAvailable = useMemo(() => calculateTokensCount(schema) <= 5000, [schema]);\n  const [isEnabled, setIsEnabled] = useState(localOptions.get(\"liveAutocomplete\", true));\n\n  const toggleAutocomplete = useCallback(state => {\n    setIsEnabled(state);\n    localOptions.set(\"liveAutocomplete\", state);\n  }, []);\n\n  return useMemo(() => [isAvailable, isEnabled, toggleAutocomplete], [isAvailable, isEnabled, toggleAutocomplete]);\n}\n","import { useCallback, useState } from \"react\";\nimport localOptions from \"@/lib/localOptions\";\nimport { get, extend } from \"lodash\";\n\nfunction isAutoLimitAvailable(dataSource) {\n  return get(dataSource, \"supports_auto_limit\", false);\n}\n\nexport default function useAutoLimitFlags(dataSource, query, setQuery) {\n  const isAvailable = isAutoLimitAvailable(dataSource);\n  const [isChecked, setIsChecked] = useState(query.options.apply_auto_limit);\n  query.options.apply_auto_limit = isChecked;\n\n  const setAutoLimit = useCallback(\n    state => {\n      setIsChecked(state);\n      localOptions.set(\"applyAutoLimit\", state);\n      setQuery(extend(query.clone(), { options: { ...query.options, apply_auto_limit: state } }));\n    },\n    [query, setQuery]\n  );\n\n  return [isAvailable, isChecked, setAutoLimit];\n}\n","import SchemaBrowser from \"@/components/queries/SchemaBrowser\";\nimport QueryEditor from \"@/components/queries/QueryEditor\";\nimport DatabricksSchemaBrowser from \"./databricks/DatabricksSchemaBrowser\";\n\nimport { registerEditorComponent, getEditorComponents, QueryEditorComponents } from \"./editorComponents\";\n\n// default\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, SchemaBrowser);\nregisterEditorComponent(QueryEditorComponents.QUERY_EDITOR, QueryEditor);\n\n// databricks\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, DatabricksSchemaBrowser, [\n  \"databricks\",\n  \"databricks_internal\",\n]);\n\nexport { getEditorComponents };\n","import { find } from \"lodash\";\nimport debug from \"debug\";\nimport recordEvent from \"@/services/recordEvent\";\nimport redashIconUrl from \"@/assets/images/redash_icon_small.png\";\n\nconst logger = debug(\"redash:notifications\");\n\nconst Notification = window.Notification || null;\nif (!Notification) {\n  logger(\"HTML5 notifications are not supported.\");\n}\n\nconst hidden = find([\"hidden\", \"webkitHidden\", \"mozHidden\", \"msHidden\"], prop => prop in document);\n\nfunction isPageVisible() {\n  return !document[hidden];\n}\n\nfunction getPermissions() {\n  if (Notification && Notification.permission === \"default\") {\n    Notification.requestPermission();\n  }\n}\n\nfunction showNotification(title, content) {\n  if (!Notification || isPageVisible() || Notification.permission !== \"granted\") {\n    return;\n  }\n\n  // using the 'tag' to avoid showing duplicate notifications\n  const notification = new Notification(title, {\n    tag: title + content,\n    body: content,\n    icon: redashIconUrl,\n  });\n  notification.onclick = function onClick() {\n    window.focus();\n    this.close();\n    recordEvent(\"click\", \"notification\");\n  };\n}\n\nexport default {\n  getPermissions,\n  showNotification,\n};\n","import { useReducer, useEffect, useRef } from \"react\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport notifications from \"@/services/notifications\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getMaxAge() {\n  const { maxAge } = location.search;\n  return maxAge !== undefined ? maxAge : -1;\n}\n\nconst reducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty,\n});\n\n// This is currently specific to a Query page, we can refactor\n// it slightly to make it suitable for dashboard widgets instead of the other solution it\n// has in there.\nexport default function useQueryExecute(query) {\n  const [executionState, setExecutionState] = useReducer(reducer, {\n    queryResult: null,\n    isExecuting: false,\n    loadedInitialResults: false,\n    executionStatus: null,\n    isCancelling: false,\n    cancelCallback: null,\n    error: null,\n  });\n\n  const queryResultInExecution = useRef(null);\n  // Clear executing queryResult when component is unmounted to avoid errors\n  useEffect(() => {\n    return () => {\n      queryResultInExecution.current = null;\n    };\n  }, []);\n\n  const executeQuery = useImmutableCallback((maxAge = 0, queryExecutor) => {\n    let newQueryResult;\n    if (queryExecutor) {\n      newQueryResult = queryExecutor();\n    } else {\n      newQueryResult = query.getQueryResult(maxAge);\n    }\n\n    recordEvent(\"execute\", \"query\", query.id);\n    notifications.getPermissions();\n\n    queryResultInExecution.current = newQueryResult;\n\n    setExecutionState({\n      updatedAt: newQueryResult.getUpdatedAt(),\n      executionStatus: newQueryResult.getStatus(),\n      isExecuting: true,\n      cancelCallback: () => {\n        recordEvent(\"cancel_execute\", \"query\", query.id);\n        setExecutionState({ isCancelling: true });\n        newQueryResult.cancelExecution();\n      },\n    });\n\n    const onStatusChange = status => {\n      if (queryResultInExecution.current === newQueryResult) {\n        setExecutionState({ updatedAt: newQueryResult.getUpdatedAt(), executionStatus: status });\n      }\n    };\n\n    newQueryResult\n      .toPromise(onStatusChange)\n      .then(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          // TODO: this should probably belong in the QueryEditor page.\n          if (queryResult && queryResult.query_result.query === query.query) {\n            query.latest_query_data_id = queryResult.getId();\n            query.queryResult = queryResult;\n          }\n\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} updated.`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: null,\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: null,\n          });\n        }\n      })\n      .catch(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} failed to run: ${queryResult.getError()}`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: queryResult.getError(),\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: ExecutionStatus.FAILED,\n          });\n        }\n      });\n  });\n\n  const queryRef = useRef(query);\n  queryRef.current = query;\n\n  useEffect(() => {\n    // TODO: this belongs on the query page?\n    // loadedInitialResults can be removed if so\n    if (queryRef.current.hasResult() || queryRef.current.paramsRequired()) {\n      executeQuery(getMaxAge());\n    } else {\n      setExecutionState({ loadedInitialResults: true });\n    }\n  }, [executeQuery]);\n\n  return { ...executionState, ...{ executeQuery } };\n}\n","import { isUndefined } from \"lodash\";\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\n\nexport default function useQueryParameters(query) {\n  const parameters = useMemo(() => query.getParametersDefs(), [query]);\n  const [dirtyFlag, setDirtyFlag] = useState(query.getParameters().hasPendingValues());\n\n  const updateDirtyFlag = useCallback(\n    flag => {\n      flag = isUndefined(flag) ? query.getParameters().hasPendingValues() : flag;\n      setDirtyFlag(flag);\n    },\n    [query]\n  );\n\n  useEffect(() => {\n    const updatedDirtyParameters = query.getParameters().hasPendingValues();\n    if (updatedDirtyParameters !== dirtyFlag) {\n      setDirtyFlag(updatedDirtyParameters);\n    }\n  }, [query, parameters, dirtyFlag]);\n\n  return useMemo(() => [parameters, dirtyFlag, updateDirtyFlag], [parameters, dirtyFlag, updateDirtyFlag]);\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport TimePicker from \"antd/lib/time-picker\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\nimport { capitalize, clone, isEqual, omitBy, isNil, isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport { secondsToInterval, durationHumanize, pluralize, IntervalEnum, localizeTime } from \"@/lib/utils\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { RefreshScheduleType, RefreshScheduleDefault, Moment } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nconst WEEKDAYS_SHORT = moment.weekdaysShort();\nconst WEEKDAYS_FULL = moment.weekdays();\nconst DATE_FORMAT = \"YYYY-MM-DD\";\nconst HOUR_FORMAT = \"HH:mm\";\nconst { Option, OptGroup } = Select;\n\nexport function TimeEditor(props) {\n  const [time, setTime] = useState(props.defaultValue);\n  const showUtc = time && !time.isUTC();\n\n  function onChange(newTime) {\n    setTime(newTime);\n    props.onChange(newTime);\n  }\n\n  return (\n    <React.Fragment>\n      <TimePicker allowClear={false} value={time} format={HOUR_FORMAT} minuteStep={5} onChange={onChange} />\n      {showUtc && (\n        <span className=\"utc\" data-testid=\"utc\">\n          ({moment.utc(time).format(HOUR_FORMAT)} UTC)\n        </span>\n      )}\n    </React.Fragment>\n  );\n}\n\nTimeEditor.propTypes = {\n  defaultValue: Moment,\n  onChange: PropTypes.func.isRequired,\n};\n\nTimeEditor.defaultProps = {\n  defaultValue: null,\n};\n\nclass ScheduleDialog extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    refreshOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n  };\n\n  state = this.getState();\n\n  getState() {\n    const newSchedule = clone(this.props.schedule || ScheduleDialog.defaultProps.schedule);\n    const { time, interval: seconds, day_of_week: day } = newSchedule;\n    const { interval } = secondsToInterval(seconds);\n    const [hour, minute] = time ? localizeTime(time).split(\":\") : [null, null];\n\n    return {\n      hour,\n      minute,\n      seconds,\n      interval,\n      dayOfWeek: day ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(day)] : null,\n      newSchedule,\n    };\n  }\n\n  get intervals() {\n    const ret = {\n      [IntervalEnum.NEVER]: [],\n    };\n    this.props.refreshOptions.forEach(seconds => {\n      const { count, interval } = secondsToInterval(seconds);\n      if (!(interval in ret)) {\n        ret[interval] = [];\n      }\n      ret[interval].push([count, seconds]);\n    });\n\n    Object.defineProperty(this, \"intervals\", { value: ret }); // memoize\n\n    return ret;\n  }\n\n  set newSchedule(newProps) {\n    this.setState(prevState => ({\n      newSchedule: Object.assign(prevState.newSchedule, newProps),\n    }));\n  }\n\n  setTime = time => {\n    this.newSchedule = {\n      time: moment(time)\n        .utc()\n        .format(HOUR_FORMAT),\n    };\n  };\n\n  setInterval = newSeconds => {\n    const { newSchedule } = this.state;\n    const { interval: newInterval } = secondsToInterval(newSeconds);\n\n    // resets to defaults\n    if (newInterval === IntervalEnum.NEVER) {\n      newSchedule.until = null;\n    }\n    if ([IntervalEnum.NEVER, IntervalEnum.MINUTES, IntervalEnum.HOURS].indexOf(newInterval) !== -1) {\n      newSchedule.time = null;\n    }\n    if (newInterval !== IntervalEnum.WEEKS) {\n      newSchedule.day_of_week = null;\n    }\n    if (\n      (newInterval === IntervalEnum.DAYS || newInterval === IntervalEnum.WEEKS) &&\n      (!this.state.minute || !this.state.hour)\n    ) {\n      newSchedule.time = moment()\n        .hour(\"00\")\n        .minute(\"15\")\n        .utc()\n        .format(HOUR_FORMAT);\n    }\n    if (newInterval === IntervalEnum.WEEKS && !this.state.dayOfWeek) {\n      newSchedule.day_of_week = WEEKDAYS_FULL[0];\n    }\n\n    newSchedule.interval = newSeconds;\n\n    const [hour, minute] = newSchedule.time ? localizeTime(newSchedule.time).split(\":\") : [null, null];\n\n    this.setState({\n      interval: newInterval,\n      seconds: newSeconds,\n      hour,\n      minute,\n      dayOfWeek: newSchedule.day_of_week ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(newSchedule.day_of_week)] : null,\n    });\n\n    this.newSchedule = newSchedule;\n  };\n\n  setScheduleUntil = (_, date) => {\n    this.newSchedule = { until: date };\n  };\n\n  setWeekday = e => {\n    const dayOfWeek = e.target.value;\n    this.setState({ dayOfWeek });\n    this.newSchedule = {\n      day_of_week: dayOfWeek ? WEEKDAYS_FULL[WEEKDAYS_SHORT.indexOf(dayOfWeek)] : null,\n    };\n  };\n\n  setUntilToggle = e => {\n    const date = e.target.value ? moment().format(DATE_FORMAT) : null;\n    this.setScheduleUntil(null, date);\n  };\n\n  save() {\n    const { newSchedule } = this.state;\n    const hasChanged = () => {\n      const newCompact = omitBy(newSchedule, isNil);\n      const oldCompact = omitBy(this.props.schedule, isNil);\n      return !isEqual(newCompact, oldCompact);\n    };\n\n    // save if changed\n    if (hasChanged()) {\n      if (newSchedule.interval) {\n        this.props.dialog.close(clone(newSchedule));\n      } else {\n        this.props.dialog.close(null);\n      }\n    }\n    this.props.dialog.dismiss();\n  }\n\n  render() {\n    const { dialog } = this.props;\n    const {\n      interval,\n      minute,\n      hour,\n      seconds,\n      newSchedule: { until },\n    } = this.state;\n\n    return (\n      <Modal {...dialog.props} title=\"Refresh Schedule\" className=\"schedule\" onOk={() => this.save()}>\n        <div className=\"schedule-component\">\n          <h5>Refresh every</h5>\n          <div data-testid=\"interval\">\n            <Select className=\"input\" value={seconds} onChange={this.setInterval} dropdownMatchSelectWidth={false}>\n              <Option value={null} key=\"never\">\n                Never\n              </Option>\n              {Object.keys(this.intervals)\n                .filter(int => !isEmpty(this.intervals[int]))\n                .map(int => (\n                  <OptGroup label={capitalize(pluralize(int))} key={int}>\n                    {this.intervals[int].map(([cnt, secs]) => (\n                      <Option value={secs} key={`${int}-${cnt}`}>\n                        {durationHumanize(secs)}\n                      </Option>\n                    ))}\n                  </OptGroup>\n                ))}\n            </Select>\n          </div>\n        </div>\n        {[IntervalEnum.DAYS, IntervalEnum.WEEKS].indexOf(interval) !== -1 ? (\n          <div className=\"schedule-component\">\n            <h5>On time</h5>\n            <div data-testid=\"time\">\n              <TimeEditor\n                defaultValue={\n                  hour\n                    ? moment()\n                        .hour(hour)\n                        .minute(minute)\n                    : null\n                }\n                onChange={this.setTime}\n              />\n            </div>\n          </div>\n        ) : null}\n        {IntervalEnum.WEEKS === interval ? (\n          <div className=\"schedule-component\">\n            <h5>On day</h5>\n            <div data-testid=\"weekday\">\n              <Radio.Group size=\"medium\" defaultValue={this.state.dayOfWeek} onChange={this.setWeekday}>\n                {WEEKDAYS_SHORT.map(day => (\n                  <Radio.Button value={day} key={day} className=\"input\">\n                    {day[0]}\n                  </Radio.Button>\n                ))}\n              </Radio.Group>\n            </div>\n          </div>\n        ) : null}\n        {interval !== IntervalEnum.NEVER ? (\n          <div className=\"schedule-component\">\n            <h5>Ends</h5>\n            <div className=\"ends\" data-testid=\"ends\">\n              <Radio.Group size=\"medium\" value={!!until} onChange={this.setUntilToggle}>\n                <Radio value={false}>Never</Radio>\n                <Radio value>On</Radio>\n              </Radio.Group>\n              {until ? (\n                <DatePicker\n                  size=\"small\"\n                  className=\"datepicker\"\n                  value={moment(until)}\n                  allowClear={false}\n                  format={DATE_FORMAT}\n                  onChange={this.setScheduleUntil}\n                />\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ScheduleDialog);\n","import { isArray, intersection } from \"lodash\";\nimport { useCallback } from \"react\";\nimport ScheduleDialog from \"@/components/queries/ScheduleDialog\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useEditScheduleDialog(query, onChange) {\n  // We won't use flags that depend on data source\n  const queryFlags = useQueryFlags(query);\n\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    if (!queryFlags.canEdit || !queryFlags.canSchedule) {\n      return;\n    }\n\n    const intervals = clientConfig.queryRefreshIntervals;\n    const allowedIntervals = policy.getQueryRefreshIntervals();\n    const refreshOptions = isArray(allowedIntervals) ? intersection(intervals, allowedIntervals) : intervals;\n\n    ScheduleDialog.showModal({\n      schedule: query.schedule,\n      refreshOptions,\n    }).onClose(schedule => {\n      recordEvent(\"edit_schedule\", \"query\", query.id);\n      updateQuery({ schedule });\n    });\n  }, [query.id, query.schedule, queryFlags.canEdit, queryFlags.canSchedule, updateQuery]);\n}\n","import { axios } from \"@/services/axios\";\n\nconst saveOrCreateUrl = data => (data.id ? `api/visualizations/${data.id}` : \"api/visualizations\");\n\nconst Visualization = {\n  save: data => axios.post(saveOrCreateUrl(data), data),\n  delete: data => axios.delete(`api/visualizations/${data.id}`),\n};\n\nexport default Visualization;\n","import { isEqual, extend, map, sortBy, findIndex, filter, pick, omit } from \"lodash\";\nimport React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Filters, { filterData } from \"@/components/Filters\";\nimport notification from \"@/services/notification\";\nimport Visualization from \"@/services/visualization\";\nimport recordEvent from \"@/services/recordEvent\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport {\n  registeredVisualizations,\n  getDefaultVisualization,\n  newVisualization,\n  VisualizationType,\n} from \"@redash/viz/lib\";\nimport { Renderer, Editor } from \"@/components/visualizations/visualizationComponents\";\n\nimport \"./EditVisualizationDialog.less\";\n\nfunction updateQueryVisualizations(query, visualization) {\n  const index = findIndex(query.visualizations, v => v.id === visualization.id);\n  if (index > -1) {\n    query.visualizations[index] = visualization;\n  } else {\n    // new visualization\n    query.visualizations.push(visualization);\n  }\n  query.visualizations = [...query.visualizations]; // clone array\n}\n\nfunction saveVisualization(visualization) {\n  if (visualization.id) {\n    recordEvent(\"update\", \"visualization\", visualization.id, { type: visualization.type });\n  } else {\n    recordEvent(\"create\", \"visualization\", null, { type: visualization.type });\n  }\n\n  return Visualization.save(visualization)\n    .then(result => {\n      notification.success(\"Visualization saved\");\n      return result;\n    })\n    .catch(error => {\n      notification.error(\"Visualization could not be saved\");\n      return Promise.reject(error);\n    });\n}\n\nfunction confirmDialogClose(isDirty) {\n  return new Promise((resolve, reject) => {\n    if (isDirty) {\n      Modal.confirm({\n        title: \"Visualization Editor\",\n        content: \"Are you sure you want to close the editor without saving?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onOk: () => resolve(),\n        onCancel: () => reject(),\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction EditVisualizationDialog({ dialog, visualization, query, queryResult }) {\n  const errorHandlerRef = useRef();\n\n  const isNew = !visualization;\n\n  const data = useQueryResultData(queryResult);\n  const [filters, setFilters] = useState(data.filters);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const defaultState = useMemo(() => {\n    const config = visualization ? registeredVisualizations[visualization.type] : getDefaultVisualization();\n    const options = config.getOptions(isNew ? {} : visualization.options, data);\n    return {\n      type: config.type,\n      name: isNew ? config.name : visualization.name,\n      options,\n      originalOptions: options,\n    };\n  }, [data, isNew, visualization]);\n\n  const [type, setType] = useState(defaultState.type);\n  const [name, setName] = useState(defaultState.name);\n  const [nameChanged, setNameChanged] = useState(false);\n  const [options, setOptions] = useState(defaultState.options);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    if (errorHandlerRef.current) {\n      errorHandlerRef.current.reset();\n    }\n  }, [data, options]);\n\n  function onTypeChanged(newType) {\n    setType(newType);\n\n    const config = registeredVisualizations[newType];\n    if (!nameChanged) {\n      setName(config.name);\n    }\n\n    setOptions(config.getOptions(isNew ? {} : visualization.options, data));\n  }\n\n  function onNameChanged(newName) {\n    setName(newName);\n    setNameChanged(newName !== name);\n  }\n\n  function onOptionsChanged(newOptions) {\n    const config = registeredVisualizations[type];\n    setOptions(config.getOptions(newOptions, data));\n  }\n\n  function save() {\n    setSaveInProgress(true);\n    let visualizationOptions = options;\n    if (type === \"TABLE\") {\n      visualizationOptions = omit(visualizationOptions, [\"paginationSize\"]);\n    }\n\n    const visualizationData = extend(newVisualization(type), visualization, {\n      name,\n      options: visualizationOptions,\n      query_id: query.id,\n    });\n    saveVisualization(visualizationData).then(savedVisualization => {\n      updateQueryVisualizations(query, savedVisualization);\n      dialog.close(savedVisualization);\n    });\n  }\n\n  function dismiss() {\n    const optionsChanged = !isEqual(options, defaultState.originalOptions);\n    confirmDialogClose(nameChanged || optionsChanged).then(dialog.dismiss);\n  }\n\n  // When editing existing visualization chart type selector is disabled, so add only existing visualization's\n  // descriptor there (to properly render the component). For new visualizations show all types except of deprecated\n  const availableVisualizations = isNew\n    ? filter(sortBy(registeredVisualizations, [\"name\"]), vis => !vis.isDeprecated)\n    : pick(registeredVisualizations, [type]);\n\n  const vizTypeId = useUniqueId(\"visualization-type\");\n  const vizNameId = useUniqueId(\"visualization-name\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      wrapClassName=\"ant-modal-fullscreen\"\n      title=\"Visualization Editor\"\n      okText=\"Save\"\n      okButtonProps={{\n        loading: saveInProgress,\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      onCancel={dismiss}\n      wrapProps={{ \"data-test\": \"EditVisualizationDialog\" }}>\n      <div className=\"edit-visualization-dialog\">\n        <div className=\"visualization-settings\">\n          <div className=\"m-b-15\">\n            <label htmlFor={vizTypeId}>Visualization Type</label>\n            <Select\n              data-test=\"VisualizationType\"\n              id={vizTypeId}\n              className=\"w-100\"\n              disabled={!isNew}\n              value={type}\n              onChange={onTypeChanged}>\n              {map(availableVisualizations, vis => (\n                <Select.Option key={vis.type} data-test={\"VisualizationType.\" + vis.type}>\n                  {vis.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"m-b-15\">\n            <label htmlFor={vizNameId}>Visualization Name</label>\n            <Input\n              data-test=\"VisualizationName\"\n              id={vizNameId}\n              className=\"w-100\"\n              value={name}\n              onChange={event => onNameChanged(event.target.value)}\n            />\n          </div>\n          <div data-test=\"VisualizationEditor\">\n            <Editor\n              type={type}\n              data={data}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n        <div className=\"visualization-preview\">\n          <label htmlFor=\"visualization-preview\" className=\"invisible hidden-xs\">\n            Preview\n          </label>\n          <Filters filters={filters} onChange={setFilters} />\n          <div className=\"scrollbox\" data-test=\"VisualizationPreview\">\n            <Renderer\n              type={type}\n              data={filteredData}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nEditVisualizationDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nEditVisualizationDialog.defaultProps = {\n  visualization: null,\n};\n\nexport default wrapDialog(EditVisualizationDialog);\n","import { extend, filter, find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditVisualizationDialog from \"@/components/visualizations/EditVisualizationDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useEditVisualizationDialog(query, queryResult, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (visualizationId = null) => {\n      const visualization = find(query.visualizations, { id: visualizationId }) || null;\n      EditVisualizationDialog.showModal({\n        query,\n        visualization,\n        queryResult,\n      }).onClose(updatedVisualization => {\n        const filteredVisualizations = filter(query.visualizations, v => v.id !== updatedVisualization.id);\n        handleChange(\n          extend(query.clone(), { visualizations: [...filteredVisualizations, updatedVisualization] }),\n          updatedVisualization\n        );\n      });\n    },\n    [query, queryResult, handleChange]\n  );\n}\n","import { extend, filter } from \"lodash\";\nimport { useCallback } from \"react\";\nimport Visualization from \"@/services/visualization\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useDeleteVisualization(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    visualizationId =>\n      Visualization.delete({ id: visualizationId })\n        .then(() => {\n          const filteredVisualizations = filter(query.visualizations, v => v.id !== visualizationId);\n          handleChange(extend(query.clone(), { visualizations: filteredVisualizations }));\n        })\n        .catch(() => {\n          notification.error(\"Error deleting visualization.\", \"Maybe it's used in a dashboard?\");\n        }),\n    [query, handleChange]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryDescription(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    description => {\n      recordEvent(\"edit_description\", \"query\", query.id);\n      updateQuery({ description });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function QuerySourceTypeIcon(props) {\n  return <img src={`static/images/db-logos/${props.type}.png`} width=\"20\" alt={props.alt} />;\n}\n\nQuerySourceTypeIcon.propTypes = {\n  type: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { registerComponent } from \"@/components/DynamicComponent\";\nimport { QuerySourceTypeIcon } from \"@/pages/queries/components/QuerySourceTypeIcon\";\n\nexport function QuerySourceDropdownItem({ dataSource, children }) {\n  return (\n    <React.Fragment>\n      <QuerySourceTypeIcon type={dataSource.type} aria-label={dataSource.name} title={dataSource.name} />\n      {children ? children : <span>{dataSource.name}</span>}\n    </React.Fragment>\n  );\n}\n\nQuerySourceDropdownItem.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    type: PropTypes.string,\n  }).isRequired,\n  children: PropTypes.element,\n};\n\nregisterComponent(\"QuerySourceDropdownItem\", QuerySourceDropdownItem);\n","import Select from \"antd/lib/select\";\nimport { map } from \"lodash\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./QuerySourceDropdownItem\"; // register QuerySourceDropdownItem\n\nexport function QuerySourceDropdown(props) {\n  return (\n    <Select\n      className=\"w-100\"\n      data-test=\"SelectDataSource\"\n      placeholder=\"Choose data source...\"\n      value={props.value}\n      disabled={props.disabled}\n      loading={props.loading}\n      optionFilterProp=\"data-name\"\n      showSearch\n      onChange={props.onChange}>\n      {map(props.dataSources, ds => (\n        <Select.Option key={`ds-${ds.id}`} value={ds.id} data-name={ds.name} data-test={`SelectDataSource${ds.id}`}>\n          <DynamicComponent name={\"QuerySourceDropdownItem\"} dataSource={ds} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nQuerySourceDropdown.propTypes = {\n  dataSources: PropTypes.any,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nregisterComponent(\"QuerySourceDropdown\", QuerySourceDropdown);\n","import { extend, find, includes, isEmpty, map } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Resizable from \"@/components/Resizable\";\nimport Parameters from \"@/components/Parameters\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport notification from \"@/services/notification\";\nimport * as queryFormat from \"@/lib/queryFormat\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QuerySourceAlerts from \"./components/QuerySourceAlerts\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport { getEditorComponents } from \"@/components/queries/editor-components\";\nimport useQuery from \"./hooks/useQuery\";\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useAutocompleteFlags from \"./hooks/useAutocompleteFlags\";\nimport useAutoLimitFlags from \"./hooks/useAutoLimitFlags\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useQueryDataSources from \"./hooks/useQueryDataSources\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useAddNewParameterDialog from \"./hooks/useAddNewParameterDialog\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useAddVisualizationDialog from \"./hooks/useAddVisualizationDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useUpdateQuery from \"./hooks/useUpdateQuery\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useUnsavedChangesAlert from \"./hooks/useUnsavedChangesAlert\";\n\nimport \"./components/QuerySourceDropdown\"; // register QuerySourceDropdown\nimport \"./QuerySource.less\";\n\nfunction chooseDataSourceId(dataSourceIds, availableDataSources) {\n  availableDataSources = map(availableDataSources, ds => ds.id);\n  return find(dataSourceIds, id => includes(availableDataSources, id)) || null;\n}\n\nfunction QuerySource(props) {\n  const { query, setQuery, isDirty, saveQuery } = useQuery(props.query);\n  const { dataSourcesLoaded, dataSources, dataSource } = useQueryDataSources(query);\n  const [schema, setSchema] = useState([]);\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const { QueryEditor, SchemaBrowser } = getEditorComponents(dataSource && dataSource.type);\n  const isMobile = !useMedia({ minWidth: 768 });\n\n  useUnsavedChangesAlert(isDirty);\n\n  const {\n    queryResult,\n    isExecuting: isQueryExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n    loadedInitialResults,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const editorRef = useRef(null);\n  const [autocompleteAvailable, autocompleteEnabled, toggleAutocomplete] = useAutocompleteFlags(schema);\n  const [autoLimitAvailable, autoLimitChecked, setAutoLimit] = useAutoLimitFlags(dataSource, query, setQuery);\n\n  const [handleQueryEditorChange] = useDebouncedCallback(queryText => {\n    setQuery(extend(query.clone(), { query: queryText }));\n  }, 100);\n\n  useEffect(() => {\n    // TODO: ignore new pages?\n    recordEvent(\"view_source\", \"query\", query.id);\n  }, [query.id]);\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  const updateQuery = useUpdateQuery(query, setQuery);\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const querySyntax = dataSource ? dataSource.syntax || \"sql\" : null;\n  const isFormatQueryAvailable = queryFormat.isFormatQueryAvailable(querySyntax);\n  const formatQuery = () => {\n    try {\n      const formattedQueryText = queryFormat.formatQuery(query.query, querySyntax);\n      setQuery(extend(query.clone(), { query: formattedQueryText }));\n    } catch (err) {\n      notification.error(String(err));\n    }\n  };\n\n  const handleDataSourceChange = useCallback(\n    dataSourceId => {\n      if (dataSourceId) {\n        try {\n          localStorage.setItem(\"lastSelectedDataSourceId\", dataSourceId);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      if (query.data_source_id !== dataSourceId) {\n        recordEvent(\"update_data_source\", \"query\", query.id, { dataSourceId });\n        const updates = {\n          data_source_id: dataSourceId,\n          latest_query_data_id: null,\n          latest_query_data: null,\n        };\n        setQuery(extend(query.clone(), updates));\n        updateQuery(updates, { successMessage: null }); // show message only on error\n      }\n    },\n    [query, setQuery, updateQuery]\n  );\n\n  useEffect(() => {\n    // choose data source id for new queries\n    if (dataSourcesLoaded && queryFlags.isNew) {\n      const firstDataSourceId = dataSources.length > 0 ? dataSources[0].id : null;\n      handleDataSourceChange(\n        chooseDataSourceId(\n          [query.data_source_id, localStorage.getItem(\"lastSelectedDataSourceId\"), firstDataSourceId],\n          dataSources\n        )\n      );\n    }\n  }, [query.data_source_id, queryFlags.isNew, dataSourcesLoaded, dataSources, handleDataSourceChange]);\n\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const openAddNewParameterDialog = useAddNewParameterDialog(query, (newQuery, param) => {\n    if (editorRef.current) {\n      editorRef.current.paste(param.toQueryTextFragment());\n      editorRef.current.focus();\n    }\n    setQuery(newQuery);\n  });\n\n  const handleSchemaItemSelect = useCallback(schemaItem => {\n    if (editorRef.current) {\n      editorRef.current.paste(schemaItem);\n    }\n  }, []);\n\n  const [selectedText, setSelectedText] = useState(null);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isQueryExecuting))) {\n        return;\n      }\n      if (isDirty || !isEmpty(selectedText)) {\n        executeQuery(null, () => {\n          return query.getQueryResultByText(0, selectedText);\n        });\n      } else {\n        executeQuery();\n      }\n    },\n    [query, queryFlags.canExecute, areParametersDirty, isQueryExecuting, isDirty, selectedText, executeQuery]\n  );\n\n  const [isQuerySaving, setIsQuerySaving] = useState(false);\n\n  const doSaveQuery = useCallback(() => {\n    if (!isQuerySaving) {\n      setIsQuerySaving(true);\n      saveQuery().finally(() => setIsQuerySaving(false));\n    }\n  }, [isQuerySaving, saveQuery]);\n\n  const addVisualization = useAddVisualizationDialog(query, queryResult, doSaveQuery, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  return (\n    <div className={cx(\"query-page-wrapper\", { \"query-fixed-layout\": !isMobile })}>\n      <QuerySourceAlerts query={query} dataSourcesAvailable={!dataSourcesLoaded || dataSources.length > 0} />\n      <div className=\"container w-100 p-b-10\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          sourceMode\n          selectedVisualization={selectedVisualization}\n          headerExtra={<DynamicComponent name=\"QuerySource.HeaderExtra\" query={query} />}\n          onChange={setQuery}\n        />\n      </div>\n      <main className=\"query-fullscreen\">\n        <Resizable direction=\"horizontal\" sizeAttribute=\"flex-basis\" toggleShortcut=\"Alt+Shift+D, Alt+D\">\n          <nav>\n            {dataSourcesLoaded && (\n              <div className=\"editor__left__data-source\">\n                <DynamicComponent\n                  name={\"QuerySourceDropdown\"}\n                  dataSources={dataSources}\n                  value={dataSource ? dataSource.id : undefined}\n                  disabled={!queryFlags.canEdit || !dataSourcesLoaded || dataSources.length === 0}\n                  loading={!dataSourcesLoaded}\n                  onChange={handleDataSourceChange}\n                />\n              </div>\n            )}\n            <div className=\"editor__left__schema\">\n              <SchemaBrowser\n                dataSource={dataSource}\n                options={query.options.schemaOptions}\n                onOptionsUpdate={schemaOptions =>\n                  setQuery(extend(query.clone(), { options: { ...query.options, schemaOptions } }))\n                }\n                onSchemaUpdate={setSchema}\n                onItemSelect={handleSchemaItemSelect}\n              />\n            </div>\n\n            {!query.isNew() && (\n              <div className=\"query-page-query-description\">\n                <EditInPlace\n                  isEditable={queryFlags.canEdit}\n                  markdown\n                  ignoreBlanks={false}\n                  placeholder=\"Add description\"\n                  value={query.description}\n                  onDone={updateQueryDescription}\n                  multiline\n                />\n              </div>\n            )}\n\n            {!query.isNew() && <QueryMetadata layout=\"table\" query={query} onEditSchedule={editSchedule} />}\n          </nav>\n        </Resizable>\n\n        <div className=\"content\">\n          <div className=\"flex-fill p-relative\">\n            <div\n              className=\"p-absolute d-flex flex-column p-l-15 p-r-15\"\n              style={{ left: 0, top: 0, right: 0, bottom: 0, overflow: \"auto\" }}>\n              <Resizable direction=\"vertical\" sizeAttribute=\"flex-basis\">\n                <div className=\"row editor\">\n                  <section className=\"query-editor-wrapper\" data-test=\"QueryEditor\">\n                    <QueryEditor\n                      ref={editorRef}\n                      data-executing={isQueryExecuting ? \"true\" : null}\n                      syntax={dataSource ? dataSource.syntax : null}\n                      value={query.query}\n                      schema={schema}\n                      autocompleteEnabled={autocompleteAvailable && autocompleteEnabled}\n                      onChange={handleQueryEditorChange}\n                      onSelectionChange={setSelectedText}\n                    />\n\n                    <QueryEditor.Controls\n                      addParameterButtonProps={{\n                        title: \"Add New Parameter\",\n                        shortcut: \"mod+p\",\n                        onClick: openAddNewParameterDialog,\n                      }}\n                      formatButtonProps={{\n                        title: isFormatQueryAvailable\n                          ? \"Format Query\"\n                          : \"Query formatting is not supported for your Data Source syntax\",\n                        disabled: !dataSource || !isFormatQueryAvailable,\n                        shortcut: isFormatQueryAvailable ? \"mod+shift+f\" : null,\n                        onClick: formatQuery,\n                      }}\n                      saveButtonProps={\n                        queryFlags.canEdit && {\n                          text: (\n                            <React.Fragment>\n                              <span className=\"hidden-xs\">Save</span>\n                              {isDirty && !isQuerySaving ? \"*\" : null}\n                            </React.Fragment>\n                          ),\n                          shortcut: \"mod+s\",\n                          onClick: doSaveQuery,\n                          loading: isQuerySaving,\n                        }\n                      }\n                      executeButtonProps={{\n                        disabled: !queryFlags.canExecute || isQueryExecuting || areParametersDirty,\n                        shortcut: \"mod+enter, alt+enter, ctrl+enter, shift+enter\",\n                        onClick: doExecuteQuery,\n                        text: (\n                          <span className=\"hidden-xs\">{selectedText === null ? \"Execute\" : \"Execute Selected\"}</span>\n                        ),\n                      }}\n                      autocompleteToggleProps={{\n                        available: autocompleteAvailable,\n                        enabled: autocompleteEnabled,\n                        onToggle: toggleAutocomplete,\n                      }}\n                      autoLimitCheckboxProps={{\n                        available: autoLimitAvailable,\n                        checked: autoLimitChecked,\n                        onChange: setAutoLimit,\n                      }}\n                      dataSourceSelectorProps={\n                        dataSource\n                          ? {\n                              disabled: !queryFlags.canEdit,\n                              value: dataSource.id,\n                              onChange: handleDataSourceChange,\n                              options: map(dataSources, ds => ({ value: ds.id, label: ds.name })),\n                            }\n                          : false\n                      }\n                    />\n                  </section>\n                </div>\n              </Resizable>\n\n              {!queryFlags.isNew && <QueryMetadata layout=\"horizontal\" query={query} onEditSchedule={editSchedule} />}\n\n              <section className=\"query-results-wrapper\">\n                {query.hasParameters() && (\n                  <div className=\"query-parameters-wrapper\">\n                    <Parameters\n                      editable={queryFlags.canEdit}\n                      sortable={queryFlags.canEdit}\n                      disableUrlUpdate={queryFlags.isNew}\n                      parameters={parameters}\n                      onPendingValuesChange={() => updateParametersDirtyFlag()}\n                      onValuesChange={() => {\n                        updateParametersDirtyFlag(false);\n                        doExecuteQuery(true);\n                      }}\n                      onParametersEdit={() => {\n                        // save if query clean\n                        // https://discuss.redash.io/t/query-unsaved-changes-indication/3302/5\n                        if (!isDirty) {\n                          saveQuery();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n                {(executionError || isQueryExecuting) && (\n                  <div className=\"query-alerts\">\n                    <QueryExecutionStatus\n                      status={executionStatus}\n                      updatedAt={updatedAt}\n                      error={executionError}\n                      isCancelling={isExecutionCancelling}\n                      onCancel={cancelExecution}\n                    />\n                  </div>\n                )}\n\n                <React.Fragment>\n                  {queryResultData.log.length > 0 && (\n                    <div className=\"query-results-log\">\n                      <p>Log Information:</p>\n                      {map(queryResultData.log, (line, index) => (\n                        <p key={`log-line-${index}`} className=\"query-log-line\">\n                          {line}\n                        </p>\n                      ))}\n                    </div>\n                  )}\n                  {loadedInitialResults && !(queryFlags.isNew && !queryResult) && (\n                    <QueryVisualizationTabs\n                      queryResult={queryResult}\n                      visualizations={query.visualizations}\n                      showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n                      canDeleteVisualizations={queryFlags.canEdit}\n                      selectedTab={selectedVisualization}\n                      onChangeTab={setSelectedVisualization}\n                      onAddVisualization={addVisualization}\n                      onDeleteVisualization={deleteVisualization}\n                      refreshButton={\n                        <Button\n                          type=\"primary\"\n                          disabled={!queryFlags.canExecute || areParametersDirty}\n                          loading={isQueryExecuting}\n                          onClick={doExecuteQuery}>\n                          {!isQueryExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                          Refresh Now\n                        </Button>\n                      }\n                    />\n                  )}\n                </React.Fragment>\n              </section>\n            </div>\n          </div>\n          {queryResult && !queryResult.getError() && (\n            <div className=\"bottom-controller-container\">\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isQueryExecuting}\n                showEditVisualizationButton={!queryFlags.isNew && queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nQuerySource.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst QuerySourcePage = wrapQueryPage(QuerySource);\n\nroutes.register(\n  \"Queries.New\",\n  routeWithUserSession({\n    path: \"/queries/new\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\nroutes.register(\n  \"Queries.Edit\",\n  routeWithUserSession({\n    path: \"/queries/:queryId/source\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\n","import { isEmpty } from \"lodash\";\nimport { useState, useMemo } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nexport default function useQuery(originalQuery) {\n  const [query, setQuery] = useState(originalQuery);\n  const [originalQuerySource, setOriginalQuerySource] = useState(originalQuery.query);\n  const [originalAutoLimit, setOriginalAutoLimit] = useState(query.options.apply_auto_limit);\n\n  const updateQuery = useUpdateQuery(query, updatedQuery => {\n    // It's important to update URL first, and only then update state\n    if (updatedQuery.id !== query.id) {\n      // Don't reload page when saving new query\n      navigateTo(updatedQuery.getUrl(true), true);\n    }\n    setQuery(updatedQuery);\n    setOriginalQuerySource(updatedQuery.query);\n    setOriginalAutoLimit(updatedQuery.options.apply_auto_limit);\n  });\n\n  return useMemo(\n    () => ({\n      query,\n      setQuery,\n      isDirty:\n        query.query !== originalQuerySource ||\n        (!isEmpty(query.query) && query.options.apply_auto_limit !== originalAutoLimit),\n      saveQuery: () => updateQuery(),\n    }),\n    [query, originalQuerySource, updateQuery, originalAutoLimit]\n  );\n}\n","import { filter, find, toString } from \"lodash\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport DataSource from \"@/services/data-source\";\n\nexport default function useQueryDataSources(query) {\n  const [allDataSources, setAllDataSources] = useState([]);\n  const [dataSourcesLoaded, setDataSourcesLoaded] = useState(false);\n  const dataSources = useMemo(() => filter(allDataSources, ds => !ds.view_only || ds.id === query.data_source_id), [\n    allDataSources,\n    query.data_source_id,\n  ]);\n  const dataSource = useMemo(\n    () => find(dataSources, ds => toString(ds.id) === toString(query.data_source_id)) || null,\n    [query.data_source_id, dataSources]\n  );\n\n  useEffect(() => {\n    let cancelDataSourceLoading = false;\n    DataSource.query().then(data => {\n      if (!cancelDataSourceLoading) {\n        setDataSourcesLoaded(true);\n        setAllDataSources(data);\n      }\n    });\n\n    return () => {\n      cancelDataSourceLoading = true;\n    };\n  }, []);\n\n  return useMemo(() => ({ dataSourcesLoaded, dataSources, dataSource }), [dataSourcesLoaded, dataSources, dataSource]);\n}\n","import { useRef, useEffect } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useUnsavedChangesAlert(shouldShowAlert = false) {\n  const shouldShowAlertRef = useRef();\n  shouldShowAlertRef.current = shouldShowAlert;\n\n  useEffect(() => {\n    const unloadMessage = \"You will lose your changes if you leave\";\n    const confirmMessage = `${unloadMessage}\\n\\nAre you sure you want to leave this page?`;\n    // store original handler (if any)\n    const savedOnBeforeUnload = window.onbeforeunload;\n\n    window.onbeforeunload = function onbeforeunload() {\n      return shouldShowAlertRef.current ? unloadMessage : undefined;\n    };\n\n    const unsubscribe = location.confirmChange((nextLocation, currentLocation) => {\n      if (shouldShowAlertRef.current && nextLocation.path !== currentLocation.path) {\n        return confirmMessage;\n      }\n    });\n\n    return () => {\n      window.onbeforeunload = savedOnBeforeUnload;\n      unsubscribe();\n    };\n  }, []);\n}\n","import { map } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditParameterSettingsDialog from \"@/components/EditParameterSettingsDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useAddNewParameterDialog(query, onParameterAdded) {\n  const handleParameterAdded = useImmutableCallback(onParameterAdded);\n\n  return useCallback(() => {\n    EditParameterSettingsDialog.showModal({\n      parameter: {\n        title: null,\n        name: \"\",\n        type: \"text\",\n        value: null,\n      },\n      existingParams: map(query.getParameters().get(), p => p.name),\n    }).onClose(param => {\n      const newQuery = query.clone();\n      param = newQuery.getParameters().add(param);\n      handleParameterAdded(newQuery, param);\n    });\n  }, [query, handleParameterAdded]);\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport useEditVisualizationDialog from \"./useEditVisualizationDialog\";\n\nexport default function useAddVisualizationDialog(query, queryResult, saveQuery, onChange) {\n  const queryFlags = useQueryFlags(query);\n  const editVisualization = useEditVisualizationDialog(query, queryResult, onChange);\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\n\n  useEffect(() => {\n    if (!queryFlags.isNew && shouldOpenDialog) {\n      setShouldOpenDialog(false);\n      editVisualization();\n    }\n  }, [queryFlags.isNew, shouldOpenDialog, editVisualization]);\n\n  return useCallback(() => {\n    if (queryFlags.isNew) {\n      setShouldOpenDialog(true);\n      saveQuery();\n    } else {\n      editVisualization();\n    }\n  }, [queryFlags.isNew, saveQuery, editVisualization]);\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\nimport { ButtonTooltip } from \"@/components/queries/QueryEditor/QueryEditorControls\";\n\nexport default function QueryViewButton({ title, shortcut, disabled, children, onClick, ...props }) {\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const eventHandlers = useMemo(\n    () => ({\n      onMouseEnter: () => setTooltipVisible(true),\n      onMouseLeave: () => setTooltipVisible(false),\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (disabled) {\n      setTooltipVisible(false);\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (shortcut) {\n      const shortcuts = {\n        [shortcut]: onClick,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [shortcut, onClick]);\n\n  return (\n    <ButtonTooltip title={title} shortcut={shortcut} visible={tooltipVisible}>\n      <span {...eventHandlers}>\n        <Button\n          data-test=\"ExecuteButton\"\n          disabled={disabled}\n          onClick={onClick}\n          style={disabled ? { pointerEvents: \"none\" } : {}}\n          {...props}>\n          {children}\n        </Button>\n      </span>\n    </ButtonTooltip>\n  );\n}\n\nQueryViewButton.propTypes = {\n  className: PropTypes.string,\n  shortcut: PropTypes.string,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nQueryViewButton.defaultProps = {\n  className: null,\n  shortcut: null,\n  disabled: false,\n  children: null,\n  onClick: () => {},\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\n\nimport FullscreenOutlinedIcon from \"@ant-design/icons/FullscreenOutlined\";\nimport FullscreenExitOutlinedIcon from \"@ant-design/icons/FullscreenExitOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport Parameters from \"@/components/Parameters\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource from \"@/services/data-source\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport { policy } from \"@/services/policy\";\n\nimport useQueryResultData from \"@/lib/useQueryResultData\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryViewButton from \"./components/QueryViewButton\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useFullscreenHandler from \"../../lib/hooks/useFullscreenHandler\";\n\nimport \"./QueryView.less\";\n\nfunction QueryView(props) {\n  const [query, setQuery] = useState(props.query);\n  const [dataSource, setDataSource] = useState();\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const isDesktop = useMedia({ minWidth: 768 });\n  const isFixedLayout = useMedia({ minHeight: 500 }) && isDesktop;\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler(isDesktop);\n  const [addingDescription, setAddingDescription] = useState(false);\n\n  const {\n    queryResult,\n    loadedInitialResults,\n    isExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const addVisualization = useEditVisualizationDialog(query, queryResult, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isExecuting))) {\n        return;\n      }\n      executeQuery();\n    },\n    [areParametersDirty, executeQuery, isExecuting, queryFlags.canExecute]\n  );\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  useEffect(() => {\n    DataSource.get({ id: query.data_source_id }).then(setDataSource);\n  }, [query.data_source_id]);\n\n  return (\n    <div\n      className={cx(\"query-page-wrapper\", {\n        \"query-view-fullscreen\": fullscreen,\n        \"query-fixed-layout\": isFixedLayout,\n      })}>\n      <div className=\"container w-100\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          onChange={setQuery}\n          selectedVisualization={selectedVisualization}\n          headerExtra={\n            <DynamicComponent name=\"QueryView.HeaderExtra\" query={query}>\n              {policy.canRun(query) && (\n                <QueryViewButton\n                  className=\"m-r-5\"\n                  type=\"primary\"\n                  shortcut=\"mod+enter, alt+enter, ctrl+enter\"\n                  disabled={!queryFlags.canExecute || isExecuting || areParametersDirty}\n                  onClick={doExecuteQuery}>\n                  Refresh\n                </QueryViewButton>\n              )}\n            </DynamicComponent>\n          }\n          tagsExtra={\n            !query.description &&\n            queryFlags.canEdit &&\n            !addingDescription &&\n            !fullscreen && (\n              <PlainButton className=\"label label-tag hidden-xs\" role=\"none\" onClick={() => setAddingDescription(true)}>\n                <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n                Add description\n              </PlainButton>\n            )\n          }\n        />\n        {(query.description || addingDescription) && (\n          <div className={cx(\"m-t-5\", { hidden: fullscreen })}>\n            <EditInPlace\n              className=\"w-100\"\n              value={query.description}\n              isEditable={queryFlags.canEdit}\n              onDone={updateQueryDescription}\n              onStopEditing={() => setAddingDescription(false)}\n              placeholder=\"Add description\"\n              ignoreBlanks={false}\n              editorProps={{ autoSize: { minRows: 2, maxRows: 4 } }}\n              defaultEditing={addingDescription}\n              multiline\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"query-view-content\">\n        {query.hasParameters() && (\n          <div className={cx(\"bg-white tiled p-15 m-t-15 m-l-15 m-r-15\", { hidden: fullscreen })}>\n            <Parameters\n              parameters={parameters}\n              onValuesChange={() => {\n                updateParametersDirtyFlag(false);\n                doExecuteQuery(true);\n              }}\n              onPendingValuesChange={() => updateParametersDirtyFlag()}\n            />\n          </div>\n        )}\n        <div className=\"query-results m-t-15\">\n          {loadedInitialResults && (\n            <QueryVisualizationTabs\n              queryResult={queryResult}\n              visualizations={query.visualizations}\n              showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n              canDeleteVisualizations={queryFlags.canEdit}\n              selectedTab={selectedVisualization}\n              onChangeTab={setSelectedVisualization}\n              onAddVisualization={addVisualization}\n              onDeleteVisualization={deleteVisualization}\n              refreshButton={\n                policy.canRun(query) && (\n                  <Button\n                    type=\"primary\"\n                    disabled={!queryFlags.canExecute || areParametersDirty}\n                    loading={isExecuting}\n                    onClick={doExecuteQuery}>\n                    {!isExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                    Refresh Now\n                  </Button>\n                )\n              }\n              canRefresh={policy.canRun(query)}\n            />\n          )}\n          <div className=\"query-results-footer\">\n            {queryResult && !queryResult.getError() && (\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isExecuting}\n                showEditVisualizationButton={queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n                extraActions={\n                  <QueryViewButton\n                    className=\"icon-button m-r-5 hidden-xs\"\n                    title=\"Toggle Fullscreen\"\n                    type=\"default\"\n                    shortcut=\"alt+f\"\n                    onClick={toggleFullscreen}>\n                    {fullscreen ? <FullscreenExitOutlinedIcon /> : <FullscreenOutlinedIcon />}\n                  </QueryViewButton>\n                }\n              />\n            )}\n            {(executionError || isExecuting) && (\n              <div className=\"query-execution-status\">\n                <QueryExecutionStatus\n                  status={executionStatus}\n                  error={executionError}\n                  isCancelling={isExecutionCancelling}\n                  onCancel={cancelExecution}\n                  updatedAt={updatedAt}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className={cx(\"p-t-15 p-r-15 p-l-15\", { hidden: fullscreen })}>\n          <QueryMetadata layout=\"horizontal\" query={query} dataSource={dataSource} onEditSchedule={editSchedule} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryView.propTypes = { query: PropTypes.object.isRequired }; // eslint-disable-line react/forbid-prop-types\n\nconst QueryViewPage = wrapQueryPage(QueryView);\n\nroutes.register(\n  \"Queries.View\",\n  routeWithUserSession({\n    path: \"/queries/:queryId\",\n    render: pageProps => <QueryViewPage {...pageProps} />,\n  })\n);\n","import { find, has } from \"lodash\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { markdown } from \"markdown\";\n\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Link from \"@/components/Link\";\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Parameters from \"@/components/Parameters\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport QueryResultsLink from \"@/components/EditVisualizationButton/QueryResultsLink\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\n\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\n\nimport { formatDateTime } from \"@/lib/utils\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { Query } from \"@/services/query\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nfunction VisualizationEmbedHeader({ queryName, queryDescription, visualization }) {\n  return (\n    <div className=\"embed-heading p-b-10 p-r-15 p-l-15\">\n      <h3>\n        <img src={logoUrl} alt=\"Redash Logo\" style={{ height: \"24px\", verticalAlign: \"text-bottom\" }} />\n        <VisualizationName visualization={visualization} /> {queryName}\n        {queryDescription && (\n          <small>\n            <HtmlContent className=\"markdown text-muted\">{markdown.toHTML(queryDescription || \"\")}</HtmlContent>\n          </small>\n        )}\n      </h3>\n    </div>\n  );\n}\n\nVisualizationEmbedHeader.propTypes = {\n  queryName: PropTypes.string.isRequired,\n  queryDescription: PropTypes.string,\n  visualization: VisualizationType.isRequired,\n};\n\nVisualizationEmbedHeader.defaultProps = { queryDescription: \"\" };\n\nfunction VisualizationEmbedFooter({\n  query,\n  queryResults,\n  updatedAt,\n  refreshStartedAt,\n  queryUrl,\n  hideTimestamp,\n  apiKey,\n}) {\n  const downloadMenu = (\n    <Menu>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"tile__bottom-control\">\n      {!hideTimestamp && (\n        <span>\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" />{\" \"}\n            {refreshStartedAt ? <Timer from={refreshStartedAt} /> : <TimeAgo date={updatedAt} />}\n          </span>\n          <span className=\"small visible-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n          </span>\n        </span>\n      )}\n      {queryUrl && (\n        <span className=\"hidden-print\">\n          <Tooltip title=\"Open in Redash\">\n            <Link.Button className=\"icon-button\" href={queryUrl} target=\"_blank\">\n              <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Open in Redash</span>\n            </Link.Button>\n          </Tooltip>\n          {!query.hasParameters() && (\n            <Dropdown overlay={downloadMenu} disabled={!queryResults} trigger={[\"click\"]} placement=\"topLeft\">\n              <Button loading={!queryResults && !!refreshStartedAt} className=\"m-l-5\">\n                Download Dataset\n                <i className=\"fa fa-caret-up m-l-5\" aria-hidden=\"true\" />\n              </Button>\n            </Dropdown>\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nVisualizationEmbedFooter.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResults: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  updatedAt: PropTypes.string,\n  refreshStartedAt: Moment,\n  queryUrl: PropTypes.string,\n  hideTimestamp: PropTypes.bool,\n  apiKey: PropTypes.string,\n};\n\nVisualizationEmbedFooter.defaultProps = {\n  queryResults: null,\n  updatedAt: null,\n  refreshStartedAt: null,\n  queryUrl: null,\n  hideTimestamp: false,\n  apiKey: null,\n};\n\nfunction VisualizationEmbed({ queryId, visualizationId, apiKey, onError }) {\n  const [query, setQuery] = useState(null);\n  const [error, setError] = useState(null);\n  const [refreshStartedAt, setRefreshStartedAt] = useState(null);\n  const [queryResults, setQueryResults] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Query.get({ id: queryId })\n      .then(result => {\n        if (!isCancelled) {\n          setQuery(result);\n        }\n      })\n      .catch(handleError);\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [queryId, handleError]);\n\n  const refreshQueryResults = useCallback(() => {\n    if (query) {\n      setError(null);\n      setRefreshStartedAt(moment());\n      query\n        .getQueryResultPromise()\n        .then(result => {\n          setQueryResults(result);\n        })\n        .catch(err => {\n          setError(err.getError());\n        })\n        .finally(() => setRefreshStartedAt(null));\n    }\n  }, [query]);\n\n  useEffect(() => {\n    document.querySelector(\"body\").classList.add(\"headless\");\n    refreshQueryResults();\n  }, [refreshQueryResults]);\n\n  if (!query) {\n    return null;\n  }\n\n  const hideHeader = has(location.search, \"hide_header\");\n  const hideParametersUI = has(location.search, \"hide_parameters\");\n  const hideQueryLink = has(location.search, \"hide_link\");\n  const hideTimestamp = has(location.search, \"hide_timestamp\");\n\n  const showQueryDescription = has(location.search, \"showDescription\");\n  visualizationId = parseInt(visualizationId, 10);\n  const visualization = find(query.visualizations, vis => vis.id === visualizationId);\n\n  if (!visualization) {\n    // call error handler async, otherwise it will destroy the component on render phase\n    setTimeout(() => {\n      onError(new Error(\"Visualization does not exist\"));\n    }, 10);\n    return null;\n  }\n\n  return (\n    <div className=\"tile m-t-10 m-l-10 m-r-10 p-t-10 embed__vis\" data-test=\"VisualizationEmbed\">\n      {!hideHeader && (\n        <VisualizationEmbedHeader\n          queryName={query.name}\n          queryDescription={showQueryDescription ? query.description : null}\n          visualization={visualization}\n        />\n      )}\n      <div className=\"col-md-12 query__vis\">\n        {!hideParametersUI && query.hasParameters() && (\n          <div className=\"p-t-15 p-b-10\">\n            <Parameters parameters={query.getParametersDefs()} onValuesChange={refreshQueryResults} />\n          </div>\n        )}\n        {error && <div className=\"alert alert-danger\" data-test=\"ErrorMessage\">{`Error: ${error}`}</div>}\n        {!error && queryResults && (\n          <VisualizationRenderer visualization={visualization} queryResult={queryResults} context=\"widget\" />\n        )}\n        {!queryResults && refreshStartedAt && (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Refreshing...</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <VisualizationEmbedFooter\n        query={query}\n        queryResults={queryResults}\n        updatedAt={queryResults ? queryResults.getUpdatedAt() : undefined}\n        refreshStartedAt={refreshStartedAt}\n        queryUrl={!hideQueryLink ? query.getUrl() : null}\n        hideTimestamp={hideTimestamp}\n        apiKey={apiKey}\n      />\n    </div>\n  );\n}\n\nVisualizationEmbed.propTypes = {\n  queryId: PropTypes.string.isRequired,\n  visualizationId: PropTypes.string,\n  apiKey: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n};\n\nVisualizationEmbed.defaultProps = {\n  onError: () => {},\n};\n\nroutes.register(\n  \"Visualizations.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/embed/query/:queryId/visualization/:visualizationId\",\n    render: pageProps => <VisualizationEmbed {...pageProps} />,\n    getApiKey: () => location.search.api_key,\n  })\n);\n","import { isNil, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction QuerySnippetDialog({ querySnippet, dialog, readOnly }) {\n  const handleSubmit = useCallback(\n    (values, successCallback, errorCallback) => {\n      const querySnippetId = get(querySnippet, \"id\");\n\n      if (isNil(values.description)) {\n        values.description = \"\";\n      }\n\n      dialog\n        .close(querySnippetId ? { id: querySnippetId, ...values } : values)\n        .then(() => successCallback(\"Saved.\"))\n        .catch(() => errorCallback(\"Failed saving snippet.\"));\n    },\n    [dialog, querySnippet]\n  );\n\n  const isEditing = !!get(querySnippet, \"id\");\n\n  const formFields = [\n    { name: \"trigger\", title: \"Trigger\", type: \"text\", required: true, autoFocus: !isEditing },\n    { name: \"description\", title: \"Description\", type: \"text\" },\n    { name: \"snippet\", title: \"Snippet\", type: \"ace\", required: true },\n  ].map(field => ({ ...field, readOnly, initialValue: get(querySnippet, field.name, \"\") }));\n\n  const querySnippetsFormId = useUniqueId(\"querySnippetForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isEditing ? querySnippet.trigger : \"Create Query Snippet\"}\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          {readOnly ? \"Close\" : \"Cancel\"}\n        </Button>,\n        !readOnly && (\n          <Button\n            key=\"submit\"\n            {...dialog.props.okButtonProps}\n            disabled={readOnly || dialog.props.okButtonProps.disabled}\n            htmlType=\"submit\"\n            type=\"primary\"\n            form={querySnippetsFormId}\n            data-test=\"SaveQuerySnippetButton\">\n            {isEditing ? \"Save\" : \"Create\"}\n          </Button>\n        ),\n      ]}\n      wrapProps={{\n        \"data-test\": \"QuerySnippetDialog\",\n      }}>\n      <DynamicForm\n        id={querySnippetsFormId}\n        fields={formFields}\n        onSubmit={handleSubmit}\n        hideSubmitButton\n        feedbackIcons\n      />\n    </Modal>\n  );\n}\n\nQuerySnippetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  querySnippet: PropTypes.object,\n  readOnly: PropTypes.bool,\n};\n\nQuerySnippetDialog.defaultProps = {\n  querySnippet: null,\n  readOnly: false,\n};\n\nexport default wrapDialog(QuerySnippetDialog);\n","import { get } from \"lodash\";\nimport React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\nimport QuerySnippetDialog from \"@/components/query-snippets/QuerySnippetDialog\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport QuerySnippet from \"@/services/query-snippet\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport \"./QuerySnippetsList.less\";\n\nconst canEditQuerySnippet = querySnippet => currentUser.isAdmin || currentUser.id === get(querySnippet, \"user.id\");\n\nclass QuerySnippetsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, querySnippet) => (\n        <PlainButton type=\"link\" className=\"table-main-title\" onClick={() => this.showSnippetDialog(querySnippet)}>\n          {querySnippet.trigger}\n        </PlainButton>\n      ),\n      {\n        title: \"Trigger\",\n        field: \"trigger\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom.sortable(text => text, {\n      title: \"Description\",\n      field: \"description\",\n      className: \"text-nowrap\",\n    }),\n    Columns.custom(snippet => <code className=\"snippet-content\">{snippet}</code>, {\n      title: \"Snippet\",\n      field: \"snippet\",\n    }),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.date.sortable({\n      title: \"Created At\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, querySnippet) =>\n        canEditQuerySnippet(querySnippet) && (\n          <Button type=\"danger\" className=\"w-100\" onClick={e => this.deleteQuerySnippet(e, querySnippet)}>\n            Delete\n          </Button>\n        ),\n      {\n        width: \"1%\",\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    const { isNewOrEditPage, querySnippetId } = this.props.controller.params;\n\n    if (isNewOrEditPage) {\n      if (querySnippetId === \"new\") {\n        if (policy.isCreateQuerySnippetEnabled()) {\n          this.showSnippetDialog();\n        } else {\n          navigateTo(\"query_snippets\", true);\n        }\n      } else {\n        QuerySnippet.get({ id: querySnippetId })\n          .then(this.showSnippetDialog)\n          .catch(error => {\n            this.props.controller.handleError(error);\n          });\n      }\n    }\n  }\n\n  saveQuerySnippet = querySnippet => {\n    const saveSnippet = querySnippet.id ? QuerySnippet.save : QuerySnippet.create;\n    return saveSnippet(querySnippet);\n  };\n\n  deleteQuerySnippet = (event, querySnippet) => {\n    Modal.confirm({\n      title: \"Delete Query Snippet\",\n      content: \"Are you sure you want to delete this query snippet?\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        QuerySnippet.delete(querySnippet)\n          .then(() => {\n            notification.success(\"Query snippet deleted successfully.\");\n            this.props.controller.update();\n          })\n          .catch(() => {\n            notification.error(\"Failed deleting query snippet.\");\n          });\n      },\n    });\n  };\n\n  showSnippetDialog = (querySnippet = null) => {\n    const canSave = !querySnippet || canEditQuerySnippet(querySnippet);\n    navigateTo(\"query_snippets/\" + get(querySnippet, \"id\", \"new\"), true);\n    const goToSnippetsList = () => navigateTo(\"query_snippets\", true);\n    QuerySnippetDialog.showModal({\n      querySnippet,\n      readOnly: !canSave,\n    })\n      .onClose(querySnippet =>\n        this.saveQuerySnippet(querySnippet).then(() => {\n          this.props.controller.update();\n          goToSnippetsList();\n        })\n      )\n      .onDismiss(goToSnippetsList);\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button\n            type=\"primary\"\n            onClick={() => this.showSnippetDialog()}\n            disabled={!policy.isCreateQuerySnippetEnabled()}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Query Snippet\n          </Button>\n        </div>\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center\">\n            There are no query snippets yet.\n            {policy.isCreateQuerySnippetEnabled() && (\n              <div className=\"m-t-5\">\n                <PlainButton type=\"link\" onClick={() => this.showSnippetDialog()}>\n                  Click here\n                </PlainButton>{\" \"}\n                to add one.\n              </div>\n            )}\n          </div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive query-snippets-table\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst QuerySnippetsListPage = wrapSettingsTab(\n  \"QuerySnippets.List\",\n  {\n    permission: \"create_query\",\n    title: \"Query Snippets\",\n    path: \"query_snippets\",\n    order: 5,\n  },\n  itemsList(\n    QuerySnippetsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return QuerySnippet.query.bind(QuerySnippet);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"trigger\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"QuerySnippets.List\",\n  routeWithUserSession({\n    path: \"/query_snippets\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" />,\n  })\n);\nroutes.register(\n  \"QuerySnippets.NewOrEdit\",\n  routeWithUserSession({\n    path: \"/query_snippets/:querySnippetId\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" isNewOrEditPage />,\n  })\n);\n","import { get } from \"lodash\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport recordEvent from \"@/services/recordEvent\";\nimport OrgSettings from \"@/services/organizationSettings\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { updateClientConfig } from \"@/services/auth\";\n\nexport default function useOrganizationSettings({ onError }) {\n  const [settings, setSettings] = useState({});\n  const [currentValues, setCurrentValues] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"org_settings\");\n\n    let isCancelled = false;\n\n    OrgSettings.get()\n      .then(response => {\n        if (!isCancelled) {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          setIsLoading(false);\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [handleError]);\n\n  const handleChange = useCallback(changes => {\n    setCurrentValues(currentValues => ({ ...currentValues, ...changes }));\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (!isSaving) {\n      setIsSaving(true);\n      OrgSettings.save(currentValues)\n        .then(response => {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          updateClientConfig({\n            dateFormat: currentValues.date_format,\n            timeFormat: currentValues.time_format,\n            dateTimeFormat: `${currentValues.date_format} ${currentValues.time_format}`,\n          });\n        })\n        .catch(handleError)\n        .finally(() => setIsSaving(false));\n    }\n  }, [isSaving, currentValues, handleError]);\n\n  return { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange };\n}\n","import PropTypes from \"prop-types\";\n\nexport const SettingsEditorPropTypes = {\n  settings: PropTypes.object,\n  values: PropTypes.object,\n  onChange: PropTypes.func, // (key, value) => void\n  loading: PropTypes.bool,\n};\n\nexport const SettingsEditorDefaultProps = {\n  settings: {},\n  values: {},\n  onChange: () => {},\n  loading: false,\n};\n","import React from \"react\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function FormatSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FormatSettings\" {...props}>\n      <Form.Item label=\"Date Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.date_format}\n            onChange={value => onChange({ date_format: value })}\n            data-test=\"DateFormatSelect\">\n            {clientConfig.dateFormatList.map(dateFormat => (\n              <Select.Option key={dateFormat} data-test={`DateFormatSelect:${dateFormat}`}>\n                {dateFormat}\n              </Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"Time Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.time_format}\n            onChange={value => onChange({ time_format: value })}\n            data-test=\"TimeFormatSelect\">\n            {clientConfig.timeFormatList.map(timeFormat => (\n              <Select.Option key={timeFormat}>{timeFormat}</Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFormatSettings.propTypes = SettingsEditorPropTypes;\n\nFormatSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PlotlySettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PlotlySettings\" {...props}>\n      <Form.Item label=\"Chart Visualization\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            name=\"hide_plotly_mode_bar\"\n            checked={values.hide_plotly_mode_bar}\n            onChange={e => onChange({ hide_plotly_mode_bar: e.target.checked })}>\n            Hide Plotly mode bar\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPlotlySettings.propTypes = SettingsEditorPropTypes;\n\nPlotlySettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Row from \"antd/lib/row\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function FeatureFlagsSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings\" {...props}>\n      <Form.Item label=\"Feature Flags\">\n        {loading ? (\n          <>\n            <Row>\n              <Skeleton title={false} paragraph={{ width: [300, 300, 300], rows: 3 }} active />\n            </Row>\n          </>\n        ) : (\n          <>\n            <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings.PermissionsControl\" {...props}>\n              <Row>\n                <Checkbox\n                  name=\"feature_show_permissions_control\"\n                  checked={values.feature_show_permissions_control}\n                  onChange={e => onChange({ feature_show_permissions_control: e.target.checked })}>\n                  Enable experimental multiple owners support\n                </Checkbox>\n              </Row>\n            </DynamicComponent>\n            <Row>\n              <Checkbox\n                name=\"send_email_on_failed_scheduled_queries\"\n                checked={values.send_email_on_failed_scheduled_queries}\n                onChange={e => onChange({ send_email_on_failed_scheduled_queries: e.target.checked })}>\n                Email query owners when scheduled queries fail\n              </Checkbox>\n            </Row>\n            <Row>\n              <Checkbox\n                name=\"multi_byte_search_enabled\"\n                checked={values.multi_byte_search_enabled}\n                onChange={e => onChange({ multi_byte_search_enabled: e.target.checked })}>\n                Enable multi-byte (Chinese, Japanese, and Korean) search for query names and descriptions (slower)\n              </Checkbox>\n            </Row>\n          </>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFeatureFlagsSettings.propTypes = SettingsEditorPropTypes;\n\nFeatureFlagsSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function BeaconConsentSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.BeaconConsentSettings\" {...props}>\n      <Form.Item\n        label={\n          <span>\n            Anonymous Usage Data Sharing\n            <HelpTrigger className=\"m-l-5 m-r-5\" type=\"USAGE_DATA_SHARING\" />\n          </span>\n        }>\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            name=\"beacon_consent\"\n            checked={values.beacon_consent}\n            onChange={e => onChange({ beacon_consent: e.target.checked })}>\n            Help Redash improve by automatically sending anonymous usage data\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nBeaconConsentSettings.propTypes = SettingsEditorPropTypes;\n\nBeaconConsentSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport FormatSettings from \"./FormatSettings\";\nimport PlotlySettings from \"./PlotlySettings\";\nimport FeatureFlagsSettings from \"./FeatureFlagsSettings\";\nimport BeaconConsentSettings from \"./BeaconConsentSettings\";\n\nexport default function GeneralSettings(props) {\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GeneralSettings\" {...props}>\n      <h3 className=\"m-t-0\">General</h3>\n      <hr />\n      <FormatSettings {...props} />\n      <PlotlySettings {...props} />\n      <FeatureFlagsSettings {...props} />\n      <BeaconConsentSettings {...props} />\n    </DynamicComponent>\n  );\n}\n","import React from \"react\";\nimport Alert from \"antd/lib/alert\";\nimport Form from \"antd/lib/form\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PasswordLoginSettings(props) {\n  const { settings, values, onChange, loading } = props;\n\n  const isTheOnlyAuthMethod =\n    !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !values.auth_saml_enabled;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PasswordLoginSettings\" {...props}>\n      {!loading && !settings.auth_password_login_enabled && (\n        <Alert\n          message=\"Password based login is currently disabled and users will\n            be able to login only with the enabled SSO options.\"\n          type=\"warning\"\n          className=\"m-t-15 m-b-15\"\n        />\n      )}\n      <Form.Item label=\"Password Login\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            checked={values.auth_password_login_enabled}\n            disabled={isTheOnlyAuthMethod}\n            onChange={e => onChange({ auth_password_login_enabled: e.target.checked })}>\n            <Tooltip\n              title={\n                isTheOnlyAuthMethod ? \"Password login can be disabled only if another login method is enabled.\" : null\n              }\n              placement=\"right\">\n              Password Login Enabled\n            </Tooltip>\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPasswordLoginSettings.propTypes = SettingsEditorPropTypes;\n\nPasswordLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import { isEmpty, join } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function GoogleLoginSettings(props) {\n  const { values, onChange } = props;\n\n  if (!clientConfig.googleLoginEnabled) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GoogleLoginSettings\" {...props}>\n      <h4>Google Login</h4>\n      <Form.Item label=\"Allowed Google Apps Domains\">\n        <Select\n          mode=\"tags\"\n          value={values.auth_google_apps_domains}\n          onChange={value => onChange({ auth_google_apps_domains: value })}\n        />\n        {!isEmpty(values.auth_google_apps_domains) && (\n          <Alert\n            message={\n              <p>\n                Any user registered with a <strong>{join(values.auth_google_apps_domains, \", \")}</strong> Google Apps\n                account will be able to login. If they don't have an existing user, a new user will be created and join\n                the <strong>Default</strong> group.\n              </p>\n            }\n            className=\"m-t-15\"\n          />\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nGoogleLoginSettings.propTypes = SettingsEditorPropTypes;\n\nGoogleLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport Radio from \"antd/lib/radio\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function SAMLSettings(props) {\n  const { values, onChange, loading } = props;\n\n  const onChangeEnabledStatus = e => {\n    const updates = { auth_saml_enabled: !!e.target.value };\n    if (e.target.value) {\n      updates.auth_saml_type = e.target.value;\n    }\n    onChange(updates);\n  };\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.SAMLSettings\" {...props}>\n      <h4>SAML</h4>\n      <Form.Item label=\"SAML Enabled\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Radio.Group\n            onChange={onChangeEnabledStatus}\n            value={values.auth_saml_enabled && (values.auth_saml_type || \"dynamic\")}>\n            <Radio value={false}>Disabled</Radio>\n            <Radio value={\"static\"}>Enabled (Static)</Radio>\n            <Radio value={\"dynamic\"}>Enabled (Dynamic)</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n      {values.auth_saml_enabled && (\n        <>\n          {values.auth_saml_type === \"static\" && (\n            <>\n              <Form.Item label=\"SAML Single Sign-on URL\">\n                <Input\n                  value={values.auth_saml_sso_url}\n                  onChange={e => onChange({ auth_saml_sso_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML x509 cert\">\n                <Input\n                  value={values.auth_saml_x509_cert}\n                  onChange={e => onChange({ auth_saml_x509_cert: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n          {values.auth_saml_type === \"dynamic\" && (\n            <>\n              <Form.Item label=\"SAML Metadata URL\">\n                <Input\n                  value={values.auth_saml_metadata_url}\n                  onChange={e => onChange({ auth_saml_metadata_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML NameID Format\">\n                <Input\n                  value={values.auth_saml_nameid_format}\n                  onChange={e => onChange({ auth_saml_nameid_format: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n        </>\n      )}\n    </DynamicComponent>\n  );\n}\n\nSAMLSettings.propTypes = SettingsEditorPropTypes;\n\nSAMLSettings.defaultProps = SettingsEditorDefaultProps;\n","import React, { useCallback } from \"react\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nimport PasswordLoginSettings from \"./PasswordLoginSettings\";\nimport GoogleLoginSettings from \"./GoogleLoginSettings\";\nimport SAMLSettings from \"./SAMLSettings\";\n\nexport default function AuthSettings(props) {\n  const { values, onChange } = props;\n  const handleChange = useCallback(\n    changes => {\n      const allSettings = { ...values, ...changes };\n      const allAuthMethodsDisabled =\n        !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !allSettings.auth_saml_enabled;\n      if (allAuthMethodsDisabled) {\n        changes = { ...changes, auth_password_login_enabled: true };\n      }\n      onChange(changes);\n    },\n    [values, onChange]\n  );\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.AuthSettings\" {...props}>\n      <h3 className=\"m-t-0\">\n        Authentication <HelpTrigger type=\"AUTHENTICATION_OPTIONS\" />\n      </h3>\n      <hr />\n      <PasswordLoginSettings {...props} onChange={handleChange} />\n      <GoogleLoginSettings {...props} onChange={handleChange} />\n      <SAMLSettings {...props} onChange={handleChange} />\n    </DynamicComponent>\n  );\n}\n\nAuthSettings.propTypes = SettingsEditorPropTypes;\nAuthSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport routes from \"@/services/routes\";\nimport { getHorizontalFormProps, getHorizontalFormItemWithoutLabelProps } from \"@/styles/formStyle\";\n\nimport useOrganizationSettings from \"./hooks/useOrganizationSettings\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport AuthSettings from \"./components/AuthSettings\";\n\nfunction OrganizationSettings({ onError }) {\n  const { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange } = useOrganizationSettings(onError);\n  return (\n    <div className=\"row\" data-test=\"OrganizationSettings\">\n      <div className=\"m-r-20 m-l-20\">\n        <Form {...getHorizontalFormProps()} onFinish={handleSubmit}>\n          <GeneralSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <AuthSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <Form.Item {...getHorizontalFormItemWithoutLabelProps()}>\n            {isLoading ? (\n              <Skeleton.Button active />\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\" loading={isSaving} data-test=\"OrganizationSettingsSaveButton\">\n                Save\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nOrganizationSettings.propTypes = {\n  onError: PropTypes.func,\n};\n\nOrganizationSettings.defaultProps = {\n  onError: () => {},\n};\n\nconst OrganizationSettingsPage = wrapSettingsTab(\n  \"Settings.Organization\",\n  {\n    permission: \"admin\",\n    title: \"General\",\n    path: \"settings/general\",\n    order: 6,\n  },\n  OrganizationSettings\n);\n\nroutes.register(\n  \"Settings.Organization\",\n  routeWithUserSession({\n    path: \"/settings/general\",\n    title: \"General Settings\",\n    render: pageProps => <OrganizationSettingsPage {...pageProps} />,\n  })\n);\n","import { FormProps } from \"antd/lib/form/Form\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\nimport \"./formStyle.less\";\n\nexport function getHorizontalFormProps(): FormProps {\n  return {\n    labelCol: { xs: { span: 24 }, sm: { span: 6 }, lg: { span: 4 } },\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12 }, lg: { span: 10 } },\n    layout: \"horizontal\",\n    className: \"ant-form-horizontal--labels-left\",\n  };\n}\n\nexport function getHorizontalFormItemWithoutLabelProps(): FormItemProps {\n  return {\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12, offset: 6 }, lg: { span: 12, offset: 4 } },\n  };\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function absoluteUrl(url) {\n  const urlObj = new URL(url, window.location);\n  urlObj.protocol = window.location.protocol;\n  urlObj.host = window.location.host;\n  return urlObj.toString();\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst formFields = [\n  { required: true, name: \"name\", title: \"Name\", type: \"text\", autoFocus: true },\n  { required: true, name: \"email\", title: \"Email\", type: \"email\" },\n];\n\nfunction CreateUserDialog({ dialog }) {\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"users/new\");\n  }, []);\n\n  const handleSubmit = useCallback(values => dialog.close(values).catch(setError), [dialog]);\n  const formId = useUniqueId(\"userForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Create a New User\"\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          {...dialog.props.okButtonProps}\n          htmlType=\"submit\"\n          type=\"primary\"\n          form={formId}\n          data-test=\"SaveUserButton\">\n          Create\n        </Button>,\n      ]}\n      wrapProps={{\n        \"data-test\": \"CreateUserDialog\",\n      }}>\n      <DynamicForm id={formId} fields={formFields} onSubmit={handleSubmit} hideSubmitButton />\n      {error && <Alert message={error.message} type=\"error\" showIcon data-test=\"CreateUserErrorAlert\" />}\n    </Modal>\n  );\n}\n\nCreateUserDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateUserDialog);\n","import { isString, map, get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport User from \"@/services/user\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport notification from \"@/services/notification\";\nimport { absoluteUrl } from \"@/services/utils\";\nimport routes from \"@/services/routes\";\n\nimport CreateUserDialog from \"./components/CreateUserDialog\";\n\nfunction UsersListActions({ user, enableUser, disableUser, deleteUser }) {\n  if (user.id === currentUser.id) {\n    return null;\n  }\n  if (user.is_invitation_pending) {\n    return (\n      <Button type=\"danger\" className=\"w-100\" onClick={event => deleteUser(event, user)}>\n        Delete\n      </Button>\n    );\n  }\n  return user.is_disabled ? (\n    <Button type=\"primary\" className=\"w-100\" onClick={event => enableUser(event, user)}>\n      Enable\n    </Button>\n  ) : (\n    <Button className=\"w-100\" onClick={event => disableUser(event, user)}>\n      Disable\n    </Button>\n  );\n}\n\nUsersListActions.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    is_invitation_pending: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n  }).isRequired,\n  enableUser: PropTypes.func.isRequired,\n  disableUser: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n};\n\nclass UsersList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  sidebarMenu = [\n    {\n      key: \"active\",\n      href: \"users\",\n      title: \"Active Users\",\n    },\n    {\n      key: \"pending\",\n      href: \"users/pending\",\n      title: \"Pending Invitations\",\n    },\n    {\n      key: \"disabled\",\n      href: \"users/disabled\",\n      title: \"Disabled Users\",\n      isAvailable: () => policy.canCreateUser(),\n    },\n  ];\n\n  listColumns = [\n    Columns.custom.sortable((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom.sortable(\n      (text, user) =>\n        map(user.groups, group => (\n          <Link key={\"group\" + group.id} className=\"label label-tag\" href={\"groups/\" + group.id}>\n            {group.name}\n          </Link>\n        )),\n      {\n        title: \"Groups\",\n        field: \"groups\",\n      }\n    ),\n    Columns.timeAgo.sortable({\n      title: \"Joined\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.timeAgo.sortable({\n      title: \"Last Active At\",\n      field: \"active_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, user) => (\n        <UsersListActions\n          user={user}\n          enableUser={this.enableUser}\n          disableUser={this.disableUser}\n          deleteUser={this.deleteUser}\n        />\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => policy.canCreateUser(),\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    if (this.props.controller.params.isNewUserPage) {\n      this.showCreateUserDialog();\n    }\n  }\n\n  createUser = values =>\n    User.create(values)\n      .then(user => {\n        notification.success(\"Saved.\");\n        if (user.invite_link) {\n          Modal.warning({\n            title: \"Email not sent!\",\n            content: (\n              <React.Fragment>\n                <p>\n                  The mail server is not configured, please send the following link to <b>{user.name}</b>:\n                </p>\n                <InputWithCopy value={absoluteUrl(user.invite_link)} aria-label=\"Invite link\" readOnly />\n              </React.Fragment>\n            ),\n          });\n        }\n      })\n      .catch(error => {\n        const message = find([get(error, \"response.data.message\"), get(error, \"message\"), \"Failed saving.\"], isString);\n        return Promise.reject(new Error(message));\n      });\n\n  showCreateUserDialog = () => {\n    if (policy.isCreateUserEnabled()) {\n      const goToUsersList = () => {\n        if (this.props.controller.params.isNewUserPage) {\n          navigateTo(\"users\");\n        }\n      };\n      CreateUserDialog.showModal()\n        .onClose(values =>\n          this.createUser(values).then(() => {\n            this.props.controller.update();\n            goToUsersList();\n          })\n        )\n        .onDismiss(goToUsersList);\n    }\n  };\n\n  enableUser = (event, user) => User.enableUser(user).then(() => this.props.controller.update());\n\n  disableUser = (event, user) => User.disableUser(user).then(() => this.props.controller.update());\n\n  deleteUser = (event, user) => User.deleteUser(user).then(() => this.props.controller.update());\n\n  // eslint-disable-next-line class-methods-use-this\n  renderPageHeader() {\n    if (!policy.canCreateUser()) {\n      return null;\n    }\n    return (\n      <div className=\"m-b-15\">\n        <Button type=\"primary\" disabled={!policy.isCreateUserEnabled()} onClick={this.showCreateUserDialog}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          New User\n        </Button>\n        <DynamicComponent name=\"UsersListExtra\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <React.Fragment>\n        {this.renderPageHeader()}\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n              label=\"Search users\"\n            />\n            <Sidebar.Menu items={this.sidebarMenu} selected={controller.params.currentPage} />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\" data-test=\"UserList\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nconst UsersListPage = wrapSettingsTab(\n  \"Users.List\",\n  {\n    permission: \"list_users\",\n    title: \"Users\",\n    path: \"users\",\n    isActive: path => path.startsWith(\"/users\") && path !== \"/users/me\",\n    order: 2,\n  },\n  itemsList(\n    UsersList,\n    () =>\n      new ResourceItemsSource({\n        getRequest(request, { params: { currentPage } }) {\n          switch (currentPage) {\n            case \"active\":\n              request.pending = false;\n              break;\n            case \"pending\":\n              request.pending = true;\n              break;\n            case \"disabled\":\n              request.disabled = true;\n              break;\n            // no default\n          }\n          return request;\n        },\n        getResource() {\n          return User.query.bind(User);\n        },\n      }),\n    () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n  )\n);\n\nroutes.register(\n  \"Users.New\",\n  routeWithUserSession({\n    path: \"/users/new\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" isNewUserPage />,\n  })\n);\nroutes.register(\n  \"Users.List\",\n  routeWithUserSession({\n    path: \"/users\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" />,\n  })\n);\nroutes.register(\n  \"Users.Pending\",\n  routeWithUserSession({\n    path: \"/users/pending\",\n    title: \"Pending Invitations\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"pending\" />,\n  })\n);\nroutes.register(\n  \"Users.Disabled\",\n  routeWithUserSession({\n    path: \"/users/disabled\",\n    title: \"Disabled Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"disabled\" />,\n  })\n);\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tag from \"antd/lib/tag\";\nimport Link from \"@/components/Link\";\n\nimport \"./UserGroups.less\";\n\nexport default function UserGroups({ groups, linkGroups, ...props }) {\n  return (\n    <div className=\"user-groups\" {...props}>\n      {map(groups, group => (\n        <Tag key={group.id}>{linkGroups ? <Link href={`groups/${group.id}`}>{group.name}</Link> : group.name}</Tag>\n      ))}\n    </div>\n  );\n}\n\nUserGroups.propTypes = {\n  groups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string,\n    })\n  ),\n  linkGroups: PropTypes.bool,\n};\n\nUserGroups.defaultProps = {\n  groups: [],\n  linkGroups: true,\n};\n","import { filter, includes, isArray } from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Group from \"@/services/group\";\n\nexport default function useUserGroups(user) {\n  const [allGroups, setAllGroups] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const groups = useMemo(() => filter(allGroups, group => includes(user.groupIds, group.id)), [allGroups, user]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    Group.query().then(groups => {\n      if (!isCancelled) {\n        setAllGroups(isArray(groups) ? groups : []);\n        setIsLoading(false);\n      }\n    });\n  }, []);\n\n  return useMemo(() => ({ groups, allGroups, isLoading }), [groups, allGroups, isLoading]);\n}\n","import { get, map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function UserInfoForm(props) {\n  const { user, onChange } = props;\n\n  const { groups, allGroups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  const handleChange = useImmutableCallback(onChange);\n\n  const saveUser = useCallback(\n    (values, successCallback, errorCallback) => {\n      const data = {\n        ...values,\n        id: user.id,\n      };\n\n      User.save(data)\n        .then(user => {\n          successCallback(\"Saved.\");\n          handleChange(User.convertUserInfo(user));\n        })\n        .catch(error => {\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    },\n    [user, handleChange]\n  );\n\n  const formFields = useMemo(\n    () =>\n      map(\n        [\n          {\n            name: \"name\",\n            title: \"Name\",\n            type: \"text\",\n            initialValue: user.name,\n          },\n          {\n            name: \"email\",\n            title: \"Email\",\n            type: \"email\",\n            initialValue: user.email,\n          },\n          !user.isDisabled && currentUser.id !== user.id\n            ? {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"select\",\n                mode: \"multiple\",\n                options: map(allGroups, group => ({ name: group.name, value: group.id })),\n                initialValue: user.groupIds,\n                loading: isLoadingGroups,\n                placeholder: isLoadingGroups ? \"Loading...\" : \"\",\n              }\n            : {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"content\",\n                required: false,\n                content: isLoadingGroups ? \"Loading...\" : <UserGroups data-test=\"Groups\" groups={groups} />,\n              },\n        ],\n        field => ({ readOnly: user.isDisabled, required: true, ...field })\n      ),\n    [user, groups, allGroups, isLoadingGroups]\n  );\n\n  return (\n    <DynamicComponent name=\"UserProfile.UserInfoForm\" {...props}>\n      <DynamicForm fields={formFields} onSubmit={saveUser} hideSubmitButton={user.isDisabled} />\n    </DynamicComponent>\n  );\n}\n\nUserInfoForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nUserInfoForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function ApiKeyForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n  const apiKeyInputId = useUniqueId(\"apiKey\");\n\n  const regenerateApiKey = useCallback(() => {\n    const doRegenerate = () => {\n      setLoading(true);\n      User.regenerateApiKey(user)\n        .then(apiKey => {\n          if (apiKey) {\n            handleChange({ ...user, apiKey });\n          }\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    Modal.confirm({\n      title: \"Regenerate API Key\",\n      content: \"Are you sure you want to regenerate?\",\n      okText: \"Regenerate\",\n      onOk: doRegenerate,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [user, handleChange]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ApiKeyForm\" {...props}>\n      <Form layout=\"vertical\">\n        <hr />\n        <Form.Item label=\"API Key\" className=\"m-b-10\">\n          <InputWithCopy id={apiKeyInputId} className=\"hide-in-percy\" value={user.apiKey} data-test=\"ApiKey\" readOnly />\n        </Form.Item>\n        <Button className=\"w-100\" onClick={regenerateApiKey} loading={loading} data-test=\"RegenerateApiKey\">\n          Regenerate\n        </Button>\n      </Form>\n    </DynamicComponent>\n  );\n}\n\nApiKeyForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nApiKeyForm.defaultProps = {\n  onChange: () => {},\n};\n","import { isFunction, get } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport User from \"@/services/user\";\nimport notification from \"@/services/notification\";\n\nclass ChangePasswordDialog extends React.Component {\n  static propTypes = {\n    user: UserProfile.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: { value: \"\", error: null, touched: false },\n      newPassword: { value: \"\", error: null, touched: false },\n      repeatPassword: { value: \"\", error: null, touched: false },\n      updatingPassword: false,\n    };\n  }\n\n  fieldError = (name, value) => {\n    if (value.length === 0) return \"This field is required.\";\n    if (name !== \"currentPassword\" && value.length < 6) return \"This field is too short.\";\n    if (name === \"repeatPassword\" && value !== this.state.newPassword.value) return \"Passwords don't match\";\n    return null;\n  };\n\n  validateFields = callback => {\n    const { currentPassword, newPassword, repeatPassword } = this.state;\n\n    const errors = {\n      currentPassword: this.fieldError(\"currentPassword\", currentPassword.value),\n      newPassword: this.fieldError(\"newPassword\", newPassword.value),\n      repeatPassword: this.fieldError(\"repeatPassword\", repeatPassword.value),\n    };\n\n    this.setState({\n      currentPassword: { ...currentPassword, error: errors.currentPassword },\n      newPassword: { ...newPassword, error: errors.newPassword },\n      repeatPassword: { ...repeatPassword, error: errors.repeatPassword },\n    });\n\n    if (isFunction(callback)) {\n      if (errors.currentPassword || errors.newPassword || errors.repeatPassword) {\n        callback(errors);\n      } else callback(null);\n    }\n  };\n\n  updatePassword = () => {\n    const { currentPassword, newPassword, updatingPassword } = this.state;\n\n    if (!updatingPassword) {\n      this.validateFields(err => {\n        if (!err) {\n          const userData = {\n            id: this.props.user.id,\n            old_password: currentPassword.value,\n            password: newPassword.value,\n          };\n\n          this.setState({ updatingPassword: true });\n\n          User.save(userData)\n            .then(() => {\n              notification.success(\"Saved.\");\n              this.props.dialog.close({ success: true });\n            })\n            .catch(error => {\n              notification.error(get(error, \"response.data.message\", \"Failed saving.\"));\n              this.setState({ updatingPassword: false });\n            });\n        } else {\n          this.setState(prevState => ({\n            currentPassword: { ...prevState.currentPassword, touched: true },\n            newPassword: { ...prevState.newPassword, touched: true },\n            repeatPassword: { ...prevState.repeatPassword, touched: true },\n          }));\n        }\n      });\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    const { error } = this.state[name];\n\n    this.setState({ [name]: { value, error, touched: true } }, () => {\n      this.validateFields();\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    const { currentPassword, newPassword, repeatPassword, updatingPassword } = this.state;\n\n    const formItemProps = { className: \"m-b-10\", required: true };\n\n    const inputProps = {\n      onChange: this.handleChange,\n      onPressEnter: this.updatePassword,\n    };\n\n    return (\n      <Modal\n        {...dialog.props}\n        okButtonProps={{ loading: updatingPassword }}\n        onOk={this.updatePassword}\n        title=\"Change Password\">\n        <Form layout=\"vertical\">\n          <Form.Item\n            {...formItemProps}\n            validateStatus={currentPassword.touched && currentPassword.error ? \"error\" : null}\n            help={currentPassword.touched ? currentPassword.error : null}\n            label=\"Current Password\">\n            <Input.Password {...inputProps} name=\"currentPassword\" data-test=\"CurrentPassword\" autoFocus />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={newPassword.touched && newPassword.error ? \"error\" : null}\n            help={newPassword.touched ? newPassword.error : null}\n            label=\"New Password\">\n            <Input.Password {...inputProps} name=\"newPassword\" data-test=\"NewPassword\" />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={repeatPassword.touched && repeatPassword.error ? \"error\" : null}\n            help={repeatPassword.touched ? repeatPassword.error : null}\n            label=\"Repeat New Password\">\n            <Input.Password {...inputProps} name=\"repeatPassword\" data-test=\"RepeatPassword\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ChangePasswordDialog);\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { absoluteUrl } from \"@/services/utils\";\n\nexport default function PasswordLinkAlert(props) {\n  const { user, passwordLink, ...restProps } = props;\n\n  if (!isString(passwordLink)) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordLinkAlert\" {...props}>\n      <Alert\n        message=\"Email not sent!\"\n        description={\n          <React.Fragment>\n            <p>\n              The mail server is not configured, please send the following link to <b>{user.name}</b>:\n            </p>\n            <InputWithCopy value={absoluteUrl(passwordLink)} aria-label=\"Password link\" readOnly />\n          </React.Fragment>\n        }\n        type=\"warning\"\n        className=\"m-t-20\"\n        closable\n        {...restProps}\n      />\n    </DynamicComponent>\n  );\n}\n\nPasswordLinkAlert.propTypes = {\n  user: UserProfile.isRequired,\n  passwordLink: PropTypes.string,\n};\n\nPasswordLinkAlert.defaultProps = {\n  passwordLink: null,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function PasswordResetForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const sendPasswordReset = useCallback(() => {\n    setLoading(true);\n    User.sendPasswordReset(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordResetForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={sendPasswordReset} loading={loading}>\n        Send Password Reset Email\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nPasswordResetForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function ResendInvitationForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const resendInvitation = useCallback(() => {\n    setLoading(true);\n\n    User.resendInvitation(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ResendInvitationForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={resendInvitation} loading={loading}>\n        Resend Invitation\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nResendInvitationForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\n\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\nimport PasswordResetForm from \"./PasswordResetForm\";\nimport ResendInvitationForm from \"./ResendInvitationForm\";\n\nexport default function PasswordForm(props) {\n  const { user } = props;\n\n  const changePassword = useCallback(() => {\n    ChangePasswordDialog.showModal({ user });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordForm\" {...props}>\n      <h5>Password</h5>\n      {user.id === currentUser.id && (\n        <Button className=\"w-100 m-t-10\" onClick={changePassword} data-test=\"ChangePassword\">\n          Change Password\n        </Button>\n      )}\n      {user.id !== currentUser.id && currentUser.isAdmin && (\n        <React.Fragment>\n          {user.isInvitationPending ? <ResendInvitationForm user={user} /> : <PasswordResetForm user={user} />}\n        </React.Fragment>\n      )}\n    </DynamicComponent>\n  );\n}\n\nPasswordForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function ToggleUserForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n\n  const toggleUser = useCallback(() => {\n    const action = user.isDisabled ? User.enableUser : User.disableUser;\n    setLoading(true);\n    action(user)\n      .then(data => {\n        if (data) {\n          handleChange(User.convertUserInfo(data));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user, handleChange]);\n\n  if (!currentUser.isAdmin || user.id === currentUser.id) {\n    return null;\n  }\n\n  const buttonProps = {\n    type: user.isDisabled ? \"primary\" : \"danger\",\n    children: user.isDisabled ? \"Enable User\" : \"Disable User\",\n  };\n\n  return (\n    <DynamicComponent name=\"UserProfile.ToggleUserForm\">\n      <Button className=\"w-100 m-t-10\" onClick={toggleUser} loading={loading} {...buttonProps} />\n    </DynamicComponent>\n  );\n}\n\nToggleUserForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nToggleUserForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useEffect } from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\n\nimport UserInfoForm from \"./UserInfoForm\";\nimport ApiKeyForm from \"./ApiKeyForm\";\nimport PasswordForm from \"./PasswordForm\";\nimport ToggleUserForm from \"./ToggleUserForm\";\n\nexport default function EditableUserProfile(props) {\n  const [user, setUser] = useState(props.user);\n\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4\">\n      <img alt=\"Profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <UserInfoForm user={user} onChange={setUser} />\n      {!user.isDisabled && (\n        <React.Fragment>\n          <ApiKeyForm user={user} onChange={setUser} />\n          <hr />\n          <PasswordForm user={user} />\n        </React.Fragment>\n      )}\n      <hr />\n      <ToggleUserForm user={user} onChange={setUser} />\n    </div>\n  );\n}\n\nEditableUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function ReadOnlyUserProfile({ user }) {\n  const { groups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4 profile__container\">\n      <img alt=\"profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <dl className=\"profile__dl\">\n        <dt>Name:</dt>\n        <dd>{user.name}</dd>\n        <dt>Email:</dt>\n        <dd>{user.email}</dd>\n        <dt className=\"m-b-5\">Groups:</dt>\n        <dd>{isLoadingGroups ? \"Loading...\" : <UserGroups groups={groups} />}</dd>\n      </dl>\n    </div>\n  );\n}\n\nReadOnlyUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport EditableUserProfile from \"./components/EditableUserProfile\";\nimport ReadOnlyUserProfile from \"./components/ReadOnlyUserProfile\";\n\nimport \"./settings.less\";\n\nfunction UserProfile({ userId, onError }) {\n  const [user, setUser] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    User.get({ id: userId || currentUser.id })\n      .then(user => {\n        if (!isCancelled) {\n          setUser(User.convertUserInfo(user));\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [userId, handleError]);\n\n  const canEdit = user && (currentUser.isAdmin || currentUser.id === user.id);\n  return (\n    <React.Fragment>\n      <EmailSettingsWarning featureName=\"invite emails\" className=\"m-b-20\" adminOnly />\n      <div className=\"row\">\n        {!user && <LoadingState className=\"\" />}\n        {user && (\n          <DynamicComponent name=\"UserProfile\" user={user}>\n            {!canEdit && <ReadOnlyUserProfile user={user} />}\n            {canEdit && <EditableUserProfile user={user} />}\n          </DynamicComponent>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nUserProfile.propTypes = {\n  userId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nUserProfile.defaultProps = {\n  userId: null, // defaults to `currentUser.id`\n  onError: () => {},\n};\n\nconst UserProfilePage = wrapSettingsTab(\n  \"Users.Account\",\n  {\n    title: \"Account\",\n    path: \"users/me\",\n    order: 7,\n  },\n  UserProfile\n);\n\nroutes.register(\n  \"Users.Account\",\n  routeWithUserSession({\n    path: \"/users/me\",\n    title: \"Account\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"Users.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/users/:userId\",\n    title: \"Users\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\n","import moment from \"moment\";\nimport { isFunction } from \"lodash\";\n\n// Ensure that this image will be available in assets folder\nimport \"@/assets/images/avatar.svg\";\n\n// Register visualizations\nimport \"@redash/viz/lib\";\n\n// Register routes before registering extensions as they may want to override some\nimport \"@/pages\";\n\nimport \"./antd-spinner\";\n\nmoment.updateLocale(\"en\", {\n  relativeTime: {\n    future: \"%s\",\n    past: \"%s\",\n    s: \"just now\",\n    m: \"a minute ago\",\n    mm: \"%d minutes ago\",\n    h: \"an hour ago\",\n    hh: \"%d hours ago\",\n    d: \"a day ago\",\n    dd: \"%d days ago\",\n    M: \"a month ago\",\n    MM: \"%d months ago\",\n    y: \"a year ago\",\n    yy: \"%d years ago\",\n  },\n});\n\nfunction requireImages() {\n  // client/app/assets/images/<path> => /images/<path>\n  const ctx = require.context(\"@/assets/images/\", true, /\\.(png|jpe?g|gif|svg)$/);\n  ctx.keys().forEach(ctx);\n}\n\nfunction registerExtensions() {\n  const context = require.context(\"extensions\", true, /^((?![\\\\/.]test[\\\\./]).)*\\.jsx?$/);\n  const modules = context\n    .keys()\n    .map(context)\n    .map(module => module.default);\n\n  return modules\n    .filter(isFunction)\n    .filter(f => f.init)\n    .map(f => f());\n}\n\nrequireImages();\nregisterExtensions();\n","import { isString } from \"lodash\";\nimport navigateTo from \"./navigateTo\";\n\nexport default function handleNavigationIntent(event) {\n  let element = event.target;\n  while (element) {\n    if (element.tagName === \"A\") {\n      break;\n    }\n    element = element.parentNode;\n  }\n  if (!element || !element.hasAttribute(\"href\") || element.hasAttribute(\"download\") || element.dataset.skipRouter) {\n    return;\n  }\n\n  // Keep some default behaviour\n  if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n    return;\n  }\n\n  const target = element.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    return;\n  }\n\n  event.preventDefault();\n\n  navigateTo(element.href);\n}\n","import React from \"react\";\nimport Spin from \"antd/lib/spin\";\n\nSpin.setDefaultIndicator(\n  <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n    <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n    <span className=\"sr-only\">Loading...</span>\n  </span>\n);\n","import notification from \"@/services/notification\";\n\nfunction addOnlineListener(notificationKey) {\n  function onlineStateHandler() {\n    notification.close(notificationKey);\n    window.removeEventListener(\"online\", onlineStateHandler);\n  }\n  window.addEventListener(\"online\", onlineStateHandler);\n}\n\nexport default {\n  init() {\n    window.addEventListener(\"offline\", () => {\n      notification.warning(\"Please check your Internet connection.\", null, {\n        key: \"connectionNotification\",\n        duration: null,\n      });\n      addOnlineListener(\"connectionNotification\");\n    });\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"@/config\";\n\nimport ApplicationArea from \"@/components/ApplicationArea\";\nimport offlineListener from \"@/services/offline-listener\";\n\nReactDOM.render(<ApplicationArea />, document.getElementById(\"application-root\"), () => {\n  offlineListener.init();\n});\n","import React, { useState, useEffect } from \"react\";\nimport routes from \"@/services/routes\";\nimport Router from \"./Router\";\nimport handleNavigationIntent from \"./handleNavigationIntent\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport default function ApplicationArea() {\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [unhandledError, setUnhandledError] = useState(null);\n\n  useEffect(() => {\n    if (currentRoute && currentRoute.title) {\n      document.title = currentRoute.title;\n    }\n  }, [currentRoute]);\n\n  useEffect(() => {\n    function globalErrorHandler(event) {\n      event.preventDefault();\n      setUnhandledError(event.error);\n    }\n\n    document.body.addEventListener(\"click\", handleNavigationIntent, false);\n    window.addEventListener(\"error\", globalErrorHandler, false);\n\n    return () => {\n      document.body.removeEventListener(\"click\", handleNavigationIntent, false);\n      window.removeEventListener(\"error\", globalErrorHandler, false);\n    };\n  }, []);\n\n  if (unhandledError) {\n    return <ErrorMessage error={unhandledError} />;\n  }\n\n  return <Router routes={routes.items} onRouteChange={setCurrentRoute} />;\n}\n","module.exports = __webpack_public_path__ + \"images/avatar.svg\";","var map = {\n\t\"./en-SG\": 430,\n\t\"./en-SG.js\": 430,\n\t\"./en-au\": 431,\n\t\"./en-au.js\": 431,\n\t\"./en-ca\": 432,\n\t\"./en-ca.js\": 432,\n\t\"./en-gb\": 433,\n\t\"./en-gb.js\": 433,\n\t\"./en-ie\": 434,\n\t\"./en-ie.js\": 434,\n\t\"./en-il\": 435,\n\t\"./en-il.js\": 435,\n\t\"./en-nz\": 436,\n\t\"./en-nz.js\": 436\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 728;"],"sourceRoot":""}